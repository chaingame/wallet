diff -r -u ./wavi/.gitignore ./pptp/.gitignore
--- ./wavi/.gitignore	Sat Mar 31 23:24:23 2018
+++ ./pptp/.gitignore	Sun Mar 25 19:57:53 2018
@@ -6,13 +6,13 @@
 *.tar.gz
 
 *.exe
-src/wavi
-src/wavid
-src/wavi-cli
-src/wavi-tx
-src/test/test_wavi
-src/qt/test/test_wavi-qt
-src/bench/bench_wavi
+src/pptp
+src/pptpd
+src/pptp-cli
+src/pptp-tx
+src/test/test_pptp
+src/qt/test/test_pptp-qt
+src/bench/bench_pptp
 
 # autoreconf
 Makefile.in
@@ -35,8 +35,8 @@
 config.status
 configure
 libtool
-src/config/wavi-config.h
-src/config/wavi-config.h.in
+src/config/pptp-config.h
+src/config/pptp-config.h.in
 src/config/stamp-h1
 share/setup.nsi
 share/qt/Info.plist
@@ -62,7 +62,7 @@
 *.o
 *.o-*
 *.patch
-.wavi
+.pptp
 *.a
 *.pb.cc
 *.pb.h
@@ -81,12 +81,12 @@
 # Compilation and Qt preprocessor part
 *.qm
 Makefile
-wavi-qt
-Wavi-Qt.app
+pptp-qt
+Pptp-Qt.app
 
 # Unit-tests
 Makefile.test
-wavi-qt_test
+pptp-qt_test
 src/test/buildenv.py
 
 # Resources cpp
@@ -100,7 +100,7 @@
 *.gcno
 *.gcda
 /*.info
-test_wavi.coverage/
+test_pptp.coverage/
 total.coverage/
 coverage_percent.txt
 
@@ -123,12 +123,12 @@
 .autotools
 /doc/doxygen/
 
-libwaviconsensus.pc
-src/qt/wavi-qt.bash
+libpptpconsensus.pc
+src/qt/pptp-qt.bash
 qa/pull-tester/tests-config.sh
 
 #development symlinks
-wavi-cli
-wavid
-wavi-qt
+pptp-cli
+pptpd
+pptp-qt
 make
diff -r -u ./wavi/.travis.yml ./pptp/.travis.yml
--- ./wavi/.travis.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/.travis.yml	Sat Mar 31 12:36:31 2018
@@ -39,19 +39,19 @@
     - HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
 # Win32
     - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
-# 32-bit + wavi
-    - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/wavi" PYZMQ=true
+# 32-bit + pptp
+    - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/pptp" PYZMQ=true
 # Win64
     - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
-# wavid
-    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_WAVI_DEBUG" PYZMQ=true
+# pptpd
+    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_PPTP_DEBUG" PYZMQ=true
 # No wallet
     - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
 # Cross-Mac
     - HOST=x86_64-apple-darwin11 PPA="ppa:bitcoin/bitcoin" PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.9 GOAL="deploy"
 
 before_install:
-    - git clone https://github.com/wavibanana/wavi_hash
+    - git clone https://github.com/conan-equal-newone/pptp_hash
     - travis_retry sudo apt-get install python-dev
     - travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
     - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
@@ -61,7 +61,7 @@
     - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
     - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
     - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
-    - cd wavi_hash && python setup.py install --user && cd ..
+    - cd pptp_hash && python setup.py install --user && cd ..
 before_script:
     - unset CC; unset CXX
     - unset DISPLAY
@@ -76,13 +76,13 @@
     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
     - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
     - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
-    - make distdir PACKAGE=wavi VERSION=$HOST
-    - cd wavi-$HOST
+    - make distdir PACKAGE=pptp VERSION=$HOST
+    - cd pptp-$HOST
     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
     - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
     - if [ "$RUN_TESTS" = "true" -a "$WINE" != "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi
-    - if [ "$RUN_TESTS" = "true" -a "$WINE" = "true" ]; then wine  src/test/test_wavi.exe --log_level=test_suite; fi
+    - if [ "$RUN_TESTS" = "true" -a "$WINE" = "true" ]; then wine  src/test/test_pptp.exe --log_level=test_suite; fi
     - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
 after_script:
     - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp -r $BASE_OUTDIR server" || echo "upload failed"); fi
diff -r -u ./wavi/.tx/config ./pptp/.tx/config
--- ./wavi/.tx/config	Sat Mar 31 23:24:23 2018
+++ ./pptp/.tx/config	Sun Mar 25 19:57:53 2018
@@ -1,7 +1,7 @@
 [main]
 host = https://www.transifex.com
 
-[wavi.qt-translation-012x]
-file_filter = src/qt/locale/wavi_<lang>.ts
-source_file = src/qt/locale/wavi_en.ts
+[pptp.qt-translation-012x]
+file_filter = src/qt/locale/pptp_<lang>.ts
+source_file = src/qt/locale/pptp_en.ts
 source_lang = en
diff -r -u ./wavi/build-aux/m4/bitcoin_find_bdb48.m4 ./pptp/build-aux/m4/bitcoin_find_bdb48.m4
--- ./wavi/build-aux/m4/bitcoin_find_bdb48.m4	Sat Mar 31 23:24:23 2018
+++ ./pptp/build-aux/m4/bitcoin_find_bdb48.m4	Sun Mar 25 19:51:33 2018
@@ -38,7 +38,7 @@
   done
   if test "x$bdbpath" = "xX"; then
     AC_MSG_RESULT([no])
-    AC_MSG_ERROR([libdb_cxx headers missing, Wavi Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
+    AC_MSG_ERROR([libdb_cxx headers missing, Pptp Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
   elif test "x$bdb48path" = "xX"; then
     BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)
     AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[
@@ -60,7 +60,7 @@
     ])
   done
   if test "x$BDB_LIBS" = "x"; then
-      AC_MSG_ERROR([libdb_cxx missing, Wavi Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
+      AC_MSG_ERROR([libdb_cxx missing, Pptp Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
   fi
   AC_SUBST(BDB_LIBS)
 ])
diff -r -u ./wavi/build-aux/m4/bitcoin_qt.m4 ./pptp/build-aux/m4/bitcoin_qt.m4
--- ./wavi/build-aux/m4/bitcoin_qt.m4	Sat Mar 31 23:24:23 2018
+++ ./pptp/build-aux/m4/bitcoin_qt.m4	Sun Mar 25 19:51:33 2018
@@ -3,7 +3,7 @@
 AC_DEFUN([BITCOIN_QT_FAIL],[
   if test "x$bitcoin_qt_want_version" = "xauto" && test x$bitcoin_qt_force != xyes; then
     if test x$bitcoin_enable_qt != xno; then
-      AC_MSG_WARN([$1; wavi-qt frontend will not be built])
+      AC_MSG_WARN([$1; pptp-qt frontend will not be built])
     fi
     bitcoin_enable_qt=no
     bitcoin_enable_qt_test=no
@@ -50,7 +50,7 @@
   dnl enable qt support
   AC_ARG_WITH([gui],
     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],
-    [build wavi-qt GUI (default=auto, qt5 tried first)])],
+    [build pptp-qt GUI (default=auto, qt5 tried first)])],
     [
      bitcoin_qt_want_version=$withval
      if test x$bitcoin_qt_want_version = xyes; then
@@ -235,7 +235,7 @@
 
 
   dnl enable qt support
-  AC_MSG_CHECKING(whether to build Wavi Core GUI)
+  AC_MSG_CHECKING(whether to build Pptp Core GUI)
   BITCOIN_QT_CHECK([
     bitcoin_enable_qt=yes
     bitcoin_enable_qt_test=yes
diff -r -u ./wavi/configure.ac ./pptp/configure.ac
--- ./wavi/configure.ac	Sat Mar 31 23:24:23 2018
+++ ./pptp/configure.ac	Sat Mar 31 12:23:09 2018
@@ -6,17 +6,17 @@
 define(_CLIENT_VERSION_BUILD, 4)
 define(_CLIENT_VERSION_IS_RELEASE, true)
 define(_COPYRIGHT_YEAR, 2018)
-AC_INIT([Wavi Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/wavibanana/wavi/issues],[wavicore])
+AC_INIT([Pptp Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/conan-equal-newone/pptp/issues],[pptpcore])
 AC_CONFIG_SRCDIR([src/validation.cpp])
-AC_CONFIG_HEADERS([src/config/wavi-config.h])
+AC_CONFIG_HEADERS([src/config/pptp-config.h])
 AC_CONFIG_AUX_DIR([build-aux])
 AC_CONFIG_MACRO_DIR([build-aux/m4])
 
 AC_CANONICAL_HOST
 
-AH_TOP([#ifndef WAVI_CONFIG_H])
-AH_TOP([#define WAVI_CONFIG_H])
-AH_BOTTOM([#endif //WAVI_CONFIG_H])
+AH_TOP([#ifndef PPTP_CONFIG_H])
+AH_TOP([#define PPTP_CONFIG_H])
+AH_BOTTOM([#endif //PPTP_CONFIG_H])
 
 dnl faketime breaks configure and is only needed for make. Disable it here.
 unset FAKETIME
@@ -220,7 +220,7 @@
 
 AC_ARG_WITH([utils],
   [AS_HELP_STRING([--with-utils],
-  [build wavi-cli wavi-tx (default=yes)])],
+  [build pptp-cli pptp-tx (default=yes)])],
   [build_bitcoin_utils=$withval],
   [build_bitcoin_utils=yes])
 
@@ -232,7 +232,7 @@
 
 AC_ARG_WITH([daemon],
   [AS_HELP_STRING([--with-daemon],
-  [build wavid daemon (default=yes)])],
+  [build pptpd daemon (default=yes)])],
   [build_bitcoind=$withval],
   [build_bitcoind=yes])
 
@@ -419,7 +419,7 @@
 dnl Check for pthread compile/link requirements
 AX_PTHREAD
 
-# The following macro will add the necessary defines to wavi-config.h, but
+# The following macro will add the necessary defines to pptp-config.h, but
 # they also need to be passed down to any subprojects. Pull the results out of
 # the cache and add them to CPPFLAGS.
 AC_SYS_LARGEFILE
@@ -887,11 +887,11 @@
 
 BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)
 
-AC_MSG_CHECKING([whether to build wavid])
+AC_MSG_CHECKING([whether to build pptpd])
 AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])
 AC_MSG_RESULT($build_bitcoind)
 
-AC_MSG_CHECKING([whether to build utils (wavi-cli wavi-tx)])
+AC_MSG_CHECKING([whether to build utils (pptp-cli pptp-tx)])
 AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])
 AC_MSG_RESULT($build_bitcoin_utils)
 
@@ -899,7 +899,7 @@
 AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])
 if test x$build_bitcoin_libs = xyes; then
   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])
-  AC_CONFIG_FILES([libwaviconsensus.pc:libwaviconsensus.pc.in])
+  AC_CONFIG_FILES([libpptpconsensus.pc:libpptpconsensus.pc.in])
 fi
 AC_MSG_RESULT($build_bitcoin_libs)
 
@@ -992,7 +992,7 @@
     AC_MSG_WARN("xgettext is required to update qt translations")
   fi
 
-  AC_MSG_CHECKING([whether to build test_wavi-qt])
+  AC_MSG_CHECKING([whether to build test_pptp-qt])
   if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then
     AC_MSG_RESULT([yes])
     BUILD_TEST_QT="yes"
@@ -1003,7 +1003,7 @@
 
 AM_CONDITIONAL([ENABLE_ZMQ], [test "x$use_zmq" = "xyes"])
 
-AC_MSG_CHECKING([whether to build test_wavi])
+AC_MSG_CHECKING([whether to build test_pptp])
 if test x$use_tests = xyes; then
   AC_MSG_RESULT([yes])
   BUILD_TEST="yes"
diff -r -u ./wavi/contrib/debian/changelog ./pptp/contrib/debian/changelog
--- ./wavi/contrib/debian/changelog	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/changelog	Sun Mar 25 19:57:53 2018
@@ -236,7 +236,7 @@
 
   * New upstream release.
 
- -- Luke Wavijr <luke+bitcoin+deb@wavijr.org>  Tue, 10 Jan 2012 15:57:00 -0500
+ -- Luke Pptpjr <luke+bitcoin+deb@pptpjr.org>  Tue, 10 Jan 2012 15:57:00 -0500
 
 bitcoin (0.5.2-natty1) natty; urgency=low
 
@@ -251,7 +251,7 @@
 
   * New upstream release.
 
- -- Luke Wavijr <luke+bitcoin+deb@wavijr.org>  Fri, 16 Dec 2011 17:57:00 -0500
+ -- Luke Pptpjr <luke+bitcoin+deb@pptpjr.org>  Fri, 16 Dec 2011 17:57:00 -0500
 
 bitcoin (0.5.1-natty0) natty; urgency=low
 
diff -r -u ./wavi/contrib/debian/control ./pptp/contrib/debian/control
--- ./wavi/contrib/debian/control	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/control	Sat Mar 31 12:23:47 2018
@@ -1,8 +1,8 @@
-Source: wavi
+Source: pptp
 Section: utils
 Priority: optional
-Maintainer: Holger Schinzel <holger@wavi.org>
-Uploaders: Holger Schinzel <holger@wavi.org>
+Maintainer: Holger Schinzel <holger@pptp.org>
+Uploaders: Holger Schinzel <holger@pptp.org>
 Build-Depends: debhelper,
  devscripts,
  automake,
@@ -24,45 +24,45 @@
  libprotobuf-dev, protobuf-compiler,
  python
 Standards-Version: 3.9.2
-Homepage: https://wavidev-the-man.github.io/wavi/
-Vcs-Git: git://github.com/wavidev-the-man/wavi.git
-Vcs-Browser: https://github.com/wavidev-the-man/wavi
+Homepage: https://github.com/conan-equal-newone/pptp/
+Vcs-Git: git://github.com/conan-equal-newone/pptp.git
+Vcs-Browser: https://github.com/conan-equal-newone/pptp
 
-Package: wavid
+Package: pptpd
 Architecture: any
 Depends: ${shlibs:Depends}, ${misc:Depends}
 Description: peer-to-peer network based digital currency - daemon
- Wavi is an experimental new digital currency that enables anonymous, instant
- payments to anyone, anywhere in the world. Wavi uses peer-to-peer
+ Pptp is an experimental new digital currency that enables anonymous, instant
+ payments to anyone, anywhere in the world. Pptp uses peer-to-peer
  technology to operate with no central authority: managing transactions
- and issuing money are carried out collectively by the network. Wavi Core
+ and issuing money are carried out collectively by the network. Pptp Core
  is the name of the open source software which enables the use of this currency.
  .
- This package provides the daemon, wavid, and the CLI tool
- wavi-cli to interact with the daemon.
+ This package provides the daemon, pptpd, and the CLI tool
+ pptp-cli to interact with the daemon.
 
-Package: wavi-qt
+Package: pptp-qt
 Architecture: any
 Depends: ${shlibs:Depends}, ${misc:Depends}
 Description: peer-to-peer network based digital currency - Qt GUI
- Wavi is an experimental new digital currency that enables anonymous, instant
- payments to anyone, anywhere in the world. Wavi uses peer-to-peer
+ Pptp is an experimental new digital currency that enables anonymous, instant
+ payments to anyone, anywhere in the world. Pptp uses peer-to-peer
  technology to operate with no central authority: managing transactions
- and issuing money are carried out collectively by the network. Wavi Core
+ and issuing money are carried out collectively by the network. Pptp Core
  is the name of the open source software which enables the use of this currency.
  .
- This package provides Wavi-Qt, a GUI for Wavi based on Qt.
+ This package provides Pptp-Qt, a GUI for Pptp based on Qt.
 
-Package: wavi-tx
+Package: pptp-tx
 Architecture: any
 Depends: ${shlibs:Depends}, ${misc:Depends}
 Description: peer-to-peer digital currency - standalone transaction tool
- Wavi is an experimental new digital currency that enables anonymous, instant
- payments to anyone, anywhere in the world. Wavi uses peer-to-peer
+ Pptp is an experimental new digital currency that enables anonymous, instant
+ payments to anyone, anywhere in the world. Pptp uses peer-to-peer
  technology to operate with no central authority: managing transactions
- and issuing money are carried out collectively by the network. Wavi Core
+ and issuing money are carried out collectively by the network. Pptp Core
  is the name of the open source software which enables the use of this currency.
  .
- This package provides wavi-tx, a command-line transaction creation
- tool which can be used without a wavi daemon.  Some means of
+ This package provides pptp-tx, a command-line transaction creation
+ tool which can be used without a pptp daemon.  Some means of
  exchanging minimal transaction data with peers is still required.
diff -r -u ./wavi/contrib/debian/copyright ./pptp/contrib/debian/copyright
--- ./wavi/contrib/debian/copyright	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/copyright	Sun Mar 25 19:51:33 2018
@@ -54,7 +54,7 @@
        src/qt/res/icons/*/network_disabled.png
        src/qt/res/src/network_disabled.svg
 Copyright: Marco Falke
-           Luke Wavijr
+           Luke Pptpjr
 License: Expat
 Comment: Inspired by Stephan Hutchings Typicons
 
diff -r -u ./wavi/contrib/debian/dash-qt.desktop ./pptp/contrib/debian/dash-qt.desktop
--- ./wavi/contrib/debian/dash-qt.desktop	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/dash-qt.desktop	Sun Mar 25 19:58:18 2018
@@ -1,12 +1,12 @@
 [Desktop Entry]
 Encoding=UTF-8
-Name=Wavi
-Comment=Wavi P2P Cryptocurrency
-Comment[fr]=Wavi, monnaie virtuelle cryptographique pair à pair
-Comment[tr]=Wavi, eşten eşe kriptografik sanal para birimi
-Exec=wavi-qt %u
+Name=Pptp
+Comment=Pptp P2P Cryptocurrency
+Comment[fr]=Pptp, monnaie virtuelle cryptographique pair à pair
+Comment[tr]=Pptp, eşten eşe kriptografik sanal para birimi
+Exec=pptp-qt %u
 Terminal=false
 Type=Application
-Icon=wavi128
-MimeType=x-scheme-handler/wavi;
+Icon=pptp128
+MimeType=x-scheme-handler/pptp;
 Categories=Office;Finance;
Only in ./pptp/contrib/debian/examples: pptp.conf
Only in ./wavi/contrib/debian/examples: wabi.conf
Only in ./wavi/contrib/debian/examples: wavi.conf
Only in ./pptp/contrib/debian/manpages: pptp-cli.1
Only in ./pptp/contrib/debian/manpages: pptp-qt.1
Only in ./pptp/contrib/debian/manpages: pptp.conf.5
Only in ./pptp/contrib/debian/manpages: pptpd.1
Only in ./wavi/contrib/debian/manpages: wavi-cli.1
Only in ./wavi/contrib/debian/manpages: wavi-qt.1
Only in ./wavi/contrib/debian/manpages: wavi.conf.5
Only in ./wavi/contrib/debian/manpages: wavid.1
Only in ./pptp/contrib/debian: pptp-qt.install
Only in ./pptp/contrib/debian: pptp-qt.lintian-overrides
Only in ./pptp/contrib/debian: pptp-qt.protocol
Only in ./pptp/contrib/debian: pptp-tx.install
Only in ./pptp/contrib/debian: pptpd.bash-completion
Only in ./pptp/contrib/debian: pptpd.examples
Only in ./pptp/contrib/debian: pptpd.install
Only in ./pptp/contrib/debian: pptpd.lintian-overrides
Only in ./pptp/contrib/debian: pptpd.manpages
diff -r -u ./wavi/contrib/debian/README.md ./pptp/contrib/debian/README.md
--- ./wavi/contrib/debian/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/README.md	Sun Mar 25 19:57:53 2018
@@ -1,21 +1,21 @@
 
 Debian
 ====================
-This directory contains files used to package wavid/wavi-qt
-for Debian-based Linux systems. If you compile wavid/wavi-qt yourself, there are some useful files here.
+This directory contains files used to package pptpd/pptp-qt
+for Debian-based Linux systems. If you compile pptpd/pptp-qt yourself, there are some useful files here.
 
-## wavi: URI support ##
+## pptp: URI support ##
 
 
-wavi-qt.desktop  (Gnome / Open Desktop)
+pptp-qt.desktop  (Gnome / Open Desktop)
 To install:
 
-	sudo desktop-file-install wavi-qt.desktop
+	sudo desktop-file-install pptp-qt.desktop
 	sudo update-desktop-database
 
 If you build yourself, you will either need to modify the paths in
-the .desktop file or copy or symlink your wavi-qt binary to `/usr/bin`
-and the `../../share/pixmaps/wavi128.png` to `/usr/share/pixmaps`
+the .desktop file or copy or symlink your pptp-qt binary to `/usr/bin`
+and the `../../share/pixmaps/pptp128.png` to `/usr/share/pixmaps`
 
-wavi-qt.protocol (KDE)
+pptp-qt.protocol (KDE)
 
diff -r -u ./wavi/contrib/debian/rules ./pptp/contrib/debian/rules
--- ./wavi/contrib/debian/rules	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/rules	Sun Mar 25 19:57:54 2018
@@ -1,19 +1,19 @@
 #!/usr/bin/make -f
 # -*- mode: makefile; coding: utf-8 -*-
 
-#DEB_MAKE_CHECK_TARGET = test_wavi
-#build/wavid::
-#	$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_wavi)
+#DEB_MAKE_CHECK_TARGET = test_pptp
+#build/pptpd::
+#	$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_pptp)
 
-DEB_INSTALL_EXAMPLES_wavid += debian/examples/*
-DEB_INSTALL_MANPAGES_wavid += debian/manpages/*
+DEB_INSTALL_EXAMPLES_pptpd += debian/examples/*
+DEB_INSTALL_MANPAGES_pptpd += debian/manpages/*
 
 %:
 	dh --with bash-completion $@
 
 override_dh_auto_clean:
 	if [ -f Makefile ]; then $(MAKE) distclean; fi
-	rm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/wavi-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in
+	rm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/pptp-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in
 
 # Yea, autogen should be run on the source archive, but I like doing git archive
 override_dh_auto_configure:
Only in ./wavi/contrib/debian: wabid.manpages
diff -r -u ./wavi/contrib/debian/watch ./pptp/contrib/debian/watch
--- ./wavi/contrib/debian/watch	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/debian/watch	Sun Mar 25 19:57:54 2018
@@ -2,4 +2,4 @@
 version=3
 # use qa.debian.org redirector; see man uscan
 opts=uversionmangle=s/(\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\d*// \
- http://githubredir.debian.net/github/wavibanana/wavi v(.*).tar.gz
+ http://githubredir.debian.net/github/pptp/pptp v(.*).tar.gz
Only in ./wavi/contrib/debian: wavi-qt.install
Only in ./wavi/contrib/debian: wavi-qt.lintian-overrides
Only in ./wavi/contrib/debian: wavi-qt.protocol
Only in ./wavi/contrib/debian: wavi-tx.install
Only in ./wavi/contrib/debian: wavid.bash-completion
Only in ./wavi/contrib/debian: wavid.examples
Only in ./wavi/contrib/debian: wavid.install
Only in ./wavi/contrib/debian: wavid.lintian-overrides
Only in ./wavi/contrib/debian: wavid.manpages
diff -r -u ./wavi/contrib/devtools/README.md ./pptp/contrib/devtools/README.md
--- ./wavi/contrib/devtools/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/devtools/README.md	Sun Mar 25 19:57:54 2018
@@ -98,10 +98,10 @@
 
 If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:
 
-    .../64/test_wavi: symbol memcpy from unsupported version GLIBC_2.14
-    .../64/test_wavi: symbol __fdelt_chk from unsupported version GLIBC_2.15
-    .../64/test_wavi: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15
-    .../64/test_wavi: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15
+    .../64/test_pptp: symbol memcpy from unsupported version GLIBC_2.14
+    .../64/test_pptp: symbol __fdelt_chk from unsupported version GLIBC_2.15
+    .../64/test_pptp: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15
+    .../64/test_pptp: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15
 
 update-translations.py
 ======================
diff -r -u ./wavi/contrib/devtools/update-translations.py ./pptp/contrib/devtools/update-translations.py
--- ./wavi/contrib/devtools/update-translations.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/devtools/update-translations.py	Sun Mar 25 19:57:54 2018
@@ -26,7 +26,7 @@
 # Name of transifex tool
 TX = 'tx'
 # Name of source language file
-SOURCE_LANG = 'wavi_en.ts'
+SOURCE_LANG = 'pptp_en.ts'
 # Directory with locale files
 LOCALE_DIR = 'src/qt/locale'
 # Minimum number of messages for translation to be considered at all
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-linux.yml ./pptp/contrib/gitian-descriptors/gitian-linux.yml
--- ./wavi/contrib/gitian-descriptors/gitian-linux.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-linux.yml	Sat Mar 31 12:25:20 2018
@@ -1,5 +1,5 @@
 ---
-name: "wavi-linux-0.12"
+name: "pptp-linux-0.12"
 enable_cache: true
 suites:
 - "trusty"
@@ -20,8 +20,8 @@
 - "python"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi.git"
-  "dir": "wavi"
+- "url": "https://github.com/conan-equal-newone/pptp.git"
+  "dir": "pptp"
 files: []
 script: |
   WRAP_DIR=$HOME/wrapped
@@ -68,7 +68,7 @@
   done
   export PATH=${WRAP_DIR}:${PATH}
 
-  cd wavi
+  cd pptp
   BASEPREFIX=`pwd`/depends
   # Build dependencies for each host
   for i in $HOSTS; do
@@ -79,13 +79,13 @@
   ./autogen.sh
   CONFIG_SITE=${BASEPREFIX}/`echo "${HOSTS}" | awk '{print $1;}'`/share/config.site ./configure --prefix=/
   make dist
-  SOURCEDIST=`echo wavicore-*.tar.gz`
+  SOURCEDIST=`echo pptpcore-*.tar.gz`
   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`
   # Correct tar file order
   mkdir -p temp
   pushd temp
   tar xf ../$SOURCEDIST
-  find wavicore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
+  find pptpcore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
   popd
 
   ORIGPATH="$PATH"
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-osx-signer.yml ./pptp/contrib/gitian-descriptors/gitian-osx-signer.yml
--- ./wavi/contrib/gitian-descriptors/gitian-osx-signer.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-osx-signer.yml	Sat Mar 31 12:25:34 2018
@@ -1,5 +1,5 @@
 ---
-name: "wavi-dmg-signer"
+name: "pptp-dmg-signer"
 suites:
 - "trusty"
 architectures:
@@ -8,10 +8,10 @@
 - "faketime"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi-detached-sigs.git"
+- "url": "https://github.com/conan-equal-newone/pptp-detached-sigs.git"
   "dir": "signature"
 files:
-- "wavi-osx-unsigned.tar.gz"
+- "pptp-osx-unsigned.tar.gz"
 script: |
   WRAP_DIR=$HOME/wrapped
   mkdir -p ${WRAP_DIR}
@@ -28,10 +28,10 @@
     chmod +x ${WRAP_DIR}/${prog}
   done
 
-  UNSIGNED=wavi-osx-unsigned.tar.gz
-  SIGNED=wavi-osx-signed.dmg
+  UNSIGNED=pptp-osx-unsigned.tar.gz
+  SIGNED=pptp-osx-signed.dmg
 
   tar -xf ${UNSIGNED}
   ./detached-sig-apply.sh ${UNSIGNED} signature/osx
-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V "Wavi-Core" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app
+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V "Pptp-Core" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app
   ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-osx.yml ./pptp/contrib/gitian-descriptors/gitian-osx.yml
--- ./wavi/contrib/gitian-descriptors/gitian-osx.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-osx.yml	Sat Mar 31 12:25:50 2018
@@ -1,5 +1,5 @@
 ---
-name: "wavi-osx-0.12"
+name: "pptp-osx-0.12"
 enable_cache: true
 suites:
 - "trusty"
@@ -23,8 +23,8 @@
 - "python"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi.git"
-  "dir": "wavi"
+- "url": "https://github.com/conan-equal-newone/pptp.git"
+  "dir": "pptp"
 files:
 - "MacOSX10.9.sdk.tar.gz"
 script: |
@@ -71,7 +71,7 @@
   done
   export PATH=${WRAP_DIR}:${PATH}
 
-  cd wavi
+  cd pptp
   BASEPREFIX=`pwd`/depends
 
   mkdir -p ${BASEPREFIX}/SDKs
@@ -86,14 +86,14 @@
   ./autogen.sh
   CONFIG_SITE=${BASEPREFIX}/`echo "${HOSTS}" | awk '{print $1;}'`/share/config.site ./configure --prefix=/
   make dist
-  SOURCEDIST=`echo wavicore-*.tar.gz`
+  SOURCEDIST=`echo pptpcore-*.tar.gz`
   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`
 
   # Correct tar file order
   mkdir -p temp
   pushd temp
   tar xf ../$SOURCEDIST
-  find wavicore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
+  find pptpcore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
   popd
 
   ORIGPATH="$PATH"
@@ -123,7 +123,7 @@
     popd
 
     make deploy
-    ${WRAP_DIR}/dmg dmg Wavi-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg
+    ${WRAP_DIR}/dmg dmg Pptp-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg
 
     cd installed
     find . -name "lib*.la" -delete
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-rpi2.yml ./pptp/contrib/gitian-descriptors/gitian-rpi2.yml
--- ./wavi/contrib/gitian-descriptors/gitian-rpi2.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-rpi2.yml	Sat Mar 31 12:26:08 2018
@@ -1,5 +1,5 @@
 ---
-name: "wavi-raspberry-0.12"
+name: "pptp-raspberry-0.12"
 enable_cache: true
 suites:
 - "precise"
@@ -17,8 +17,8 @@
 - "binutils-gold"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi.git"
-  "dir": "wavi"
+- "url": "https://github.com/conan-equal-newone/pptp.git"
+  "dir": "pptp"
 files:
 - "raspberrypi-tools.tar.gz"
 script: |
@@ -67,7 +67,7 @@
   done
   export PATH=${WRAP_DIR}:${PATH}
 
-  cd wavi
+  cd pptp
   BASEPREFIX=`pwd`/depends
   # Build dependencies for each host
   for i in $HOSTS; do
@@ -78,13 +78,13 @@
   ./autogen.sh
   ./configure --prefix=${BASEPREFIX}/`echo "${HOSTS}" | awk '{print $1;}'`
   make NO_QT=1 dist
-  SOURCEDIST=`echo wavicore-*.tar.gz`
+  SOURCEDIST=`echo pptpcore-*.tar.gz`
   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`
   # Correct tar file order
   mkdir -p temp
   pushd temp
   tar xf ../$SOURCEDIST
-  find wavicore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
+  find pptpcore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
   popd
 
   ORIGPATH="$PATH"
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-win-signer.yml ./pptp/contrib/gitian-descriptors/gitian-win-signer.yml
--- ./wavi/contrib/gitian-descriptors/gitian-win-signer.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-win-signer.yml	Sat Mar 31 12:26:22 2018
@@ -9,7 +9,7 @@
 - "autoconf"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi-detached-sigs.git"
+- "url": "https://github.com/conan-equal-newone/pptp-detached-sigs.git"
   "dir": "signature"
 files:
 - "osslsigncode-1.7.1.tar.gz"
diff -r -u ./wavi/contrib/gitian-descriptors/gitian-win.yml ./pptp/contrib/gitian-descriptors/gitian-win.yml
--- ./wavi/contrib/gitian-descriptors/gitian-win.yml	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/gitian-win.yml	Sat Mar 31 12:26:35 2018
@@ -1,5 +1,5 @@
 ---
-name: "wavi-win-0.12"
+name: "pptp-win-0.12"
 enable_cache: true
 suites:
 - "trusty"
@@ -23,8 +23,8 @@
 - "python"
 reference_datetime: "2017-01-01 00:00:00"
 remotes:
-- "url": "https://github.com/wavibanana/wavi.git"
-  "dir": "wavi"
+- "url": "https://github.com/conan-equal-newone/pptp.git"
+  "dir": "pptp"
 files: []
 script: |
   WRAP_DIR=$HOME/wrapped
@@ -94,7 +94,7 @@
 
   export PATH=${WRAP_DIR}:${PATH}
 
-  cd wavi
+  cd pptp
   BASEPREFIX=`pwd`/depends
   # Build dependencies for each host
   for i in $HOSTS; do
@@ -105,14 +105,14 @@
   ./autogen.sh
   CONFIG_SITE=${BASEPREFIX}/`echo "${HOSTS}" | awk '{print $1;}'`/share/config.site ./configure --prefix=/
   make dist
-  SOURCEDIST=`echo wavicore-*.tar.gz`
+  SOURCEDIST=`echo pptpcore-*.tar.gz`
   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`
 
   # Correct tar file order
   mkdir -p temp
   pushd temp
   tar xf ../$SOURCEDIST
-  find wavicore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
+  find pptpcore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST
   mkdir -p $OUTDIR/src
   cp ../$SOURCEDIST $OUTDIR/src
   popd
@@ -132,7 +132,7 @@
     make ${MAKEOPTS} -C src check-security
     make deploy
     make install DESTDIR=${INSTALLPATH}
-    cp -f wavicore-*setup*.exe $OUTDIR/
+    cp -f pptpcore-*setup*.exe $OUTDIR/
     cd installed
     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/
     find . -name "lib*.la" -delete
diff -r -u ./wavi/contrib/gitian-descriptors/README.md ./pptp/contrib/gitian-descriptors/README.md
--- ./wavi/contrib/gitian-descriptors/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/gitian-descriptors/README.md	Sat Mar 31 12:25:02 2018
@@ -19,7 +19,7 @@
 
 Once you've got the right hardware and software:
 
-    git clone git://github.com/wavibanana/wavi.git
+    git clone git://github.com/conan-equal-newone/pptp.git
     git clone git://github.com/devrandom/gitian-builder.git
     mkdir gitian-builder/inputs
     cd gitian-builder/inputs
@@ -61,5 +61,5 @@
 5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the "Once you've got the right hardware and software" instructions above:
 
 	export USE_LXC=1
-	git clone git://github.com/wavibanana/wavi.git
+	git clone git://github.com/conan-equal-newone/pptp.git
 	... etc
Only in ./pptp/contrib/init: org.pptp.pptpd.plist
Only in ./wavi/contrib/init: org.wavi.wavid.plist
Only in ./pptp/contrib/init: pptpd.conf
Only in ./pptp/contrib/init: pptpd.init
Only in ./pptp/contrib/init: pptpd.openrc
Only in ./pptp/contrib/init: pptpd.openrcconf
Only in ./pptp/contrib/init: pptpd.service
diff -r -u ./wavi/contrib/init/README.md ./pptp/contrib/init/README.md
--- ./wavi/contrib/init/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/init/README.md	Sun Mar 25 19:57:54 2018
@@ -1,11 +1,11 @@
 Sample configuration files for:
 
-SystemD: wavid.service
-Upstart: wavid.conf
-OpenRC:  wavid.openrc
-         wavid.openrcconf
-CentOS:  wavid.init
-OS X:    org.wavi.wavid.plist
+SystemD: pptpd.service
+Upstart: pptpd.conf
+OpenRC:  pptpd.openrc
+         pptpd.openrcconf
+CentOS:  pptpd.init
+OS X:    org.pptp.pptpd.plist
 
 have been made available to assist packagers in creating node packages here.
 
Only in ./wavi/contrib/init: wavid.conf
Only in ./wavi/contrib/init: wavid.init
Only in ./wavi/contrib/init: wavid.openrc
Only in ./wavi/contrib/init: wavid.openrcconf
Only in ./wavi/contrib/init: wavid.service
diff -r -u ./wavi/contrib/linearize/example-linearize-testnet.cfg ./pptp/contrib/linearize/example-linearize-testnet.cfg
--- ./wavi/contrib/linearize/example-linearize-testnet.cfg	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/linearize/example-linearize-testnet.cfg	Sun Mar 25 19:57:54 2018
@@ -10,7 +10,7 @@
 
 # bootstrap.dat input/output settings (linearize-data)
 netmagic=cee2caff
-input=/home/example/.wavicore/testnet3/blocks
+input=/home/example/.pptpcore/testnet3/blocks
 output_file=/home/example/Downloads/bootstrap.dat
 hashlist=hashlist.txt
 split_year=1
diff -r -u ./wavi/contrib/linearize/example-linearize.cfg ./pptp/contrib/linearize/example-linearize.cfg
--- ./wavi/contrib/linearize/example-linearize.cfg	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/linearize/example-linearize.cfg	Sun Mar 25 19:57:54 2018
@@ -10,7 +10,7 @@
 
 # bootstrap.dat input/output settings (linearize-data)
 netmagic=bf0c6bbd
-input=/home/example/.wavicore/blocks
+input=/home/example/.pptpcore/blocks
 output_file=/home/example/Downloads/bootstrap.dat
 hashlist=hashlist.txt
 split_year=1
diff -r -u ./wavi/contrib/linearize/linearize-data.py ./pptp/contrib/linearize/linearize-data.py
--- ./wavi/contrib/linearize/linearize-data.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/linearize/linearize-data.py	Sun Mar 25 19:57:54 2018
@@ -17,7 +17,7 @@
 import httplib
 import sys
 import hashlib
-import wavi_hash
+import pptp_hash
 import datetime
 import time
 from collections import namedtuple
@@ -55,7 +55,7 @@
 	#hash2_o = hash2.digest()
 
 	#return hash2_o
-        pow_hash = wavi_hash.getPoWHash(blk_hdr)
+        pow_hash = pptp_hash.getPoWHash(blk_hdr)
         return pow_hash
 
 def calc_hash_str(blk_hdr):
diff -r -u ./wavi/contrib/linearize/README.md ./pptp/contrib/linearize/README.md
--- ./wavi/contrib/linearize/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/linearize/README.md	Sat Mar 31 12:27:14 2018
@@ -1,9 +1,9 @@
 # Linearize
 Construct a linear, no-fork, best version of the blockchain.
 
-## Step 0: Install wavi_hash
+## Step 0: Install pptp_hash
 
-https://github.com/wavibanana/wavi_hash
+https://github.com/conan-equal-newone/pptp_hash
 
 ## Step 1: Download hash list
 
diff -r -u ./wavi/contrib/macdeploy/Base.lproj/InfoPlist.strings ./pptp/contrib/macdeploy/Base.lproj/InfoPlist.strings
--- ./wavi/contrib/macdeploy/Base.lproj/InfoPlist.strings	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/macdeploy/Base.lproj/InfoPlist.strings	Sun Mar 25 19:51:35 2018
@@ -1 +1 @@
-{	CFBundleDisplayName = "Wavi Core"; CFBundleName = "Wavi Core"; }
+{	CFBundleDisplayName = "Pptp Core"; CFBundleName = "Pptp Core"; }
diff -r -u ./wavi/contrib/macdeploy/detached-sig-create.sh ./pptp/contrib/macdeploy/detached-sig-create.sh
--- ./wavi/contrib/macdeploy/detached-sig-create.sh	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/macdeploy/detached-sig-create.sh	Sun Mar 25 19:48:57 2018
@@ -2,7 +2,7 @@
 set -e
 
 ROOTDIR=dist
-BUNDLE="${ROOTDIR}/Wavi-Qt.app"
+BUNDLE="${ROOTDIR}/Pptp-Qt.app"
 CODESIGN=codesign
 TEMPDIR=sign.temp
 TEMPLIST=${TEMPDIR}/signatures.txt
diff -r -u ./wavi/contrib/macdeploy/fancy.plist ./pptp/contrib/macdeploy/fancy.plist
--- ./wavi/contrib/macdeploy/fancy.plist	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/macdeploy/fancy.plist	Sun Mar 25 19:48:57 2018
@@ -22,7 +22,7 @@
 			<integer>370</integer>
 			<integer>156</integer>
 		</array>
-		<key>Wavi-Qt.app</key>
+		<key>Pptp-Qt.app</key>
 		<array>
 			<integer>128</integer>
 			<integer>156</integer>
diff -r -u ./wavi/contrib/macdeploy/macdeployqtplus ./pptp/contrib/macdeploy/macdeployqtplus
--- ./wavi/contrib/macdeploy/macdeployqtplus	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/macdeploy/macdeployqtplus	Sun Mar 25 19:51:35 2018
@@ -155,7 +155,7 @@
 class ApplicationBundleInfo(object):
     def __init__(self, path):
         self.path = path
-        appName = "Wavi-Qt"
+        appName = "Pptp-Qt"
         self.binaryPath = os.path.join(path, "Contents", "MacOS", appName)
         if not os.path.exists(self.binaryPath):
             raise RuntimeError("Could not find bundle binary for " + path)
@@ -596,7 +596,7 @@
 
 # ------------------------------------------------
 
-target = os.path.join("dist", "Wavi-Qt.app")
+target = os.path.join("dist", "Pptp-Qt.app")
 
 if verbose >= 2:
     print "+ Copying source bundle +"
@@ -757,7 +757,7 @@
 
     if fancy is None:
         try:
-            runHDIUtil("create", dmg_name, srcfolder="dist", format="UDBZ", volname="Wavi-Core", ov=True)
+            runHDIUtil("create", dmg_name, srcfolder="dist", format="UDBZ", volname="Pptp-Core", ov=True)
         except subprocess.CalledProcessError as e:
             sys.exit(e.returncode)
     else:
@@ -772,7 +772,7 @@
         if verbose >= 3:
             print "Creating temp image for modification..."
         try:
-            runHDIUtil("create", dmg_name + ".temp", srcfolder="dist", format="UDRW", size=size, volname="Wavi-Core", ov=True)
+            runHDIUtil("create", dmg_name + ".temp", srcfolder="dist", format="UDRW", size=size, volname="Pptp-Core", ov=True)
         except subprocess.CalledProcessError as e:
             sys.exit(e.returncode)
 
@@ -837,7 +837,7 @@
                 items_positions.append(itemscript.substitute(params))
 
         params = {
-            "disk" : "Wavi-Core",
+            "disk" : "Pptp-Core",
             "window_bounds" : "300,300,800,620",
             "icon_size" : "96",
             "background_commands" : "",
diff -r -u ./wavi/contrib/macdeploy/README.md ./pptp/contrib/macdeploy/README.md
--- ./wavi/contrib/macdeploy/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/macdeploy/README.md	Sun Mar 25 19:51:35 2018
@@ -11,5 +11,5 @@
 During the process, the disk image window will pop up briefly where the fancy
 settings are applied. This is normal, please do not interfere.
 
-When finished, it will produce `Wavi-Core.dmg`.
+When finished, it will produce `Pptp-Core.dmg`.
 
Only in ./pptp/contrib: pptp-qt.pro
Only in ./pptp/contrib: pptpd.bash-completion
diff -r -u ./wavi/contrib/qos/README.md ./pptp/contrib/qos/README.md
--- ./wavi/contrib/qos/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/qos/README.md	Sun Mar 25 19:51:35 2018
@@ -1,5 +1,5 @@
 ### Qos ###
 
-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Wavi network. It limits outbound TCP traffic with a source or destination port of 9999, but not if the destination IP is within a LAN (defined as 192.168.x.x).
+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Pptp network. It limits outbound TCP traffic with a source or destination port of 9999, but not if the destination IP is within a LAN (defined as 192.168.x.x).
 
 This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.
diff -r -u ./wavi/contrib/qos/tc.sh ./pptp/contrib/qos/tc.sh
--- ./wavi/contrib/qos/tc.sh	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/qos/tc.sh	Sun Mar 25 19:51:35 2018
@@ -2,7 +2,7 @@
 IF="eth0"
 #limit of the network interface in question
 LINKCEIL="1gbit"
-#limit outbound Wavi protocol traffic to this rate
+#limit outbound Pptp protocol traffic to this rate
 LIMIT="160kbit"
 #defines the address space for which you wish to disable rate limiting
 LOCALNET="192.168.0.0/16"
diff -r -u ./wavi/contrib/qt_translations.py ./pptp/contrib/qt_translations.py
--- ./wavi/contrib/qt_translations.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/qt_translations.py	Sun Mar 25 19:57:53 2018
@@ -2,7 +2,7 @@
 
 # Helpful little script that spits out a comma-separated list of
 # language codes for Qt icons that should be included
-# in binary Wavi Core distributions
+# in binary Pptp Core distributions
 
 import glob
 import os
@@ -16,7 +16,7 @@
 d2 = sys.argv[2]
 
 l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])
-l2 = set([ re.search(r'wavi_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'wavi_*.qm')) ])
+l2 = set([ re.search(r'pptp_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'pptp_*.qm')) ])
 
 print ",".join(sorted(l1.intersection(l2)))
 
diff -r -u ./wavi/contrib/README.md ./pptp/contrib/README.md
--- ./wavi/contrib/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/README.md	Sun Mar 25 19:51:33 2018
@@ -21,7 +21,7 @@
 
 ### [Qos](/contrib/qos) ###
 
-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Wavi network. This means one can have an always-on wavid instance running, and another local wavid/wavi-qt instance which connects to this node and receives blocks from it.
+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Pptp network. This means one can have an always-on pptpd instance running, and another local pptpd/pptp-qt instance which connects to this node and receives blocks from it.
 
 ### [Seeds](/contrib/seeds) ###
 Utility to generate the pnSeed[] array that is compiled into the client.
@@ -30,8 +30,8 @@
 ---------------------
 
 ### [Debian](/contrib/debian) ###
-Contains files used to package wavid/wavi-qt
-for Debian-based Linux systems. If you compile wavid/wavi-qt yourself, there are some useful files here.
+Contains files used to package pptpd/pptp-qt
+for Debian-based Linux systems. If you compile pptpd/pptp-qt yourself, there are some useful files here.
 
 ### [Gitian-descriptors](/contrib/gitian-descriptors) ###
 Gavin's notes on getting gitian builds up and running using KVM.
@@ -46,7 +46,7 @@
 ---------------------
 
 ### [TestGen](/contrib/testgen) ###
-Utilities to generate test vectors for the data-driven Wavi tests.
+Utilities to generate test vectors for the data-driven Pptp tests.
 
 ### [Test Patches](/contrib/test-patches) ###
 These patches are applied when the automated pull-tester
diff -r -u ./wavi/contrib/seeds/generate-seeds.py ./pptp/contrib/seeds/generate-seeds.py
--- ./wavi/contrib/seeds/generate-seeds.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/seeds/generate-seeds.py	Sun Mar 25 19:57:54 2018
@@ -117,10 +117,10 @@
         exit(1)
     g = sys.stdout
     indir = sys.argv[1]
-    g.write('#ifndef WAVI_CHAINPARAMSSEEDS_H\n')
-    g.write('#define WAVI_CHAINPARAMSSEEDS_H\n')
+    g.write('#ifndef PPTP_CHAINPARAMSSEEDS_H\n')
+    g.write('#define PPTP_CHAINPARAMSSEEDS_H\n')
     g.write('/**\n')
-    g.write(' * List of fixed seed nodes for the wavi network\n')
+    g.write(' * List of fixed seed nodes for the pptp network\n')
     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\n')
     g.write(' *\n')
     g.write(' * Each line contains a 16-byte IPv6 address and a port.\n')
@@ -131,7 +131,7 @@
     g.write('\n')
     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:
         process_nodes(g, f, 'pnSeed6_test', 19999)
-    g.write('#endif // WAVI_CHAINPARAMSSEEDS_H\n')
+    g.write('#endif // PPTP_CHAINPARAMSSEEDS_H\n')
             
 if __name__ == '__main__':
     main()
diff -r -u ./wavi/contrib/spendfrom/README.md ./pptp/contrib/spendfrom/README.md
--- ./wavi/contrib/spendfrom/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/spendfrom/README.md	Sun Mar 25 19:57:54 2018
@@ -7,7 +7,7 @@
 Depends on [jsonrpc](http://json-rpc.org/).
 
 	spendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \
-	             --fee=fee --datadir=/path/to/.wavicore --testnet --dry_run
+	             --fee=fee --datadir=/path/to/.pptpcore --testnet --dry_run
 
 With no arguments, outputs a list of amounts associated with addresses.
 
@@ -16,7 +16,7 @@
 ### Notes ###
 
 - You may explicitly specify how much fee to pay (a fee more than 1% of the amount
-will fail,  though, to prevent wavi-losing accidents). Spendfrom may fail if
+will fail,  though, to prevent pptp-losing accidents). Spendfrom may fail if
 it thinks the transaction would never be confirmed (if the amount being sent is
 too small, or if the transaction is too many bytes for the fee).
 
diff -r -u ./wavi/contrib/spendfrom/spendfrom.py ./pptp/contrib/spendfrom/spendfrom.py
--- ./wavi/contrib/spendfrom/spendfrom.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/spendfrom/spendfrom.py	Thu Mar 29 23:19:07 2018
@@ -1,13 +1,13 @@
 #!/usr/bin/env python
 #
-# Use the raw transactions API to spend wavis received on particular addresses,
+# Use the raw transactions API to spend pptps received on particular addresses,
 # and send any change back to that same address.
 #
 # Example usage:
 #  spendfrom.py  # Lists available funds
 #  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00
 #
-# Assumes it will talk to a wavid or Wavi-Qt running
+# Assumes it will talk to a pptpd or Pptp-Qt running
 # on localhost.
 #
 # Depends on jsonrpc
@@ -33,15 +33,15 @@
         raise RuntimeError("JSON encode/decode loses precision")
 
 def determine_db_dir():
-    """Return the default location of the Wavi Core data directory"""
+    """Return the default location of the Pptp Core data directory"""
     if platform.system() == "Darwin":
-        return os.path.expanduser("~/Library/Application Support/WaviCore/")
+        return os.path.expanduser("~/Library/Application Support/PptpCore/")
     elif platform.system() == "Windows":
-        return os.path.join(os.environ['APPDATA'], "WaviCore")
-    return os.path.expanduser("~/.wavicore")
+        return os.path.join(os.environ['APPDATA'], "PptpCore")
+    return os.path.expanduser("~/.pptpcore")
 
 def read_bitcoin_config(dbdir):
-    """Read the wavi.conf file from dbdir, returns dictionary of settings"""
+    """Read the pptp.conf file from dbdir, returns dictionary of settings"""
     from ConfigParser import SafeConfigParser
 
     class FakeSecHead(object):
@@ -59,20 +59,20 @@
                 return s
 
     config_parser = SafeConfigParser()
-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, "wavi.conf"))))
+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, "pptp.conf"))))
     return dict(config_parser.items("all"))
 
 def connect_JSON(config):
-    """Connect to a Wavi Core JSON-RPC server"""
+    """Connect to a Pptp Core JSON-RPC server"""
     testnet = config.get('testnet', '0')
     testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False
     if not 'rpcport' in config:
-        config['rpcport'] = 19984 if testnet else 9984
+        config['rpcport'] = 19986 if testnet else 9986
     connect = "http://%s:%s@127.0.0.1:%s"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])
     try:
         result = ServiceProxy(connect)
         # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,
-        # but also make sure the wavid we're talking to is/isn't testnet:
+        # but also make sure the pptpd we're talking to is/isn't testnet:
         if result.getmininginfo()['testnet'] != testnet:
             sys.stderr.write("RPC server at "+connect+" testnet setting mismatch\n")
             sys.exit(1)
@@ -81,36 +81,36 @@
         sys.stderr.write("Error connecting to RPC server at "+connect+"\n")
         sys.exit(1)
 
-def unlock_wallet(wavid):
-    info = wavid.getinfo()
+def unlock_wallet(pptpd):
+    info = pptpd.getinfo()
     if 'unlocked_until' not in info:
         return True # wallet is not encrypted
     t = int(info['unlocked_until'])
     if t <= time.time():
         try:
             passphrase = getpass.getpass("Wallet is locked; enter passphrase: ")
-            wavid.walletpassphrase(passphrase, 5)
+            pptpd.walletpassphrase(passphrase, 5)
         except:
             sys.stderr.write("Wrong passphrase\n")
 
-    info = wavid.getinfo()
+    info = pptpd.getinfo()
     return int(info['unlocked_until']) > time.time()
 
-def list_available(wavid):
+def list_available(pptpd):
     address_summary = dict()
 
     address_to_account = dict()
-    for info in wavid.listreceivedbyaddress(0):
+    for info in pptpd.listreceivedbyaddress(0):
         address_to_account[info["address"]] = info["account"]
 
-    unspent = wavid.listunspent(0)
+    unspent = pptpd.listunspent(0)
     for output in unspent:
         # listunspent doesn't give addresses, so:
-        rawtx = wavid.getrawtransaction(output['txid'], 1)
+        rawtx = pptpd.getrawtransaction(output['txid'], 1)
         vout = rawtx["vout"][output['vout']]
         pk = vout["scriptPubKey"]
 
-        # This code only deals with ordinary pay-to-wavi-address
+        # This code only deals with ordinary pay-to-pptp-address
         # or pay-to-script-hash outputs right now; anything exotic is ignored.
         if pk["type"] != "pubkeyhash" and pk["type"] != "scripthash":
             continue
@@ -139,8 +139,8 @@
         n += 1
     return (outputs, have-needed)
 
-def create_tx(wavid, fromaddresses, toaddress, amount, fee):
-    all_coins = list_available(wavid)
+def create_tx(pptpd, fromaddresses, toaddress, amount, fee):
+    all_coins = list_available(pptpd)
 
     total_available = Decimal("0.0")
     needed = amount+fee
@@ -159,7 +159,7 @@
     # Note:
     # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.
     # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode
-    # Decimals, I'm casting amounts to float before sending them to wavid.
+    # Decimals, I'm casting amounts to float before sending them to pptpd.
     #
     outputs = { toaddress : float(amount) }
     (inputs, change_amount) = select_coins(needed, potential_inputs)
@@ -170,8 +170,8 @@
         else:
             outputs[change_address] = float(change_amount)
 
-    rawtx = wavid.createrawtransaction(inputs, outputs)
-    signed_rawtx = wavid.signrawtransaction(rawtx)
+    rawtx = pptpd.createrawtransaction(inputs, outputs)
+    signed_rawtx = pptpd.signrawtransaction(rawtx)
     if not signed_rawtx["complete"]:
         sys.stderr.write("signrawtransaction failed\n")
         sys.exit(1)
@@ -179,10 +179,10 @@
 
     return txdata
 
-def compute_amount_in(wavid, txinfo):
+def compute_amount_in(pptpd, txinfo):
     result = Decimal("0.0")
     for vin in txinfo['vin']:
-        in_info = wavid.getrawtransaction(vin['txid'], 1)
+        in_info = pptpd.getrawtransaction(vin['txid'], 1)
         vout = in_info['vout'][vin['vout']]
         result = result + vout['value']
     return result
@@ -193,12 +193,12 @@
         result = result + vout['value']
     return result
 
-def sanity_test_fee(wavid, txdata_hex, max_fee):
+def sanity_test_fee(pptpd, txdata_hex, max_fee):
     class FeeError(RuntimeError):
         pass
     try:
-        txinfo = wavid.decoderawtransaction(txdata_hex)
-        total_in = compute_amount_in(wavid, txinfo)
+        txinfo = pptpd.decoderawtransaction(txdata_hex)
+        total_in = compute_amount_in(pptpd, txinfo)
         total_out = compute_amount_out(txinfo)
         if total_in-total_out > max_fee:
             raise FeeError("Rejecting transaction, unreasonable fee of "+str(total_in-total_out))
@@ -221,15 +221,15 @@
 
     parser = optparse.OptionParser(usage="%prog [options]")
     parser.add_option("--from", dest="fromaddresses", default=None,
-                      help="addresses to get wavis from")
+                      help="addresses to get pptps from")
     parser.add_option("--to", dest="to", default=None,
-                      help="address to get send wavis to")
+                      help="address to get send pptps to")
     parser.add_option("--amount", dest="amount", default=None,
                       help="amount to send")
     parser.add_option("--fee", dest="fee", default="0.0",
                       help="fee to include")
     parser.add_option("--datadir", dest="datadir", default=determine_db_dir(),
-                      help="location of wavi.conf file with RPC username/password (default: %default)")
+                      help="location of pptp.conf file with RPC username/password (default: %default)")
     parser.add_option("--testnet", dest="testnet", default=False, action="store_true",
                       help="Use the test network")
     parser.add_option("--dry_run", dest="dry_run", default=False, action="store_true",
@@ -240,10 +240,10 @@
     check_json_precision()
     config = read_bitcoin_config(options.datadir)
     if options.testnet: config['testnet'] = True
-    wavid = connect_JSON(config)
+    pptpd = connect_JSON(config)
 
     if options.amount is None:
-        address_summary = list_available(wavid)
+        address_summary = list_available(pptpd)
         for address,info in address_summary.iteritems():
             n_transactions = len(info['outputs'])
             if n_transactions > 1:
@@ -253,14 +253,14 @@
     else:
         fee = Decimal(options.fee)
         amount = Decimal(options.amount)
-        while unlock_wallet(wavid) == False:
+        while unlock_wallet(pptpd) == False:
             pass # Keep asking for passphrase until they get it right
-        txdata = create_tx(wavid, options.fromaddresses.split(","), options.to, amount, fee)
-        sanity_test_fee(wavid, txdata, amount*Decimal("0.01"))
+        txdata = create_tx(pptpd, options.fromaddresses.split(","), options.to, amount, fee)
+        sanity_test_fee(pptpd, txdata, amount*Decimal("0.01"))
         if options.dry_run:
             print(txdata)
         else:
-            txid = wavid.sendrawtransaction(txdata)
+            txid = pptpd.sendrawtransaction(txdata)
             print(txid)
 
 if __name__ == '__main__':
diff -r -u ./wavi/contrib/testgen/README.md ./pptp/contrib/testgen/README.md
--- ./wavi/contrib/testgen/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/testgen/README.md	Sun Mar 25 19:51:35 2018
@@ -1,6 +1,6 @@
 ### TestGen ###
 
-Utilities to generate test vectors for the data-driven Wavi tests.
+Utilities to generate test vectors for the data-driven Pptp tests.
 
 Usage: 
 
diff -r -u ./wavi/contrib/tidy_datadir.sh ./pptp/contrib/tidy_datadir.sh
--- ./wavi/contrib/tidy_datadir.sh	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/tidy_datadir.sh	Sun Mar 25 19:51:33 2018
@@ -4,7 +4,7 @@
   cd "$1"
 else
   echo "Usage: $0 <datadir>" >&2
-  echo "Removes obsolete Wavi database files" >&2
+  echo "Removes obsolete Pptp database files" >&2
   exit 1
 fi
 
@@ -16,22 +16,22 @@
 
 case $LEVEL in
   0)
-    echo "Error: no Wavi datadir detected."
+    echo "Error: no Pptp datadir detected."
     exit 1
     ;;
   1)
-    echo "Detected old Wavi datadir (before 0.7)."
+    echo "Detected old Pptp datadir (before 0.7)."
     echo "Nothing to do."
     exit 0
     ;;
   2)
-    echo "Detected Wavi 0.7 datadir."
+    echo "Detected Pptp 0.7 datadir."
     ;;
   3)
-    echo "Detected Wavi pre-0.8 datadir."
+    echo "Detected Pptp pre-0.8 datadir."
     ;;
   4)
-    echo "Detected Wavi 0.8 datadir."
+    echo "Detected Pptp 0.8 datadir."
     ;;
 esac
 
diff -r -u ./wavi/contrib/verify-commits/pre-push-hook.sh ./pptp/contrib/verify-commits/pre-push-hook.sh
--- ./wavi/contrib/verify-commits/pre-push-hook.sh	Sat Mar 31 23:24:23 2018
+++ ./pptp/contrib/verify-commits/pre-push-hook.sh	Sun Mar 25 19:57:54 2018
@@ -1,5 +1,5 @@
 #!/bin/bash
-if ! [[ "$2" =~ ^(git@)?(www.)?github.com(:|/)wavibanana/wavi(.git)?$ ]]; then
+if ! [[ "$2" =~ ^(git@)?(www.)?github.com(:|/)pptp/pptp(.git)?$ ]]; then
     exit 0
 fi
 
Only in ./wavi/contrib: wavi-qt.pro
Only in ./wavi/contrib: wavid.bash-completion
diff -r -u ./wavi/CONTRIBUTING.md ./pptp/CONTRIBUTING.md
--- ./wavi/CONTRIBUTING.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/CONTRIBUTING.md	Sun Mar 25 19:51:33 2018
@@ -1,7 +1,7 @@
-Contributing to Wavi Core
+Contributing to Pptp Core
 ============================
 
-The Wavi Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.
+The Pptp Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.
 
 Firstly in terms of structure, there is no particular concept of “Core developers” in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository “maintainers” who are responsible for merging pull requests as well as a “lead maintainer” who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.
 
@@ -67,9 +67,9 @@
 "Decision Making" Process
 -------------------------
 
-The following applies to code changes to the Wavi Core project (and related projects such as libsecp256k1), and is not to be confused with overall Wavi Network Protocol consensus changes.
+The following applies to code changes to the Pptp Core project (and related projects such as libsecp256k1), and is not to be confused with overall Pptp Network Protocol consensus changes.
 
-Whether a pull request is merged into Wavi Core rests with the project merge maintainers and ultimately the project lead.
+Whether a pull request is merged into Pptp Core rests with the project merge maintainers and ultimately the project lead.
 
 Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.
 
@@ -82,7 +82,7 @@
   - not break the existing test suite;
   - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.
 
-Patches that change Wavi consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.
+Patches that change Pptp consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.
 
 
 ### Peer Review
@@ -101,10 +101,10 @@
 
 Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.
 
-Where a patch set proposes to change the Wavi consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.
+Where a patch set proposes to change the Pptp consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.
 
 
 Release Policy
 --------------
 
-The project leader is the release manager for each Wavi Core release.
+The project leader is the release manager for each Pptp Core release.
diff -r -u ./wavi/COPYING ./pptp/COPYING
--- ./wavi/COPYING	Sat Mar 31 23:24:23 2018
+++ ./pptp/COPYING	Sun Mar 25 20:14:31 2018
@@ -1,7 +1,7 @@
 The MIT License (MIT)
 
 Copyright (c) 2009-2016 The Bitcoin Core developers
-Copyright (c) 2014-2017 The Wavi Core developers
+Copyright (c) 2018-2018 The Pptp Core developers
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff -r -u ./wavi/depends/README.md ./pptp/depends/README.md
--- ./wavi/depends/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/depends/README.md	Sun Mar 25 19:51:35 2018
@@ -12,9 +12,9 @@
 
     make HOST=x86_64-w64-mingw32 -j4
 
-A prefix will be generated that's suitable for plugging into Wavi's
+A prefix will be generated that's suitable for plugging into Pptp's
 configure. In the above example, a dir named x86_64-w64-mingw32 will be
-created. To use it for Wavi:
+created. To use it for Pptp:
 
     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32
 
@@ -40,7 +40,7 @@
     DEBUG: disable some optimizations and enable more runtime checking
 
 If some packages are not built, for example `make NO_WALLET=1`, the appropriate
-options will be passed to Wavi Core's configure. In this case, `--disable-wallet`.
+options will be passed to Pptp Core's configure. In this case, `--disable-wallet`.
 
 Additional targets:
 
diff -r -u ./wavi/doc/assets-attribution.md ./pptp/doc/assets-attribution.md
--- ./wavi/doc/assets-attribution.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/assets-attribution.md	Sun Mar 25 19:51:35 2018
@@ -1 +1 @@
-The list of assets used in the Wavi Core source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).
+The list of assets used in the Pptp Core source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).
diff -r -u ./wavi/doc/build-openbsd.md ./pptp/doc/build-openbsd.md
--- ./wavi/doc/build-openbsd.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/build-openbsd.md	Sun Mar 25 19:57:54 2018
@@ -2,7 +2,7 @@
 ======================
 (updated for OpenBSD 5.7)
 
-This guide describes how to build wavid and command-line utilities on OpenBSD.
+This guide describes how to build pptpd and command-line utilities on OpenBSD.
 
 As OpenBSD is most common as a server OS, we will not bother with the GUI.
 
@@ -19,7 +19,7 @@
 ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2
 ```
 
-The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Wavi Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.
+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Pptp Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.
 
 GCC
 -------
@@ -36,14 +36,14 @@
 
 Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:
 
-    test_wavi:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program
+    test_pptp:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program
     ...
     Segmentation fault (core dumped)
 
-This makes it necessary to build boost, or at least the parts used by Wavi Core, manually:
+This makes it necessary to build boost, or at least the parts used by Pptp Core, manually:
 
 ```
-# Pick some path to install boost to, here we create a directory within the wavi directory
+# Pick some path to install boost to, here we create a directory within the pptp directory
 BITCOIN_ROOT=$(pwd)
 BOOST_PREFIX="${BITCOIN_ROOT}/boost"
 mkdir -p $BOOST_PREFIX
@@ -62,7 +62,7 @@
 sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp
 mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp
 
-# Build w/ minimum configuration necessary for wavi
+# Build w/ minimum configuration necessary for pptp
 echo 'using gcc : : eg++ : <cxxflags>"-fvisibility=hidden -fPIC" <linkflags>"" <archiver>"ar" <striper>"strip"  <ranlib>"ranlib" <rc>"" : ;' > user-config.jam
 config_opts="runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1"
 ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test
@@ -78,7 +78,7 @@
 You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).
 
 ```bash
-# Pick some path to install BDB to, here we create a directory within the wavi directory
+# Pick some path to install BDB to, here we create a directory within the pptp directory
 BITCOIN_ROOT=$(pwd)
 BDB_PREFIX="${BITCOIN_ROOT}/db4"
 mkdir -p $BDB_PREFIX
@@ -96,7 +96,7 @@
 make install
 ```
 
-### Building Wavi Core
+### Building Pptp Core
 
 **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.
 
diff -r -u ./wavi/doc/build-osx.md ./pptp/doc/build-osx.md
--- ./wavi/doc/build-osx.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/build-osx.md	Sat Mar 31 12:28:56 2018
@@ -1,6 +1,6 @@
 Mac OS X Build Instructions and Notes
 ====================================
-This guide will show you how to build wavid (headless client) for OSX.
+This guide will show you how to build pptpd (headless client) for OSX.
 
 Notes
 -----
@@ -36,15 +36,15 @@
 
 NOTE: Building with Qt4 is still supported, however, doing so could result in a broken UI. Therefore, building with Qt5 is recommended. Be aware that Qt5 5.7+ requires C++11 compiler support.
 
-### Building Wavi Core
+### Building Pptp Core
 
 1. Clone the GitHub tree to get the source code and go into the directory.
 
-        git clone https://github.com/wavibanana/wavi.git
-        cd wavi
+        git clone https://github.com/conan-equal-newone/pptp.git
+        cd pptp
 
-2.  Build Wavi Core:
-    This will configure and build the headless wavi binaries as well as the gui (if Qt is found).
+2.  Build Pptp Core:
+    This will configure and build the headless pptp binaries as well as the gui (if Qt is found).
     You can disable the gui build by passing `--without-gui` to configure.
 
         ./autogen.sh
@@ -55,7 +55,7 @@
 
         make check
 
-4.  (Optional) You can also install wavid to your path:
+4.  (Optional) You can also install pptpd to your path:
 
         make install
 
@@ -67,7 +67,7 @@
 1. Make sure you installed everything through Homebrew mentioned above
 2. Do a proper ./configure --enable-debug
 3. In Qt Creator do "New Project" -> Import Project -> Import Existing Project
-4. Enter "wavi-qt" as project name, enter src/qt as location
+4. Enter "pptp-qt" as project name, enter src/qt as location
 5. Leave the file selection as it is
 6. Confirm the "summary page"
 7. In the "Projects" tab select "Manage Kits..."
@@ -77,11 +77,11 @@
 
 Creating a release build
 ------------------------
-You can ignore this section if you are building `wavid` for your own use.
+You can ignore this section if you are building `pptpd` for your own use.
 
-wavid/wavi-cli binaries are not included in the Wavi-Qt.app bundle.
+pptpd/pptp-cli binaries are not included in the Pptp-Qt.app bundle.
 
-If you are building `wavid` or `Wavi Core` for others, your build machine should be set up
+If you are building `pptpd` or `Pptp Core` for others, your build machine should be set up
 as follows for maximum compatibility:
 
 All dependencies should be compiled with these flags:
@@ -90,30 +90,30 @@
  -arch x86_64
  -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk
 
-Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Wavi Core
+Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Pptp Core
 bundle is packaged and signed to create the .dmg disk image that is distributed.
 
 Running
 -------
 
-It's now available at `./wavid`, provided that you are still in the `src`
+It's now available at `./pptpd`, provided that you are still in the `src`
 directory. We have to first create the RPC configuration file, though.
 
-Run `./wavid` to get the filename where it should be put, or just try these
+Run `./pptpd` to get the filename where it should be put, or just try these
 commands:
 
-    echo -e "rpcuser=wavirpc\nrpcpassword=$(xxd -l 16 -p /dev/urandom)" > "/Users/${USER}/Library/Application Support/WaviCore/wavi.conf"
-    chmod 600 "/Users/${USER}/Library/Application Support/WaviCore/wavi.conf"
+    echo -e "rpcuser=pptprpc\nrpcpassword=$(xxd -l 16 -p /dev/urandom)" > "/Users/${USER}/Library/Application Support/PptpCore/pptp.conf"
+    chmod 600 "/Users/${USER}/Library/Application Support/PptpCore/pptp.conf"
 
 The next time you run it, it will start downloading the blockchain, but it won't
 output anything while it's doing this. This process may take several hours;
 you can monitor its process by looking at the debug.log file, like this:
 
-    tail -f $HOME/Library/Application\ Support/WaviCore/debug.log
+    tail -f $HOME/Library/Application\ Support/PptpCore/debug.log
 
 Other commands:
 -------
 
-    ./wavid -daemon # to start the wavi daemon.
-    ./wavi-cli --help  # for a list of command-line options.
-    ./wavi-cli help    # When the daemon is running, to get a list of RPC commands
+    ./pptpd -daemon # to start the pptp daemon.
+    ./pptp-cli --help  # for a list of command-line options.
+    ./pptp-cli help    # When the daemon is running, to get a list of RPC commands
diff -r -u ./wavi/doc/build-unix.md ./pptp/doc/build-unix.md
--- ./wavi/doc/build-unix.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/build-unix.md	Sun Mar 25 19:57:54 2018
@@ -1,12 +1,12 @@
 UNIX BUILD NOTES
 ====================
-Some notes on how to build Wavi Core in Unix.
+Some notes on how to build Pptp Core in Unix.
 
 (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))
 
 Note
 ---------------------
-Always use absolute paths to configure and compile Wavi Core and the dependencies,
+Always use absolute paths to configure and compile Pptp Core and the dependencies,
 for example, when specifying the the path of the dependency:
 
 	../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX
@@ -24,7 +24,7 @@
 make install # optional
 ```
 
-This will build wavi-qt as well if the dependencies are met.
+This will build pptp-qt as well if the dependencies are met.
 
 Dependencies
 ---------------------
@@ -55,7 +55,7 @@
 --------------------
 
 C++ compilers are memory-hungry. It is recommended to have at least 1 GB of
-memory available when compiling Wavi Core. With 512MB of memory or less
+memory available when compiling Pptp Core. With 512MB of memory or less
 compilation will take much longer due to swap thrashing.
 
 Dependency Build Instructions: Ubuntu & Debian
@@ -86,7 +86,7 @@
 are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,
 pass `--with-incompatible-bdb` to configure.
 
-See the section "Disable-wallet mode" to build Wavi Core without wallet.
+See the section "Disable-wallet mode" to build Pptp Core without wallet.
 
 Optional:
 
@@ -99,7 +99,7 @@
 Dependencies for the GUI: Ubuntu & Debian
 -----------------------------------------
 
-If you want to build Wavi-Qt, make sure that the required packages for Qt development
+If you want to build Pptp-Qt, make sure that the required packages for Qt development
 are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.
 If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.
 To build without GUI pass `--without-gui`.
@@ -116,12 +116,12 @@
 
     sudo apt-get install libqrencode-dev
 
-Once these are installed, they will be found by configure and a wavi-qt executable will be
+Once these are installed, they will be found by configure and a pptp-qt executable will be
 built by default.
 
 Notes
 -----
-The release is built with GCC and then "strip wavid" to strip the debug
+The release is built with GCC and then "strip pptpd" to strip the debug
 symbols, which reduces the executable size by about 90%.
 
 
@@ -142,10 +142,10 @@
 It is recommended to use Berkeley DB 4.8. If you have to build it yourself:
 
 ```bash
-WAVI_ROOT=$(pwd)
+PPTP_ROOT=$(pwd)
 
-# Pick some path to install BDB to, here we create a directory within the wavi directory
-BDB_PREFIX="${WAVI_ROOT}/db4"
+# Pick some path to install BDB to, here we create a directory within the pptp directory
+BDB_PREFIX="${PPTP_ROOT}/db4"
 mkdir -p $BDB_PREFIX
 
 # Fetch the source and verify that it is not tampered with
@@ -160,8 +160,8 @@
 ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX
 make install
 
-# Configure Wavi Core to use our own-built instance of BDB
-cd $WAVI_ROOT
+# Configure Pptp Core to use our own-built instance of BDB
+cd $PPTP_ROOT
 ./autogen.sh
 ./configure LDFLAGS="-L${BDB_PREFIX}/lib/" CPPFLAGS="-I${BDB_PREFIX}/include/" # (other args...)
 ```
@@ -179,7 +179,7 @@
 
 Security
 --------
-To help make your Wavi installation more secure by making certain attacks impossible to
+To help make your Pptp installation more secure by making certain attacks impossible to
 exploit even if a vulnerability is found, binaries are hardened by default.
 This can be disabled with:
 
@@ -203,7 +203,7 @@
 
     To test that you have built PIE executable, install scanelf, part of paxutils, and use:
 
-    	scanelf -e ./wavid
+    	scanelf -e ./pptpd
 
     The output should contain:
 
@@ -212,13 +212,13 @@
 
 * Non-executable Stack
     If the stack is executable then trivial stack based buffer overflow exploits are possible if
-    vulnerable buffers are found. By default, Wavi Core should be built with a non-executable stack
+    vulnerable buffers are found. By default, Pptp Core should be built with a non-executable stack
     but if one of the libraries it uses asks for an executable stack or someone makes a mistake
     and uses a compiler extension which requires an executable stack, it will silently build an
     executable without the non-executable stack protection.
 
     To verify that the stack is non-executable after compiling use:
-    `scanelf -e ./wavid`
+    `scanelf -e ./pptpd`
 
     the output should contain:
 	STK/REL/PTL
@@ -228,7 +228,7 @@
 
 Disable-wallet mode
 --------------------
-When the intention is to run only a P2P node without a wallet, Wavi Core may be compiled in
+When the intention is to run only a P2P node without a wallet, Pptp Core may be compiled in
 disable-wallet mode with:
 
     ./configure --disable-wallet
diff -r -u ./wavi/doc/build-windows.md ./pptp/doc/build-windows.md
--- ./wavi/doc/build-windows.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/build-windows.md	Sun Mar 25 19:51:35 2018
@@ -1,7 +1,7 @@
 WINDOWS BUILD NOTES
 ====================
 
-Some notes on how to build Wavi Core for Windows.
+Some notes on how to build Pptp Core for Windows.
 
 Most developers use cross-compilation from Ubuntu to build executables for
 Windows. This is also used to build the release binaries.
diff -r -u ./wavi/doc/developer-notes.md ./pptp/doc/developer-notes.md
--- ./wavi/doc/developer-notes.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/developer-notes.md	Sun Mar 25 19:51:35 2018
@@ -120,7 +120,7 @@
 
 **DEBUG_LOCKORDER**
 
-Wavi Core is a multithreaded application, and deadlocks or other multithreading bugs
+Pptp Core is a multithreaded application, and deadlocks or other multithreading bugs
 can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure
 CXXFLAGS="-DDEBUG_LOCKORDER -g") inserts run-time checks to keep track of which locks
 are held, and adds warnings to the debug.log file if inconsistencies are detected.
@@ -181,7 +181,7 @@
 In closed-source environments in which everyone uses the same IDE it is common
 to add temporary files it produces to the project-wide `.gitignore` file.
 
-However, in open source software such as Wavi Core, where everyone uses
+However, in open source software such as Pptp Core, where everyone uses
 their own editors/IDE/tools, it is less common. Only you know what files your
 editor produces and this may change from version to version. The canonical way
 to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:
@@ -211,9 +211,9 @@
 ============================
 
 A few non-style-related recommendations for developers, as well as points to
-pay attention to for reviewers of Wavi Core code.
+pay attention to for reviewers of Pptp Core code.
 
-General Wavi Core
+General Pptp Core
 ----------------------
 
 - New features should be exposed on RPC first, then can be made available in the GUI
@@ -324,7 +324,7 @@
 
 - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers
 
-  - *Rationale*: Wavi Core uses tinyformat, which is type safe. Leave them out to avoid confusion
+  - *Rationale*: Pptp Core uses tinyformat, which is type safe. Leave them out to avoid confusion
 
 Threads and synchronization
 ----------------------------
diff -r -u ./wavi/doc/dnsseed-policy.md ./pptp/doc/dnsseed-policy.md
--- ./wavi/doc/dnsseed-policy.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/dnsseed-policy.md	Sun Mar 25 19:51:35 2018
@@ -1,12 +1,12 @@
 Expectations for DNS Seed operators
 ====================================
 
-Wavi Core attempts to minimize the level of trust in DNS seeds,
+Pptp Core attempts to minimize the level of trust in DNS seeds,
 but DNS seeds still pose a small amount of risk for the network.
 As such, DNS seeds must be run by entities which have some minimum
-level of trust within the Wavi community.
+level of trust within the Pptp community.
 
-Other implementations of Wavi software may also use the same
+Other implementations of Pptp software may also use the same
 seeds and may be more exposed. In light of this exposure, this
 document establishes some basic expectations for operating dnsseeds.
 
@@ -16,7 +16,7 @@
 contracted by the operator are equally expected to uphold these expectations.
 
 1. The DNS seed results must consist exclusively of fairly selected and
-functioning Wavi nodes from the public network to the best of the
+functioning Pptp nodes from the public network to the best of the
 operator's understanding and capability.
 
 2. For the avoidance of doubt, the results may be randomized but must not
@@ -26,7 +26,7 @@
 3. The results may not be served with a DNS TTL of less than one minute.
 
 4. Any logging of DNS queries should be only that which is necessary
-for the operation of the service or urgent health of the Wavi
+for the operation of the service or urgent health of the Pptp
 network and must not be retained longer than necessary nor disclosed
 to any third party.
 
@@ -42,7 +42,7 @@
 related to the DNS seed operation.
 
 If these expectations cannot be satisfied the operator should
-discontinue providing services and contact the active Wavi
+discontinue providing services and contact the active Pptp
 Core development team as well as posting on
 [bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).
 
diff -r -u ./wavi/doc/Doxyfile ./pptp/doc/Doxyfile
--- ./wavi/doc/Doxyfile	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/Doxyfile	Sun Mar 25 19:51:35 2018
@@ -28,7 +28,7 @@
 # The PROJECT_NAME tag is a single word (or a sequence of words surrounded
 # by quotes) that should identify the project.
 
-PROJECT_NAME           = "Wavi Core"
+PROJECT_NAME           = "Pptp Core"
 
 # The PROJECT_NUMBER tag can be used to enter a project or revision number.
 # This could be handy for archiving the generated documentation or
diff -r -u ./wavi/doc/files.md ./pptp/doc/files.md
--- ./wavi/doc/files.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/files.md	Sun Mar 25 19:57:54 2018
@@ -1,14 +1,14 @@
 
 * banlist.dat: stores the IPs/Subnets of banned nodes
-* wavi.conf: contains configuration settings for wavid or wavi-qt
-* wavid.pid: stores the process id of wavid while running
+* pptp.conf: contains configuration settings for pptpd or pptp-qt
+* pptpd.pid: stores the process id of pptpd while running
 * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0
 * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)
 * blocks/index/*; block index (LevelDB); since 0.8.0
 * chainstate/*; block chain state database (LevelDB); since 0.8.0
 * database/*: BDB database environment; only used for wallet since 0.8.0
 * db.log: wallet database log file
-* debug.log: contains debug information and general logging generated by wavid or wavi-qt
+* debug.log: contains debug information and general logging generated by pptpd or pptp-qt
 * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0
 * governance.dat: stores data for governance obgects
 * masternode.conf: contains configuration settings for remote masternodes
diff -r -u ./wavi/doc/gitian-building.md ./pptp/doc/gitian-building.md
--- ./wavi/doc/gitian-building.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/gitian-building.md	Sat Mar 31 12:29:58 2018
@@ -1,9 +1,9 @@
 Gitian building
 ================
 
-*Setup instructions for a Gitian build of Wavi Core using a Debian VM or physical system.*
+*Setup instructions for a Gitian build of Pptp Core using a Debian VM or physical system.*
 
-Gitian is the deterministic build process that is used to build the Wavi
+Gitian is the deterministic build process that is used to build the Pptp
 Core executables. It provides a way to be reasonably sure that the
 executables are really built from the source on GitHub. It also makes sure that
 the same, tested dependencies are used and statically built into the executable.
@@ -11,7 +11,7 @@
 Multiple developers build the source code by following a specific descriptor
 ("recipe"), cryptographically sign the result, and upload the resulting signature.
 These results are compared and only if they match, the build is accepted and uploaded
-to wavi.org.
+to pptp.org.
 
 More independent Gitian builders are needed, which is why this guide exists.
 It is preferred you follow these steps yourself instead of using someone else's
@@ -26,7 +26,7 @@
 - [Installing Gitian](#installing-gitian)
 - [Setting up the Gitian image](#setting-up-the-gitian-image)
 - [Getting and building the inputs](#getting-and-building-the-inputs)
-- [Building Wavi Core](#building-wavi-core)
+- [Building Pptp Core](#building-pptp-core)
 - [Building an alternative repository](#building-an-alternative-repository)
 - [Signing externally](#signing-externally)
 - [Uploading signatures](#uploading-signatures)
@@ -300,11 +300,11 @@
 
 **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.
 
-Clone the git repositories for Wavi Core and Gitian.
+Clone the git repositories for Pptp Core and Gitian.
 
 ```bash
 git clone https://github.com/devrandom/gitian-builder.git
-git clone https://github.com/wavibanana/wavi
+git clone https://github.com/conan-equal-newone/pptp
 ```
 
 Setting up the Gitian image
@@ -339,16 +339,16 @@
 --------------------------------
 
 Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)
-in the Wavi Core repository under 'Fetch and build inputs' to install sources which require
+in the Pptp Core repository under 'Fetch and build inputs' to install sources which require
 manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache
 and offline git repositories' which will fetch the remaining files required for building
 offline.
 
-Building Wavi Core
+Building Pptp Core
 ----------------
 
-To build Wavi Core (for Linux, OS X and Windows) just follow the steps under 'perform
-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the Wavi Core repository.
+To build Pptp Core (for Linux, OS X and Windows) just follow the steps under 'perform
+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the Pptp Core repository.
 
 This may take some time as it will build all the dependencies needed for each descriptor.
 These dependencies will be cached after a successful build to avoid rebuilding them when possible.
@@ -363,12 +363,12 @@
 Output from `gbuild` will look something like
 
 ```bash
-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/wavi/.git/
+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/pptp/.git/
     remote: Counting objects: 57959, done.
     remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958
     Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.
     Resolving deltas: 100% (41590/41590), done.
-    From https://github.com/wavibanana/wavi
+    From https://github.com/conan-equal-newone/pptp
     ... (new tags, new branch etc)
     --- Building for precise amd64 ---
     Stopping target if it is up
@@ -394,18 +394,18 @@
 
 For example:
 ```bash
-URL=https://github.com/crowning-/wavi.git
+URL=https://github.com/crowning-/pptp.git
 COMMIT=b616fb8ef0d49a919b72b0388b091aaec5849b96
-./bin/gbuild --commit wavi=${COMMIT} --url wavi=${URL} ../wavi/contrib/gitian-descriptors/gitian-linux.yml
-./bin/gbuild --commit wavi=${COMMIT} --url wavi=${URL} ../wavi/contrib/gitian-descriptors/gitian-win.yml
-./bin/gbuild --commit wavi=${COMMIT} --url wavi=${URL} ../wavi/contrib/gitian-descriptors/gitian-osx.yml
+./bin/gbuild --commit pptp=${COMMIT} --url pptp=${URL} ../pptp/contrib/gitian-descriptors/gitian-linux.yml
+./bin/gbuild --commit pptp=${COMMIT} --url pptp=${URL} ../pptp/contrib/gitian-descriptors/gitian-win.yml
+./bin/gbuild --commit pptp=${COMMIT} --url pptp=${URL} ../pptp/contrib/gitian-descriptors/gitian-osx.yml
 ```
 
 Building fully offline
 -----------------------
 
 For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository
-and the wavi git repository with the desired tag must both be available locally, and then gbuild must be
+and the pptp git repository with the desired tag must both be available locally, and then gbuild must be
 told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or
 manually disabling gitian-builder's use of apt-get to update the VM build environment.
 
@@ -424,7 +424,7 @@
 LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get update
 LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \
   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \
-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/"//g;s/- //;p}}' ../wavi/contrib/gitian-descriptors/*|sort|uniq )
+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/"//g;s/- //;p}}' ../pptp/contrib/gitian-descriptors/*|sort|uniq )
 LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub
 LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade
 ```
@@ -444,12 +444,12 @@
 ```bash
 
 cd /some/root/path/
-git clone https://github.com/wavibanana/wavi-detached-sigs.git
+git clone https://github.com/conan-equal-newone/pptp-detached-sigs.git
 
-BTCPATH=/some/root/path/wavi.git
-SIGPATH=/some/root/path/wavi-detached-sigs.git
+BTCPATH=/some/root/path/pptp.git
+SIGPATH=/some/root/path/pptp-detached-sigs.git
 
-./bin/gbuild --url wavi=${BTCPATH},signature=${SIGPATH} ../wavi/contrib/gitian-descriptors/gitian-win-signer.yml
+./bin/gbuild --url pptp=${BTCPATH},signature=${SIGPATH} ../pptp/contrib/gitian-descriptors/gitian-win-signer.yml
 ```
 
 Signing externally
@@ -464,9 +464,9 @@
 in `gitian.sigs` to your signing machine and do
 
 ```bash
-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/wavi-linux-build.assert
-    gpg --detach-sign ${VERSION}-win/${SIGNER}/wavi-win-build.assert
-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/wavi-osx-build.assert
+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/pptp-linux-build.assert
+    gpg --detach-sign ${VERSION}-win/${SIGNER}/pptp-win-build.assert
+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/pptp-osx-build.assert
 ```
 
 This will create the `.sig` files that can be committed together with the `.assert` files to assert your
@@ -476,6 +476,6 @@
 ---------------------
 
 In the future it will be possible to push your signatures (both the `.assert` and `.assert.sig` files) to the
-[wavi/gitian.sigs](https://github.com/wavibanana/gitian.sigs/) repository, or if that's not possible to create a pull
+[pptp/gitian.sigs](https://github.com/conan-equal-newone/gitian.sigs/) repository, or if that's not possible to create a pull
 request.
 There will be an official announcement when this repository is online.
diff -r -u ./wavi/doc/guide-startmany.md ./pptp/doc/guide-startmany.md
--- ./wavi/doc/guide-startmany.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/guide-startmany.md	Sat Mar 31 12:30:31 2018
@@ -16,9 +16,9 @@
 
 Close your QT Wallet.
 
-### Send 1000 WAVI to New Addresses
+### Send 1000 PPTP to New Addresses
 
-Send exactly 1000 WAVI to each new address created above.
+Send exactly 1000 PPTP to each new address created above.
 
 ### Create New Masternode Private Keys
 
@@ -38,9 +38,9 @@
 
 Create the `masternode.conf` file in the same directory as your `wallet.dat`.
 
-Copy the masternode private key and correspondig collateral output transaction that holds the 1000 WAVI.
+Copy the masternode private key and correspondig collateral output transaction that holds the 1000 PPTP.
 
-*Note: The masternode priviate key is **not** the same as a wallet private key. **Never** put your wallet private key in the masternode.conf file. That is almost equivalent to putting your 1000 WAVI on the remote server and defeats the purpose of a hot/cold setup.*
+*Note: The masternode priviate key is **not** the same as a wallet private key. **Never** put your wallet private key in the masternode.conf file. That is almost equivalent to putting your 1000 PPTP on the remote server and defeats the purpose of a hot/cold setup.*
 
 ### Get the collateral output
 
@@ -53,7 +53,7 @@
 Make note of the hash (which is your collateral_output) and index.
 
 ### Enter your Masternode details into your masternode.conf file
-[From the wavi github repo](https://github.com/wavibanana/wavi/blob/master/doc/masternode_conf.md)
+[From the pptp github repo](https://github.com/conan-equal-newone/pptp/blob/master/doc/masternode_conf.md)
 
 `masternode.conf` format is a space seperated text file. Each line consisting of an alias, IP address followed by port, masternode private key, collateral output transaction id and collateral output index.
 
@@ -68,16 +68,16 @@
 mn02 127.0.0.2:9999 93WaAb3htPJEV8E9aQcN23Jt97bPex7YvWfgMDTUdWJvzmrMqey aa9f1034d973377a5e733272c3d0eced1de22555ad45d6b24abadff8087948d4 0
 ```
 
-## Update wavi.conf on server
+## Update pptp.conf on server
 
-If you generated a new masternode private key, you will need to update the remote `wavi.conf` files.
+If you generated a new masternode private key, you will need to update the remote `pptp.conf` files.
 
 Shut down the daemon and then edit the file.
 
-```nano .wavicore/wavi.conf```
+```nano .pptpcore/pptp.conf```
 
 ### Edit the masternodeprivkey
-If you generated a new masternode private key, you will need to update the `masternodeprivkey` value in your remote `wavi.conf` file.
+If you generated a new masternode private key, you will need to update the `masternodeprivkey` value in your remote `pptp.conf` file.
 
 ## Start your Masternodes
 
@@ -87,9 +87,9 @@
 
 You can confirm that remote server is on the correct block by issuing
 
-```wavi-cli getinfo```
+```pptp-cli getinfo```
 
-and comparing with the official explorer at https://explorer.wavi.org/chain/Wavi
+and comparing with the official explorer at https://explorer.pptp.org/chain/Pptp
 
 ### Local
 
@@ -116,11 +116,11 @@
 Issue command `masternode status`
 It should return you something like that:
 ```
-wavi-cli masternode status
+pptp-cli masternode status
 {
     "outpoint" : "<collateral_output>-<collateral_output_index>",
     "service" : "<ipaddress>:<port>",
-    "pubkey" : "<1000 WAVI address>",
+    "pubkey" : "<1000 PPTP address>",
     "status" : "Masternode successfully started"
 }
 ```
@@ -128,6 +128,6 @@
 
 ### Local
 
-Search your Masternodes on https://wavininja.pl/masternodes.html
+Search your Masternodes on https://pptpninja.pl/masternodes.html
 
 _Hint: Bookmark it, you definitely will be using this site a lot._
diff -r -u ./wavi/doc/init.md ./pptp/doc/init.md
--- ./wavi/doc/init.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/init.md	Sun Mar 25 19:57:54 2018
@@ -1,36 +1,36 @@
-Sample init scripts and service configuration for wavid
+Sample init scripts and service configuration for pptpd
 ==========================================================
 
 Sample scripts and configuration files for systemd, Upstart and OpenRC
 can be found in the contrib/init folder.
 
-    contrib/init/wavid.service:    systemd service unit configuration
-    contrib/init/wavid.openrc:     OpenRC compatible SysV style init script
-    contrib/init/wavid.openrcconf: OpenRC conf.d file
-    contrib/init/wavid.conf:       Upstart service configuration file
-    contrib/init/wavid.init:       CentOS compatible SysV style init script
+    contrib/init/pptpd.service:    systemd service unit configuration
+    contrib/init/pptpd.openrc:     OpenRC compatible SysV style init script
+    contrib/init/pptpd.openrcconf: OpenRC conf.d file
+    contrib/init/pptpd.conf:       Upstart service configuration file
+    contrib/init/pptpd.init:       CentOS compatible SysV style init script
 
 1. Service User
 ---------------------------------
 
-All three Linux startup configurations assume the existence of a "wavicore" user
+All three Linux startup configurations assume the existence of a "pptpcore" user
 and group.  They must be created before attempting to use these scripts.
-The OS X configuration assumes wavid will be set up for the current user.
+The OS X configuration assumes pptpd will be set up for the current user.
 
 2. Configuration
 ---------------------------------
 
-At a bare minimum, wavid requires that the rpcpassword setting be set
+At a bare minimum, pptpd requires that the rpcpassword setting be set
 when running as a daemon.  If the configuration file does not exist or this
-setting is not set, wavid will shutdown promptly after startup.
+setting is not set, pptpd will shutdown promptly after startup.
 
 This password does not have to be remembered or typed as it is mostly used
-as a fixed token that wavid and client programs read from the configuration
+as a fixed token that pptpd and client programs read from the configuration
 file, however it is recommended that a strong and secure password be used
 as this password is security critical to securing the wallet should the
 wallet be enabled.
 
-If wavid is run with the "-server" flag (set by default), and no rpcpassword is set,
+If pptpd is run with the "-server" flag (set by default), and no rpcpassword is set,
 it will use a special cookie file for authentication. The cookie is generated with random
 content when the daemon starts, and deleted when it exits. Read access to this file
 controls who can access it through RPC.
@@ -38,13 +38,13 @@
 By default the cookie is stored in the data directory, but it's location can be overridden
 with the option '-rpccookiefile'.
 
-This allows for running wavid without having to do any manual configuration.
+This allows for running pptpd without having to do any manual configuration.
 
 `conf`, `pid`, and `wallet` accept relative paths which are interpreted as
 relative to the data directory. `wallet` *only* supports relative paths.
 
 For an example configuration file that describes the configuration settings,
-see `contrib/debian/examples/wavi.conf`.
+see `contrib/debian/examples/pptp.conf`.
 
 3. Paths
 ---------------------------------
@@ -53,24 +53,24 @@
 
 All three configurations assume several paths that might need to be adjusted.
 
-Binary:              `/usr/bin/wavid`  
-Configuration file:  `/etc/wavicore/wavi.conf`  
-Data directory:      `/var/lib/wavid`  
-PID file:            `/var/run/wavid/wavid.pid` (OpenRC and Upstart) or `/var/lib/wavid/wavid.pid` (systemd)  
-Lock file:           `/var/lock/subsys/wavid` (CentOS)  
+Binary:              `/usr/bin/pptpd`  
+Configuration file:  `/etc/pptpcore/pptp.conf`  
+Data directory:      `/var/lib/pptpd`  
+PID file:            `/var/run/pptpd/pptpd.pid` (OpenRC and Upstart) or `/var/lib/pptpd/pptpd.pid` (systemd)  
+Lock file:           `/var/lock/subsys/pptpd` (CentOS)  
 
 The configuration file, PID directory (if applicable) and data directory
-should all be owned by the wavicore user and group.  It is advised for security
+should all be owned by the pptpcore user and group.  It is advised for security
 reasons to make the configuration file and data directory only readable by the
-wavicore user and group.  Access to wavi-cli and other wavid rpc clients
+pptpcore user and group.  Access to pptp-cli and other pptpd rpc clients
 can then be controlled by group membership.
 
 3b) Mac OS X
 
-Binary:              `/usr/local/bin/wavid`  
-Configuration file:  `~/Library/Application Support/WaviCore/wavi.conf`  
-Data directory:      `~/Library/Application Support/WaviCore`
-Lock file:           `~/Library/Application Support/WaviCore/.lock`
+Binary:              `/usr/local/bin/pptpd`  
+Configuration file:  `~/Library/Application Support/PptpCore/pptp.conf`  
+Data directory:      `~/Library/Application Support/PptpCore`
+Lock file:           `~/Library/Application Support/PptpCore/.lock`
 
 4. Installing Service Configuration
 -----------------------------------
@@ -81,19 +81,19 @@
 /usr/lib/systemd/system directory, followed by the command
 `systemctl daemon-reload` in order to update running systemd configuration.
 
-To test, run `systemctl start wavid` and to enable for system startup run
-`systemctl enable wavid`
+To test, run `systemctl start pptpd` and to enable for system startup run
+`systemctl enable pptpd`
 
 4b) OpenRC
 
-Rename wavid.openrc to wavid and drop it in /etc/init.d.  Double
+Rename pptpd.openrc to pptpd and drop it in /etc/init.d.  Double
 check ownership and permissions and make it executable.  Test it with
-`/etc/init.d/wavid start` and configure it to run on startup with
-`rc-update add wavid`
+`/etc/init.d/pptpd start` and configure it to run on startup with
+`rc-update add pptpd`
 
 4c) Upstart (for Debian/Ubuntu based distributions)
 
-Drop wavid.conf in /etc/init.  Test by running `service wavid start`
+Drop pptpd.conf in /etc/init.  Test by running `service pptpd start`
 it will automatically start on reboot.
 
 NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they
@@ -101,22 +101,22 @@
 
 4d) CentOS
 
-Copy wavid.init to /etc/init.d/wavid. Test by running `service wavid start`.
+Copy pptpd.init to /etc/init.d/pptpd. Test by running `service pptpd start`.
 
-Using this script, you can adjust the path and flags to the wavid program by
-setting the WAVID and FLAGS environment variables in the file
-/etc/sysconfig/wavid. You can also use the DAEMONOPTS environment variable here.
+Using this script, you can adjust the path and flags to the pptpd program by
+setting the PPTPD and FLAGS environment variables in the file
+/etc/sysconfig/pptpd. You can also use the DAEMONOPTS environment variable here.
 
 4e) Mac OS X
 
-Copy org.wavi.wavid.plist into ~/Library/LaunchAgents. Load the launch agent by
-running `launchctl load ~/Library/LaunchAgents/org.wavi.wavid.plist`.
+Copy org.pptp.pptpd.plist into ~/Library/LaunchAgents. Load the launch agent by
+running `launchctl load ~/Library/LaunchAgents/org.pptp.pptpd.plist`.
 
-This Launch Agent will cause wavid to start whenever the user logs in.
+This Launch Agent will cause pptpd to start whenever the user logs in.
 
-NOTE: This approach is intended for those wanting to run wavid as the current user.
-You will need to modify org.wavi.wavid.plist if you intend to use it as a
-Launch Daemon with a dedicated wavicore user.
+NOTE: This approach is intended for those wanting to run pptpd as the current user.
+You will need to modify org.pptp.pptpd.plist if you intend to use it as a
+Launch Daemon with a dedicated pptpcore user.
 
 5. Auto-respawn
 -----------------------------------
diff -r -u ./wavi/doc/instantsend.md ./pptp/doc/instantsend.md
--- ./wavi/doc/instantsend.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/instantsend.md	Sat Mar 31 12:31:03 2018
@@ -15,9 +15,9 @@
 * `zmqpubrawtxlock`: publishes the raw transaction when locked via InstantSend
 * `zmqpubhashtxlock`: publishes the transaction hash when locked via InstantSend
 
-This mechanism has been integrated into Bitcore-Node-Wavi which allows for notification to be broadcast through Insight API in one of two ways:
-* WebSocket: [https://github.com/wavibanana/insight-api-wavi#web-socket-api](https://github.com/wavibanana/insight-api-wavi#web-socket-api)
-* API: [https://github.com/wavibanana/insight-api-wavi#instantsend-transactions](https://github.com/wavibanana/insight-api-wavi#instantsend-transactions)
+This mechanism has been integrated into Bitcore-Node-Pptp which allows for notification to be broadcast through Insight API in one of two ways:
+* WebSocket: [https://github.com/conan-equal-newone/insight-api-pptp#web-socket-api](https://github.com/conan-equal-newone/insight-api-pptp#web-socket-api)
+* API: [https://github.com/conan-equal-newone/insight-api-pptp#instantsend-transactions](https://github.com/conan-equal-newone/insight-api-pptp#instantsend-transactions)
 
 #### Command line option
 
@@ -31,13 +31,13 @@
 
 Details pertaining to an observed "Transaction Lock" can also be retrieved through RPC, it’s important however to understand the underlying mechanism.
 
-By default, the Wavi Core daemon will launch using the following constant:
+By default, the Pptp Core daemon will launch using the following constant:
 
 ```
 static const int DEFAULT_INSTANTSEND_DEPTH = 5;
 ```
 
-This value can be overridden by passing the following argument to the Wavi Core daemon:
+This value can be overridden by passing the following argument to the Pptp Core daemon:
 
 ```
 -instantsenddepth=<n>
diff -r -u ./wavi/doc/keepass.md ./pptp/doc/keepass.md
--- ./wavi/doc/keepass.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/keepass.md	Sun Mar 25 19:57:54 2018
@@ -12,7 +12,7 @@
 
 ### What's new
 
-The following new options are available for wavid and wavi-qt:
+The following new options are available for pptpd and pptp-qt:
  - _-keepass_ Use KeePass 2 integration using KeePassHttp plugin (default: 0)
  - _-keepassport=_ Connect to KeePassHttp on port (default: 19455)
  - _-keepasskey=_ KeePassHttp key for AES encrypted communication with KeePass
@@ -22,27 +22,27 @@
 The following rpc commands are available:
 
  - _keepass genkey_: generates a base64 encoded 256 bit AES key that can be used for the communication with KeePassHttp. Only necessary for manual configuration. Use init for automatic configuration.
- - _keepass init_: sets up the association between wavid and keepass by generating an AES key and sending an association message to KeePassHttp. This will trigger KeePass to ask for an Id for the association. Returns the association and the base64 encoded string for the AES key.
+ - _keepass init_: sets up the association between pptpd and keepass by generating an AES key and sending an association message to KeePassHttp. This will trigger KeePass to ask for an Id for the association. Returns the association and the base64 encoded string for the AES key.
  - _keepass setpassphrase_: updates the passphrase in KeePassHttp to a new value. This should match the passphrase you intend to use for the wallet. Please note that the standard RPC commands _walletpassphrasechange_ and the wallet encrption from the QT GUI already send the updates to KeePassHttp, so this is only necessary for manual manipulation of the password.
 
 ### How to setup
 
-Sample initialization flow from _wavi-qt_ console (this needs to be done only once to set up the association):
+Sample initialization flow from _pptp-qt_ console (this needs to be done only once to set up the association):
 
  - Have KeePass running with an open database
- - Start _wavi-qt_
+ - Start _pptp-qt_
  - Open console
- - Type "_keepass init_" in wavi-qt console
+ - Type "_keepass init_" in pptp-qt console
  - Keepass pops up and asks for an association id, fill that in, for example, "_mydrkwallet_"
- - You should get a response like this "_Association successful. Id: mydrkwalletwavi - Key: AgQkcs6cI7v9tlSYKjG/+s8wJrGALHl3jLosJpPLzUE=_"
- - Edit _wavi.conf_ and fill in these values
+ - You should get a response like this "_Association successful. Id: mydrkwalletpptp - Key: AgQkcs6cI7v9tlSYKjG/+s8wJrGALHl3jLosJpPLzUE=_"
+ - Edit _pptp.conf_ and fill in these values
 ```
 keepass=1
 keepasskey=AgQkcs6cI7v9tlSYKjG/+s8wJrGALHl3jLosJpPLzUE=
 keepassid=mydrkwallet
 keepassname=testwallet
 ```
- - Restart _wavi-qt_
+ - Restart _pptp-qt_
 
 At this point, the association is made. The next action depends on your particular situation:
 
@@ -51,4 +51,4 @@
 
 At this point, the passphrase is stored in KeePassHttp. When Unlocking the wallet, one can use _keepass_ as the passphrase to trigger retrieval of the password. This works from the RPC commands as well as the GUI.
 
-Extended guide with screenshots is also available: https://wavitalk.org/threads/keepass-integration.3620/
+Extended guide with screenshots is also available: https://pptptalk.org/threads/keepass-integration.3620/
diff -r -u ./wavi/doc/masternode-budget.md ./pptp/doc/masternode-budget.md
--- ./wavi/doc/masternode-budget.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/masternode-budget.md	Sun Mar 25 19:58:18 2018
@@ -4,7 +4,7 @@
 Masternode Budget API
 =======================
 
-Wavi now supports full decentralized budgets that are paid directly from the blockchain via superblocks once per month.
+Pptp now supports full decentralized budgets that are paid directly from the blockchain via superblocks once per month.
 
 Budgets go through a series of stages before being paid:
  * prepare - create a special transaction that destroys coins in order to make a proposal
@@ -19,11 +19,11 @@
 1. Prepare collateral transaction
 --
 
-In this transaction we prepare collateral for "_cool-project_". This proposal will pay _1200_ WAVI, _12_ times over the course of a year totaling _24000_ WAVI.
+In this transaction we prepare collateral for "_cool-project_". This proposal will pay _1200_ PPTP, _12_ times over the course of a year totaling _24000_ PPTP.
 
 **Warning: if you change any fields within this command, the collateral transaction will become invalid.**
 
-Format: ```mngovernance prepare proposal-name url payment-count block-start wavi-address monthly-payment-wavi```
+Format: ```mngovernance prepare proposal-name url payment-count block-start pptp-address monthly-payment-pptp```
 
 Example: ```mngovernance prepare cool-project http://www.cool-project/one.json 12 100000 y6R9oN12KnB9zydzTLc3LikD9cCjjQzYG7 1200 true```
 
@@ -36,7 +36,7 @@
 
 Now we can submit our proposal to the network.
 
-Format: ```mngovernance submit proposal-name url payment-count block-start wavi-address monthly-payment-wavi fee-tx```
+Format: ```mngovernance submit proposal-name url payment-count block-start pptp-address monthly-payment-pptp fee-tx```
 
 Example: ```mngovernance submit cool-project http://www.cool-project/one.json 12 100000 y6R9oN12KnB9zydzTLc3LikD9cCjjQzYG7 1200 464a0eb70ea91c94295214df48c47baa72b3876cfb658744aaf863c7b5bf1ff0```
 
@@ -128,7 +128,7 @@
 6. Get paid
 --
 
-When block ```1000000``` is reached you'll receive a payment for ```1200``` WAVI to ```y6R9oN12KnB9zydzTLc3LikD9cCjjQzYG7```.
+When block ```1000000``` is reached you'll receive a payment for ```1200``` PPTP to ```y6R9oN12KnB9zydzTLc3LikD9cCjjQzYG7```.
 
 7. Command list
 --
@@ -146,7 +146,7 @@
   - nextblock          - Get info about next superblock for budget system
   - nextsuperblocksize - Get superblock size for a given blockheight
   - projection         - Show the projection of which proposals will be paid the next cycle
-  - vote               - Vote on a proposal by single masternode (using wavi.conf setup)
+  - vote               - Vote on a proposal by single masternode (using pptp.conf setup)
   - vote-many          - Vote on a proposal by all masternodes (using masternode.conf setup)
   - vote-alias         - Vote on a proposal by alias
  - mnfinalbudget "command"... ( "passphrase" )
diff -r -u ./wavi/doc/masternode.md ./pptp/doc/masternode.md
--- ./wavi/doc/masternode.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/masternode.md	Sun Mar 25 19:46:14 2018
@@ -1,23 +1,23 @@
-What is a WAVI masternode?
+What is a PPTP masternode?
 ===========================
 
-WAVI uses special servers called masternodes to power PrivateSend, InstantSend, and the governance and treasury system. Users are rewarded for running masternodes; 45% of the block reward is allocated to pay the masternode network.
+PPTP uses special servers called masternodes to power PrivateSend, InstantSend, and the governance and treasury system. Users are rewarded for running masternodes; 45% of the block reward is allocated to pay the masternode network.
 
 Masternodes enable the following services:
 -------------------------------------------
-•InstantSend allows for near-instant transactions. WAVI InstantSend transactions are fully confirmed within four seconds.
+•InstantSend allows for near-instant transactions. PPTP InstantSend transactions are fully confirmed within four seconds.
 
 •PrivateSend gives financial privacy by obscuring the source of funds on the blockchain.
 
-•Governance and Treasury allows stakeholders in WAVI to determine the direction of the project and devotes 10% of the block reward to development of the project and ecosystem.
+•Governance and Treasury allows stakeholders in PPTP to determine the direction of the project and devotes 10% of the block reward to development of the project and ecosystem.
 
-•WAVI will make using cryptocurrency as easy as using PayPal.
+•PPTP will make using cryptocurrency as easy as using PayPal.
 
 
-Masternode owners must have possession of 1000 WAVI, which they prove by signing a message and broadcasting to the network. Those coins can be moved at any time, but moving them will cause the masternode to fall out of queue and stop earning rewards.
+Masternode owners must have possession of 1000 PPTP, which they prove by signing a message and broadcasting to the network. Those coins can be moved at any time, but moving them will cause the masternode to fall out of queue and stop earning rewards.
 
 
-Masternode users also are given voting rights on proposals. Each masternode has one vote and this vote can be used on budget proposals or important decisions that affect WAVI.
+Masternode users also are given voting rights on proposals. Each masternode has one vote and this vote can be used on budget proposals or important decisions that affect PPTP.
 
 READ MORE
 ----------
diff -r -u ./wavi/doc/masternode_conf.md ./pptp/doc/masternode_conf.md
--- ./wavi/doc/masternode_conf.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/masternode_conf.md	Sun Mar 25 19:57:54 2018
@@ -1,10 +1,10 @@
 Masternode config
 =======================
 
-Wavi Core allows controlling multiple remote masternodes from a single wallet. The wallet needs to have a valid collateral output of 1000 coins for each masternode and uses a configuration file named `masternode.conf` which can be found in the following data directory (depending on your operating system):
- * Windows: %APPDATA%\WaviCore\
- * Mac OS: ~/Library/Application Support/WaviCore/
- * Unix/Linux: ~/.wavicore/
+Pptp Core allows controlling multiple remote masternodes from a single wallet. The wallet needs to have a valid collateral output of 1000 coins for each masternode and uses a configuration file named `masternode.conf` which can be found in the following data directory (depending on your operating system):
+ * Windows: %APPDATA%\PptpCore\
+ * Mac OS: ~/Library/Application Support/PptpCore/
+ * Unix/Linux: ~/.pptpcore/
 
 `masternode.conf` is a space separated text file. Each line consists of an alias, IP address followed by port, masternode private key, collateral output transaction id and collateral output index.
 
@@ -15,8 +15,8 @@
 ```
 
 In the example above:
-* the collateral of 1000 WAVI for `mn1` is output `0` of transaction [7603c20a05258c208b58b0a0d77603b9fc93d47cfa403035f87f3ce0af814566](https://test.explorer.wavi.org/tx/7603c20a05258c208b58b0a0d77603b9fc93d47cfa403035f87f3ce0af814566)
-* the collateral of 1000 WAVI for `mn2` is output `1` of transaction [5d898e78244f3206e0105f421cdb071d95d111a51cd88eb5511fc0dbf4bfd95f](https://test.explorer.wavi.org/tx/5d898e78244f3206e0105f421cdb071d95d111a51cd88eb5511fc0dbf4bfd95f)
+* the collateral of 1000 PPTP for `mn1` is output `0` of transaction [7603c20a05258c208b58b0a0d77603b9fc93d47cfa403035f87f3ce0af814566](https://test.explorer.pptp.org/tx/7603c20a05258c208b58b0a0d77603b9fc93d47cfa403035f87f3ce0af814566)
+* the collateral of 1000 PPTP for `mn2` is output `1` of transaction [5d898e78244f3206e0105f421cdb071d95d111a51cd88eb5511fc0dbf4bfd95f](https://test.explorer.pptp.org/tx/5d898e78244f3206e0105f421cdb071d95d111a51cd88eb5511fc0dbf4bfd95f)
 
 _Note: IPs like 127.0.0.* are not allowed actually, we are using them here for explanatory purposes only. Make sure you have real reachable remote IPs in you `masternode.conf`._
 
diff -r -u ./wavi/doc/multiwallet-qt.md ./pptp/doc/multiwallet-qt.md
--- ./wavi/doc/multiwallet-qt.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/multiwallet-qt.md	Sun Mar 25 19:57:54 2018
@@ -10,7 +10,7 @@
 The two existing files most affected, by far, are bitcoingui.h and bitcoingui.cpp, as the BitcoinGUI class will require
 some major retrofitting.
 
-Only requiring some minor changes is wavi.cpp.
+Only requiring some minor changes is pptp.cpp.
 
 Finally, two new headers and source files will have to be added to bitcoin-qt.pro.
 
@@ -30,9 +30,9 @@
 refinements of the wallet controls with minimal need for further modifications to BitcoinGUI, thus greatly simplifying
 merges while reducing the risk of breaking top-level stuff.
 
-Changes to wavi.cpp
+Changes to pptp.cpp
 ----------------------
-wavi.cpp is the entry point into bitcoin-qt, and as such, will require some minor modifications to provide hooks for
+pptp.cpp is the entry point into bitcoin-qt, and as such, will require some minor modifications to provide hooks for
 multiple wallet support. Most importantly will be the way it instantiates WalletModels and passes them to the
 singleton BitcoinGUI instance called window. Formerly, BitcoinGUI kept a pointer to a single instance of a WalletModel.
 The initial change required is very simple: rather than calling `window.setWalletModel(&walletModel);` we perform the
diff -r -u ./wavi/doc/privatesend.md ./pptp/doc/privatesend.md
--- ./wavi/doc/privatesend.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/privatesend.md	Sun Mar 25 19:46:14 2018
@@ -1,11 +1,11 @@
 PRIVATESEND BASICS
 ====================
 
-PrivateSend provides true financial privacy by obscuring the origins of your funds. All the WAVI in your wallet is made up of different “inputs” which you can think of as separate, discrete coins. PrivateSend makes use of an innovative process to mix your inputs with the inputs of two other people, without your coins ever leaving your wallet. You keep full control of your money at all times.
+PrivateSend provides true financial privacy by obscuring the origins of your funds. All the PPTP in your wallet is made up of different “inputs” which you can think of as separate, discrete coins. PrivateSend makes use of an innovative process to mix your inputs with the inputs of two other people, without your coins ever leaving your wallet. You keep full control of your money at all times.
 
 The PrivateSend process works like this:
 
-PrivateSend starts off by breaking your transaction inputs down into standard denominations. These denominations are 0.01 WAVI, 0.1 WAVI, 1 WAVI and 10 WAVI – kind of like the paper money that you use every day.
+PrivateSend starts off by breaking your transaction inputs down into standard denominations. These denominations are 0.01 PPTP, 0.1 PPTP, 1 PPTP and 10 PPTP – kind of like the paper money that you use every day.
  Your wallet then makes requests to specially configured software nodes on the network, called “masternodes”, These masternodes are then informed that you are interested in mixing a certain denomination. No identifiable information is sent to the masternodes, so they never know “who” you are.
  When two other people send similar messages, indicating that they would like to also mix the same denomination, a mixing session is started. The masternode mixes up the inputs and instructs all three users’ wallets to pay the now-transformed input back to themselves. Your wallet pays that denomination directly to itself, but in a different address (called a change address).
 
@@ -19,7 +19,7 @@
 PrivateSend Technical Details (Advanced Users)
 -------------------------------------------------
 
-PrivateSend is a unique, decentralized mixer for creating an on-demand system of removing the history from coins on the network. This is mainly for fungability, which is the attribute of money that allows any token to be exchanged with any other token, without having a difference in price in the form of a premium for tokens with less or no history. Without PrivateSend, tokens with less history would become increasingly valuable as the network grows, because of their lack of association with prior transactions. Without fungibility, there is a risk that certain tokens could be “red listed” and lose some or all of their value if at any point in the past they had been found to be used in illegal or questionable activities. Nobody wants to hold money that was involved in illegal activity, yet after the activities take place, tokens re-enter the supply and pass to new users who had no connection with the prior illegal acts. We remove this issue with the implementation of PrivateSend, which is included as part of the core protocol of the WAVI network.
+PrivateSend is a unique, decentralized mixer for creating an on-demand system of removing the history from coins on the network. This is mainly for fungability, which is the attribute of money that allows any token to be exchanged with any other token, without having a difference in price in the form of a premium for tokens with less or no history. Without PrivateSend, tokens with less history would become increasingly valuable as the network grows, because of their lack of association with prior transactions. Without fungibility, there is a risk that certain tokens could be “red listed” and lose some or all of their value if at any point in the past they had been found to be used in illegal or questionable activities. Nobody wants to hold money that was involved in illegal activity, yet after the activities take place, tokens re-enter the supply and pass to new users who had no connection with the prior illegal acts. We remove this issue with the implementation of PrivateSend, which is included as part of the core protocol of the PPTP network.
 
 PrivateSend Status Codes
 --------------------------
@@ -33,14 +33,14 @@
 --------------------------
 
 Mixing is the process of joining multiple transactions together, from multiple users, where all unique information about the users is removed from the transaction. Users send tokens to themselves through the system, and at no time do these tokens ever leave the users’ wallet. masternode operators are therefore completely separate from the process of mixing. masternodes simply serve as a transit method for the storing and signing of transactions, allowing users a safe place to initiate the process in an anonymous way.
- Privacy is achieved by using denominated amounts of 100, 10, 1 or .1. Each session initiated on a masternode only carries a single denomination, such as having 10x 100 WAVI inputs and 10x 100 WAVI outputs. Users then individually sign their inputs to the collective outputs, allowing the transaction to be valid once complete and broadcastable.
+ Privacy is achieved by using denominated amounts of 100, 10, 1 or .1. Each session initiated on a masternode only carries a single denomination, such as having 10x 100 PPTP inputs and 10x 100 PPTP outputs. Users then individually sign their inputs to the collective outputs, allowing the transaction to be valid once complete and broadcastable.
 
 Fee Model Anonymity
 ---------------------
 
-In other implementations of mixing software, fees can be used to break the transactions apart and identify users on the networks. On the WAVI Network this is avoided by allowing masternodes a special type of message which allows them to broadcast fee-less transactions. We use this technology to decouple the fees from the transactions, so that for every 10 transactions using the PrivateSend technology, there is only one fee transaction. This prevents a timing attack on the PrivateSend implementation.
+In other implementations of mixing software, fees can be used to break the transactions apart and identify users on the networks. On the PPTP Network this is avoided by allowing masternodes a special type of message which allows them to broadcast fee-less transactions. We use this technology to decouple the fees from the transactions, so that for every 10 transactions using the PrivateSend technology, there is only one fee transaction. This prevents a timing attack on the PrivateSend implementation.
  Phases of PrivateSend
- The process begins when a user denominates some funds to be used as a “cash account”. They then simply tell a random masternode they would like to mix a specific denomination such as 100 WAVI. The masternode has no information about the transaction at this point, since the denomination carries no information about which inputs the user would ultimately like to mix. The masternode receives the request and issues a message to the network saying that it is ready to mix that denomination and that there is a user waiting.
+ The process begins when a user denominates some funds to be used as a “cash account”. They then simply tell a random masternode they would like to mix a specific denomination such as 100 PPTP. The masternode has no information about the transaction at this point, since the denomination carries no information about which inputs the user would ultimately like to mix. The masternode receives the request and issues a message to the network saying that it is ready to mix that denomination and that there is a user waiting.
  At this point if other users are wishing to mix inputs of that denomination, they can connect to the masternode that is hosting the other user’s transaction. When three users queue themselves on the same masternode, the next stage, “accepting_entries,” is initiated.
 
 In this stage, all users send their inputs and outputs to the masternode, where they are collected and put into memory until all users have identified the full list of inputs/outputs they would like to mix. Once this is complete, the process moves onto the next stage, “finalize.” At this point, the masternode sends a message back to the users, showing the merged transaction they all jointly created. All inputs are from the user’s wallet and all outputs are sent back directly to the user’s wallet. The funds involved in this process never leave the user’s wallet at any time, allowing the masternode to be completely segregated from users’ funds. This is how the process of PrivateSend remains trustless and secure, without risking user’s funds or exposing masternodes to excessive legal risk. Once the finalized transaction is approved, the process moves onto the next phase, “signing.”
diff -r -u ./wavi/doc/README.md ./pptp/doc/README.md
--- ./wavi/doc/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/README.md	Sat Mar 31 12:28:24 2018
@@ -1,37 +1,37 @@
-Wavi Core 0.12.2.3
+Pptp Core 0.12.2.4
 =====================
 
-This is the official reference wallet for Wavi digital currency and comprises the backbone of the Wavi peer-to-peer network. You can [download Wavi Core](https://github.com/wavidev-the-man/wavi/releases) or [build it yourself](#building) using the guides below.
+This is the official reference wallet for Pptp digital currency and comprises the backbone of the Pptp peer-to-peer network. You can [download Pptp Core](https://github.com/conan-equal-newone/pptp/releases) or [build it yourself](#building) using the guides below.
 
 Running
 ---------------------
-The following are some helpful notes on how to run Wavi on your native platform.
+The following are some helpful notes on how to run Pptp on your native platform.
 
 ### Unix
 
 Unpack the files into a directory and run:
 
-- `bin/wavi-qt` (GUI) or
-- `bin/wavid` (headless)
+- `bin/pptp-qt` (GUI) or
+- `bin/pptpd` (headless)
 
 ### Windows
 
-Unpack the files into a directory, and then run wavi-qt.exe.
+Unpack the files into a directory, and then run pptp-qt.exe.
 
 ### OS X
 
-Drag Wavi-Qt to your applications folder, and then run Wavi-Qt.
+Drag Pptp-Qt to your applications folder, and then run Pptp-Qt.
 
 ### Need Help?
 
-* See the [Wavi documentation](https://github.com/wavidev-the-man/wavi/tree/master/doc)
+* See the [Pptp documentation](https://github.com/conan-equal-newone/pptp/tree/master/doc)
 for help and more information.
-* Ask for help on [WAVI Discord channel](https://discord.gg/6vGNAh5).
-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/index.php?topic=3146751) forums.
+* Ask for help on [PPTP Discord channel](https://discord.gg/*).
+* Ask for help on the [BitcoinTalk](https://bitcointalk.org/index.php?topic=*) forums.
 
 Building
 ---------------------
-The following are developer notes on how to build Wavi Core on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.
+The following are developer notes on how to build Pptp Core on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.
 
 - [OS X Build Notes](build-osx.md)
 - [Unix Build Notes](build-unix.md)
@@ -41,7 +41,7 @@
 
 Development
 ---------------------
-The Wavi Core repo's [root README](/README.md) contains relevant information on the development process and automated testing.
+The Pptp Core repo's [root README](/README.md) contains relevant information on the development process and automated testing.
 
 - [Developer Notes](developer-notes.md)
 - [Multiwallet Qt Development](multiwallet-qt.md)
@@ -58,7 +58,7 @@
 
 ### Resources
 * Discuss on the [BitcointalkTalk](https://bitcointalk.org/index.php?topic=3146751) forums.
-* Discuss on [WAVI Discord channel](https://discord.gg/6vGNAh5).
+* Discuss on [PPTP Discord channel](https://discord.gg/6vGNAh5).
 
 ### Miscellaneous
 - [Assets Attribution](assets-attribution.md)
diff -r -u ./wavi/doc/README_windows.txt ./pptp/doc/README_windows.txt
--- ./wavi/doc/README_windows.txt	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/README_windows.txt	Sat Mar 31 23:09:11 2018
@@ -1,9 +1,9 @@
-Wavi Core 0.12.1
+Pptp Core 0.12.1
 =====================
 
 Intro
 -----
-Wavi is a free open source peer-to-peer electronic cash system that is
+Pptp is a free open source peer-to-peer electronic cash system that is
 completely decentralized, without the need for a central server or trusted
 parties.  Users hold the crypto keys to their own money and transact directly
 with each other, with the help of a P2P network to check for double-spending.
@@ -11,13 +11,10 @@
 
 Setup
 -----
-Unpack the files into a directory and run wavi-qt.exe.
+Unpack the files into a directory and run pptp-qt.exe.
 
-Wavi Core is the original Wavi client and it builds the backbone of the network.
-However, it downloads and stores the entire history of Wavi transactions;
+Pptp Core is the original Pptp client and it builds the backbone of the network.
+However, it downloads and stores the entire history of Pptp transactions;
 depending on the speed of your computer and network connection, the synchronization
 process can take anywhere from a few hours to a day or more.
 
-See the wavi wiki at:
-  https://wavipay.atlassian.net/wiki/
-for more help and information.
diff -r -u ./wavi/doc/reduce-traffic.md ./pptp/doc/reduce-traffic.md
--- ./wavi/doc/reduce-traffic.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/reduce-traffic.md	Sun Mar 25 19:57:54 2018
@@ -3,7 +3,7 @@
 
 Some node operators need to deal with bandwidth caps imposed by their ISPs.
 
-By default, Wavi Core allows up to 125 connections to different peers, 8 of
+By default, Pptp Core allows up to 125 connections to different peers, 8 of
 which are outbound. You can therefore, have at most 117 inbound connections.
 
 The default settings can result in relatively significant traffic consumption.
@@ -34,5 +34,5 @@
 ## 3. Reduce maximum connections (`-maxconnections=<num>`)
 
 Reducing the maximum connected nodes to a minimum could be desirable if traffic
-limits are tiny. Keep in mind that wavi's trustless model works best if you are
+limits are tiny. Keep in mind that pptp's trustless model works best if you are
 connected to a handful of nodes.
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.10.0.md ./pptp/doc/release-notes/bitcoin/release-notes-0.10.0.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.10.0.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.10.0.md	Sun Mar 25 19:51:35 2018
@@ -714,7 +714,7 @@
 - kiwigb
 - Kosta Zertsekel
 - LongShao007
-- Luke Wavijr
+- Luke Pptpjr
 - Mark Friedenbach
 - Mathy Vanvoorden
 - Matt Corallo
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.10.1.md ./pptp/doc/release-notes/bitcoin/release-notes-0.10.1.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.10.1.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.10.1.md	Sun Mar 25 19:51:35 2018
@@ -134,7 +134,7 @@
 - fanquake
 - Jeff Garzik
 - Jonas Nick
-- Luke Wavijr
+- Luke Pptpjr
 - Patrick Strateman
 - Philip Kaufmann
 - Sergio Demian Lerner
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.10.3.md ./pptp/doc/release-notes/bitcoin/release-notes-0.10.3.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.10.3.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.10.3.md	Sun Mar 25 19:51:35 2018
@@ -148,7 +148,7 @@
 - Gregory Maxwell
 - Jonas Schnelli
 - J Ross Nicoll
-- Luke Wavijr
+- Luke Pptpjr
 - Pavel Vasin
 - Pieter Wuille
 - randy-waterhouse
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.11.0.md ./pptp/doc/release-notes/bitcoin/release-notes-0.11.0.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.11.0.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.11.0.md	Sun Mar 25 19:51:35 2018
@@ -434,7 +434,7 @@
 - Chris Arnesen
 - Ciemon
 - CohibAA
-- Corinne Wavijr
+- Corinne Pptpjr
 - Cory Fields
 - Cozz Lovan
 - Daira Hopwood
@@ -463,7 +463,7 @@
 - jtimon
 - Julian Yap
 - Luca Venturini
-- Luke Wavijr
+- Luke Pptpjr
 - Manuel Araoz
 - MarcoFalke
 - Matt Bogosian
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.11.1.md ./pptp/doc/release-notes/bitcoin/release-notes-0.11.1.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.11.1.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.11.1.md	Sun Mar 25 19:51:35 2018
@@ -149,7 +149,7 @@
 - Gregory Maxwell
 - Jonas Schnelli
 - J Ross Nicoll
-- Luke Wavijr
+- Luke Pptpjr
 - Pavel Janík
 - Pavel Vasin
 - Peter Todd
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.12.0.md ./pptp/doc/release-notes/bitcoin/release-notes-0.12.0.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.12.0.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.12.0.md	Sun Mar 25 19:51:36 2018
@@ -841,7 +841,7 @@
 - kazcw
 - Kevin Cooper
 - lpescher
-- Luke Wavijr
+- Luke Pptpjr
 - MarcoFalke
 - Mark Friedenbach
 - Matt
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.12.1.md ./pptp/doc/release-notes/bitcoin/release-notes-0.12.1.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.12.1.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.12.1.md	Sun Mar 25 19:51:36 2018
@@ -186,7 +186,7 @@
 - Alex Morcos
 - BtcDrak
 - Jonas Schnelli
-- Luke Wavijr
+- Luke Pptpjr
 - MarcoFalke
 - Mark Friedenbach
 - NicolasDorier
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.3.20.2.md ./pptp/doc/release-notes/bitcoin/release-notes-0.3.20.2.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.3.20.2.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.3.20.2.md	Sun Mar 25 19:57:54 2018
@@ -9,7 +9,7 @@
 
 (mac build will be done soon)
 
-If you have already downloaded version 0.3.20.1, please either add this to your wavi.conf file:
+If you have already downloaded version 0.3.20.1, please either add this to your pptp.conf file:
 
   maxsendbuffer=10000
   maxreceivebuffer=10000
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.4.3.md ./pptp/doc/release-notes/bitcoin/release-notes-0.4.3.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.4.3.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.4.3.md	Sun Mar 25 19:57:54 2018
@@ -1,5 +1,5 @@
 bitcoind version 0.4.3 is now available for download at:
-http://luke.wavijr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)
+http://luke.pptpjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)
 
 This is a bugfix-only release based on 0.4.0.
 
@@ -17,5 +17,5 @@
 Fixed some address-handling deadlocks (client freezes).
 No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).
 Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).
-Add new DNS seeds (maintained by Pieter Wuille and Luke Wavijr).
+Add new DNS seeds (maintained by Pieter Wuille and Luke Pptpjr).
 
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.4.4.md ./pptp/doc/release-notes/bitcoin/release-notes-0.4.4.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.4.4.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.4.4.md	Sun Mar 25 19:57:54 2018
@@ -1,5 +1,5 @@
 Bitcoin version 0.4.4 is now available for download at:
-http://luke.wavijr.org/programs/bitcoin/files/bitcoind-0.4.4/
+http://luke.pptpjr.org/programs/bitcoin/files/bitcoind-0.4.4/
 
 This is a bugfix-only release based on 0.4.0.
 
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.5.2.md ./pptp/doc/release-notes/bitcoin/release-notes-0.5.2.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.5.2.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.5.2.md	Sun Mar 25 19:51:36 2018
@@ -19,4 +19,4 @@
 Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).
 Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).
 Don't show "IP" for transactions which are not necessarily IP transactions.
-Add new DNS seeds (maintained by Pieter Wuille and Luke Wavijr).
+Add new DNS seeds (maintained by Pieter Wuille and Luke Pptpjr).
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.7.0.md ./pptp/doc/release-notes/bitcoin/release-notes-0.7.0.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.7.0.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.7.0.md	Sun Mar 25 19:51:36 2018
@@ -146,7 +146,7 @@
 Giel van Schijndel
 Gregory Maxwell
 Jeff Garzik
-Luke Wavijr
+Luke Pptpjr
 Matt Corallo
 Michael Ford
 Michael Hendricks
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.7.1.md ./pptp/doc/release-notes/bitcoin/release-notes-0.7.1.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.7.1.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.7.1.md	Sun Mar 25 19:51:36 2018
@@ -97,7 +97,7 @@
 
 Gavin Andresen
 Jeff Garzik
-Luke Wavijr
+Luke Pptpjr
 Mark Friedenbach
 Matt Corallo
 Philip Kaufmann
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.7.2.md ./pptp/doc/release-notes/bitcoin/release-notes-0.7.2.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.7.2.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.7.2.md	Sun Mar 25 19:51:36 2018
@@ -61,7 +61,7 @@
 Gavin Andresen
 Gregory Maxwell
 Jeff Garzik
-Luke Wavijr
+Luke Pptpjr
 Philip Kaufmann
 Pieter Wuille
 Wladimir J. van der Laan
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.8.0.md ./pptp/doc/release-notes/bitcoin/release-notes-0.8.0.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.8.0.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.8.0.md	Sun Mar 25 19:57:54 2018
@@ -61,7 +61,7 @@
 how to use the "raw transactions" JSON-RPC api to send coins received from particular
 addresses (also known as "coin control").
 
-New/changed settings (command-line or wavi.conf file)
+New/changed settings (command-line or pptp.conf file)
 --------------------------------------------------------
 
 dbcache : controls LevelDB memory usage.
@@ -117,7 +117,7 @@
 Gavin Andresen
 Gregory Maxwell
 Jeff Garzik
-Luke Wavijr
+Luke Pptpjr
 Matt Corallo
 Mike Cassano
 Mike Hearn
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.8.2.md ./pptp/doc/release-notes/bitcoin/release-notes-0.8.2.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.8.2.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.8.2.md	Sun Mar 25 19:51:36 2018
@@ -116,7 +116,7 @@
 Jeff Garzik
 Jonas Schnelli
 Larry Gilbert
-Luke Wavijr
+Luke Pptpjr
 Matt Corallo
 Michael Ford
 Mike Hearn
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.9.2.1.md ./pptp/doc/release-notes/bitcoin/release-notes-0.9.2.1.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.9.2.1.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.9.2.1.md	Sun Mar 25 19:51:36 2018
@@ -175,7 +175,7 @@
 - jtimon
 - Kamil Domanski
 - langerhans
-- Luke Wavijr
+- Luke Pptpjr
 - Manuel Araoz
 - Mark Friedenbach
 - Matt Corallo
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.9.2.md ./pptp/doc/release-notes/bitcoin/release-notes-0.9.2.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.9.2.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.9.2.md	Sun Mar 25 19:51:36 2018
@@ -175,7 +175,7 @@
 - jtimon
 - Kamil Domanski
 - langerhans
-- Luke Wavijr
+- Luke Pptpjr
 - Manuel Araoz
 - Mark Friedenbach
 - Matt Corallo
diff -r -u ./wavi/doc/release-notes/bitcoin/release-notes-0.9.4.md ./pptp/doc/release-notes/bitcoin/release-notes-0.9.4.md
--- ./wavi/doc/release-notes/bitcoin/release-notes-0.9.4.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/bitcoin/release-notes-0.9.4.md	Sun Mar 25 19:51:36 2018
@@ -85,7 +85,7 @@
 - Gavin Andresen
 - Gregory Maxwell
 - Jeff Garzik
-- Luke Wavijr
+- Luke Pptpjr
 - Matt Corallo
 - Pieter Wuille
 - Saivann
diff -r -u ./wavi/doc/release-notes/wabi/release-notes-0.12.2.3.md ./pptp/doc/release-notes/wabi/release-notes-0.12.2.3.md
--- ./wavi/doc/release-notes/wabi/release-notes-0.12.2.3.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes/wabi/release-notes-0.12.2.3.md	Sun Mar 25 19:51:36 2018
@@ -1,4 +1,4 @@
-Wavi Core version 0.12.2.3
+Pptp Core version 0.12.2.3
 ==========================
 
 The First Release is now available
diff -r -u ./wavi/doc/release-notes.md ./pptp/doc/release-notes.md
--- ./wavi/doc/release-notes.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-notes.md	Sat Mar 31 12:31:24 2018
@@ -1,13 +1,17 @@
-Wavi Core version 0.12.2.4
+Pptp Core version 0.12.2.4
 ==========================
 
 Release is now available from:
 
-  <https://github.com/wavidev-the-man/wavi/releases>
+  <https://github.com/conan-equal-newone/pptp>
 
-This is a new version release, bringing various bugfixes and other
+This is a new minor version release, bringing various bugfixes and other
 improvements.
 
+Please report bugs using the issue tracker at github:
+
+  <https://github.com/conan-equal-newone/pptp/issues>
+
 
 Upgrading and downgrading
 =========================
@@ -17,8 +21,8 @@
 
 If you are running an older version, shut it down. Wait until it has completely
 shut down (which might take a few minutes for older versions), then run the
-installer (on Windows) or just copy over /Applications/Wavi-Qt (on Mac) or
-wavid/wavi-qt (on Linux).
+installer (on Windows) or just copy over /Applications/Pptp-Qt (on Mac) or
+pptpd/pptp-qt (on Linux).
 
 
 Notable changes
@@ -53,4 +57,3 @@
 
 This release also fixes a few crashes and compatibility issues.
 
-
diff -r -u ./wavi/doc/release-process.md ./pptp/doc/release-process.md
--- ./wavi/doc/release-process.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/release-process.md	Sat Mar 31 12:34:07 2018
@@ -1,7 +1,7 @@
 Release Process
 ====================
 
-* Update translations, see [translation_process.md](https://github.com/wavidev-the-man/wavi/blob/master/doc/translation_process.md#syncing-with-transifex)
+* Update translations, see [translation_process.md](https://github.com/conan-equal-newone/pptp/blob/master/doc/translation_process.md#syncing-with-transifex)
 * Update hardcoded [seeds](/contrib/seeds)
 
 * * *
@@ -10,6 +10,186 @@
 Check out the source code in the following directory hierarchy.
 
 	cd /path/to/your/toplevel/build
-	git clone https://github.com/wavidev-the-man/wavi.git
+	git clone https://github.com/conan-equal-newone/gitian.sigs.git
+	git clone https://github.com/conan-equal-newone/pptp-detached-sigs.git
+	git clone https://github.com/devrandom/gitian-builder.git
+	git clone https://github.com/conan-equal-newone/pptp.git
 
+### Pptp Core maintainers/release engineers, update (commit) version in sources
 
+	pushd ./pptp
+	contrib/verifysfbinaries/verify.sh
+	configure.ac
+	doc/README*
+	doc/Doxyfile
+	contrib/gitian-descriptors/*.yml
+	src/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)
+
+	# tag version in git
+
+	git tag -s v(new version, e.g. 0.8.0)
+
+	# write release notes. git shortlog helps a lot, for example:
+
+	git shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)
+	popd
+
+* * *
+
+### Setup and perform Gitian builds
+
+ Setup Gitian descriptors:
+
+	pushd ./pptp
+	export SIGNER=(your Gitian key, ie bluematt, sipa, etc)
+	export VERSION=(new version, e.g. 0.8.0)
+	git fetch
+	git checkout v${VERSION}
+	popd
+
+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other Gitian signatures.
+
+	pushd ./gitian.sigs
+	git pull
+	popd
+
+  Ensure gitian-builder is up-to-date to take advantage of new caching features (`e9741525c` or later is recommended).
+
+	pushd ./gitian-builder
+	git pull
+
+### Fetch and create inputs: (first time, or when dependency versions change)
+
+	mkdir -p inputs
+	wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch
+	wget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz
+
+ Register and download the Apple SDK: see [OS X readme](README_osx.txt) for details.
+
+ https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg
+
+ Using a Mac, create a tarball for the 10.9 SDK and copy it to the inputs directory:
+
+	tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk
+
+### Optional: Seed the Gitian sources cache and offline git repositories
+
+By default, Gitian will fetch source files as needed. To cache them ahead of time:
+
+	make -C ../pptp/depends download SOURCES_PATH=`pwd`/cache/common
+
+Only missing files will be fetched, so this is safe to re-run for each build.
+
+NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:
+```
+./bin/gbuild --url pptp=/path/to/pptp,signature=/path/to/sigs {rest of arguments}
+```
+The gbuild invocations below <b>DO NOT DO THIS</b> by default.
+
+### Build and sign Pptp Core for Linux, Windows, and OS X:
+
+	./bin/gbuild --commit pptp=v${VERSION} ../pptp/contrib/gitian-descriptors/gitian-linux.yml
+	./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../pptp/contrib/gitian-descriptors/gitian-linux.yml
+	mv build/out/pptp-*.tar.gz build/out/src/pptp-*.tar.gz ../
+
+	./bin/gbuild --commit pptp=v${VERSION} ../pptp/contrib/gitian-descriptors/gitian-win.yml
+	./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../pptp/contrib/gitian-descriptors/gitian-win.yml
+	mv build/out/pptp-*-win-unsigned.tar.gz inputs/pptp-win-unsigned.tar.gz
+	mv build/out/pptp-*.zip build/out/pptp-*.exe ../
+
+	./bin/gbuild --commit pptp=v${VERSION} ../pptp/contrib/gitian-descriptors/gitian-osx.yml
+	./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../pptp/contrib/gitian-descriptors/gitian-osx.yml
+	mv build/out/pptp-*-osx-unsigned.tar.gz inputs/pptp-osx-unsigned.tar.gz
+	mv build/out/pptp-*.tar.gz build/out/pptp-*.dmg ../
+	popd
+
+  Build output expected:
+
+  1. source tarball (pptp-${VERSION}.tar.gz)
+  2. linux 32-bit and 64-bit dist tarballs (pptp-${VERSION}-linux[32|64].tar.gz)
+  3. windows 32-bit and 64-bit unsigned installers and dist zips (pptp-${VERSION}-win[32|64]-setup-unsigned.exe, pptp-${VERSION}-win[32|64].zip)
+  4. OS X unsigned installer and dist tarball (pptp-${VERSION}-osx-unsigned.dmg, pptp-${VERSION}-osx64.tar.gz)
+  5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/
+
+### Verify other gitian builders signatures to your own. (Optional)
+
+  Add other gitian builders keys to your gpg keyring
+
+	gpg --import ../pptp/contrib/gitian-downloader/*.pgp
+
+  Verify the signatures
+
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../pptp/contrib/gitian-descriptors/gitian-linux.yml
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../pptp/contrib/gitian-descriptors/gitian-win.yml
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../pptp/contrib/gitian-descriptors/gitian-osx.yml
+
+	popd
+
+### Next steps:
+
+Commit your signature to gitian.sigs:
+
+	pushd gitian.sigs
+	git add ${VERSION}-linux/${SIGNER}
+	git add ${VERSION}-win-unsigned/${SIGNER}
+	git add ${VERSION}-osx-unsigned/${SIGNER}
+	git commit -a
+	git push  # Assuming you can push to the gitian.sigs tree
+	popd
+
+  Wait for Windows/OS X detached signatures:
+	Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.
+	Detached signatures will then be committed to the [pptp-detached-sigs](https://github.com/conan-equal-newone/pptp-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.
+
+  Create (and optionally verify) the signed OS X binary:
+
+	pushd ./gitian-builder
+	./bin/gbuild -i --commit signature=v${VERSION} ../pptp/contrib/gitian-descriptors/gitian-osx-signer.yml
+	./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../pptp/contrib/gitian-descriptors/gitian-osx-signer.yml
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../pptp/contrib/gitian-descriptors/gitian-osx-signer.yml
+	mv build/out/pptp-osx-signed.dmg ../pptp-${VERSION}-osx.dmg
+	popd
+
+  Create (and optionally verify) the signed Windows binaries:
+
+	pushd ./gitian-builder
+	./bin/gbuild -i --commit signature=v${VERSION} ../pptp/contrib/gitian-descriptors/gitian-win-signer.yml
+	./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../pptp/contrib/gitian-descriptors/gitian-win-signer.yml
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../pptp/contrib/gitian-descriptors/gitian-win-signer.yml
+	mv build/out/pptp-*win64-setup.exe ../pptp-${VERSION}-win64-setup.exe
+	mv build/out/pptp-*win32-setup.exe ../pptp-${VERSION}-win32-setup.exe
+	popd
+
+Commit your signature for the signed OS X/Windows binaries:
+
+	pushd gitian.sigs
+	git add ${VERSION}-osx-signed/${SIGNER}
+	git add ${VERSION}-win-signed/${SIGNER}
+	git commit -a
+	git push  # Assuming you can push to the gitian.sigs tree
+	popd
+
+-------------------------------------------------------------------------
+
+### After 3 or more people have gitian-built and their results match:
+
+- Create `SHA256SUMS.asc` for the builds, and GPG-sign it:
+```bash
+sha256sum * > SHA256SUMS
+gpg --digest-algo sha256 --clearsign SHA256SUMS # outputs SHA256SUMS.asc
+rm SHA256SUMS
+```
+(the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)
+Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.
+
+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the pptp.org server
+
+- Update pptp.org?
+
+- Announce the release:
+
+  - Release on Pptp forum: https://github.com/conan-equal-newone/pptp/forum/
+
+- Add release notes for the new version to the directory `doc/release-notes` in git master
+
+- Celebrate
diff -r -u ./wavi/doc/shared-libraries.md ./pptp/doc/shared-libraries.md
--- ./wavi/doc/shared-libraries.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/shared-libraries.md	Sun Mar 25 19:57:54 2018
@@ -1,21 +1,21 @@
 Shared Libraries
 ================
 
-## waviconsensus
+## pptpconsensus
 
-The purpose of this library is to make the verification functionality that is critical to Wavi's consensus available to other applications, e.g. to language bindings.
+The purpose of this library is to make the verification functionality that is critical to Pptp's consensus available to other applications, e.g. to language bindings.
 
 ### API
 
-The interface is defined in the C header `waviconsensus.h` located in  `src/script/waviconsensus.h`.
+The interface is defined in the C header `pptpconsensus.h` located in  `src/script/pptpconsensus.h`.
 
 #### Version
 
-`waviconsensus_version` returns an `unsigned int` with the the API version *(currently at an experimental `0`)*.
+`pptpconsensus_version` returns an `unsigned int` with the the API version *(currently at an experimental `0`)*.
 
 #### Script Validation
 
-`waviconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.
+`pptpconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.
 
 ##### Parameters
 - `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.
@@ -24,18 +24,18 @@
 - `unsigned int txToLen` - The number of bytes for the `txTo`.
 - `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.
 - `unsigned int flags` - The script validation flags *(see below)*.
-- `waviconsensus_error* err` - Will have the error/success code for the operation *(see below)*.
+- `pptpconsensus_error* err` - Will have the error/success code for the operation *(see below)*.
 
 ##### Script Flags
-- `waviconsensus_SCRIPT_FLAGS_VERIFY_NONE`
-- `waviconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts
-- `waviconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)) compliance
+- `pptpconsensus_SCRIPT_FLAGS_VERIFY_NONE`
+- `pptpconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts
+- `pptpconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)) compliance
 
 ##### Errors
-- `waviconsensus_ERR_OK` - No errors with input parameters *(see the return value of `waviconsensus_verify_script` for the verification status)*
-- `waviconsensus_ERR_TX_INDEX` - An invalid index for `txTo`
-- `waviconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`
-- `waviconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`
+- `pptpconsensus_ERR_OK` - No errors with input parameters *(see the return value of `pptpconsensus_verify_script` for the verification status)*
+- `pptpconsensus_ERR_TX_INDEX` - An invalid index for `txTo`
+- `pptpconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`
+- `pptpconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`
 
 ### Example Implementations
 - [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)
diff -r -u ./wavi/doc/tor.md ./pptp/doc/tor.md
--- ./wavi/doc/tor.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/tor.md	Sun Mar 25 19:57:54 2018
@@ -1,7 +1,7 @@
-TOR SUPPORT IN WAVI CORE
+TOR SUPPORT IN PPTP CORE
 =======================
 
-It is possible to run Wavi Core as a Tor hidden service, and connect to such services.
+It is possible to run Pptp Core as a Tor hidden service, and connect to such services.
 
 The following directions assume you have a Tor proxy running on port 9050. Many
 distributions default to having a SOCKS proxy listening on port 9050, but others
@@ -10,10 +10,10 @@
 for how to properly configure Tor.
 
 
-1. Run Wavi Core behind a Tor proxy
+1. Run Pptp Core behind a Tor proxy
 ----------------------------------
 
-The first step is running Wavi Core behind a Tor proxy. This will already make all
+The first step is running Pptp Core behind a Tor proxy. This will already make all
 outgoing connections be anonymized, but more is possible.
 
 	-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy
@@ -37,31 +37,31 @@
 An example how to start the client if the Tor proxy is running on local host on
 port 9050 and only allows .onion nodes to connect:
 
-	./wavid -onion=127.0.0.1:9050 -onlynet=tor -listen=0 -addnode=ssapp53tmftyjmjb.onion
+	./pptpd -onion=127.0.0.1:9050 -onlynet=tor -listen=0 -addnode=ssapp53tmftyjmjb.onion
 
 In a typical situation, this suffices to run behind a Tor proxy:
 
-	./wavid -proxy=127.0.0.1:9050
+	./pptpd -proxy=127.0.0.1:9050
 
 
-2. Run a Wavi Core hidden server
+2. Run a Pptp Core hidden server
 -------------------------------
 
 If you configure your Tor system accordingly, it is possible to make your node also
 reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent
 config file):
 
-	HiddenServiceDir /var/lib/tor/wavicore-service/
+	HiddenServiceDir /var/lib/tor/pptpcore-service/
 	HiddenServicePort 9999 127.0.0.1:9999
 	HiddenServicePort 19999 127.0.0.1:19999
 
 The directory can be different of course, but (both) port numbers should be equal to
-your wavid's P2P listen port (9999 by default).
+your pptpd's P2P listen port (9999 by default).
 
-	-externalip=X   You can tell Wavi Core about its publicly reachable address using
+	-externalip=X   You can tell Pptp Core about its publicly reachable address using
 	                this option, and this can be a .onion address. Given the above
 	                configuration, you can find your onion address in
-	                /var/lib/tor/wavicore-service/hostname. Onion addresses are given
+	                /var/lib/tor/pptpcore-service/hostname. Onion addresses are given
 	                preference for your node to advertise itself with, for connections
 	                coming from unroutable addresses (such as 127.0.0.1, where the
 	                Tor proxy typically runs).
@@ -78,28 +78,28 @@
 
 In a typical situation, where you're only reachable via Tor, this should suffice:
 
-	./wavid -proxy=127.0.0.1:9050 -externalip=ssapp53tmftyjmjb.onion -listen
+	./pptpd -proxy=127.0.0.1:9050 -externalip=ssapp53tmftyjmjb.onion -listen
 
 (obviously, replace the Onion address with your own). It should be noted that you still
 listen on all devices and another node could establish a clearnet connection, when knowing
 your address. To mitigate this, additionally bind the address of your Tor proxy:
 
-	./wavid ... -bind=127.0.0.1
+	./pptpd ... -bind=127.0.0.1
 
 If you don't care too much about hiding your node, and want to be reachable on IPv4
 as well, use `discover` instead:
 
-	./wavid ... -discover
+	./pptpd ... -discover
 
 and open port 9999 on your firewall (or use -upnp).
 
 If you only want to use Tor to reach onion addresses, but not use it as a proxy
 for normal IPv4/IPv6 communication, use:
 
-	./wavid -onion=127.0.0.1:9050 -externalip=ssapp53tmftyjmjb.onion -discover
+	./pptpd -onion=127.0.0.1:9050 -externalip=ssapp53tmftyjmjb.onion -discover
 
 
-3. List of known Wavi Core Tor relays
+3. List of known Pptp Core Tor relays
 ------------------------------------
 
 * [darkcoinie7ghp67.onion](http://darkcoinie7ghp67.onion/)
@@ -120,14 +120,14 @@
 
 Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket
 API, to create and destroy 'ephemeral' hidden services programmatically.
-Wavi Core has been updated to make use of this.
+Pptp Core has been updated to make use of this.
 
 This means that if Tor is running (and proper authorization is available),
-Wavi Core automatically creates a hidden service to listen on, without
+Pptp Core automatically creates a hidden service to listen on, without
 manual configuration. This will positively affect the number of available
 .onion nodes.
 
-This new feature is enabled by default if Wavi Core is listening, and
+This new feature is enabled by default if Pptp Core is listening, and
 a connection to Tor can be made. It can be configured with the `-listenonion`,
 `-torcontrol` and `-torpassword` settings. To show verbose debugging
 information, pass `-debug=tor`.
diff -r -u ./wavi/doc/translation_process.md ./pptp/doc/translation_process.md
--- ./wavi/doc/translation_process.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/translation_process.md	Sun Mar 25 19:57:54 2018
@@ -1,28 +1,28 @@
 Translations
 ============
 
-The Wavi Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Wavi Core makes use of the Transifex online translation management tool.
+The Pptp Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Pptp Core makes use of the Transifex online translation management tool.
 
 ### Helping to translate (using Transifex)
 Transifex is setup to monitor the Github repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface.
 
-Multiple language support is critical in assisting Wavi’s global adoption, and growth. One of Wavi’s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.
+Multiple language support is critical in assisting Pptp’s global adoption, and growth. One of Pptp’s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.
 
-See the [Transifex Wavi project](https://www.transifex.com/projects/p/wavi/) to assist in translations. You should also join the translation mailing list for announcements - see details below.
+See the [Transifex Pptp project](https://www.transifex.com/projects/p/pptp/) to assist in translations. You should also join the translation mailing list for announcements - see details below.
 
 ### Writing code with translations
 We use automated scripts to help extract translations in both Qt, and non-Qt source files. It is rarely necessary to manually edit the files in `src/qt/locale/`. The translation source files must adhere to the following format:
-`wavi_xx_YY.ts or wavi_xx.ts`
+`pptp_xx_YY.ts or pptp_xx.ts`
 
-`src/qt/locale/wavi_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `wavi_en.ts`.
+`src/qt/locale/pptp_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `pptp_en.ts`.
 
-To automatically regenerate the `wavi_en.ts` file, run the following commands:
+To automatically regenerate the `pptp_en.ts` file, run the following commands:
 ```sh
 cd src/
 make translate
 ```
 
-`contrib/wavi-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It’s mostly automated, and you shouldn’t need to worry about it.
+`contrib/pptp-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It’s mostly automated, and you shouldn’t need to worry about it.
 
 **Example Qt translation**
 ```cpp
@@ -36,7 +36,7 @@
 
 To create the pull-request, use the following commands:
 ```
-git add src/qt/wavistrings.cpp src/qt/locale/wavi_en.ts
+git add src/qt/pptpstrings.cpp src/qt/locale/pptp_en.ts
 git commit
 ```
 
@@ -44,7 +44,7 @@
 ### Creating a Transifex account
 Visit the [Transifex Signup](https://www.transifex.com/signup/) page to create an account. Take note of your username and password, as they will be required to configure the command-line tool.
 
-You can find the Wavi translation project at [https://www.transifex.com/projects/p/wavi/](https://www.transifex.com/projects/p/wavi/).
+You can find the Pptp translation project at [https://www.transifex.com/projects/p/pptp/](https://www.transifex.com/projects/p/pptp/).
 
 ### Installing the Transifex client command-line tool
 The client it used to fetch updated translations. If you are having problems, or need more details, see [http://docs.transifex.com/developer/client/setup](http://docs.transifex.com/developer/client/setup)
@@ -69,16 +69,16 @@
 
 Please see [http://docs.transifex.com/developer/client/setup#windows](http://docs.transifex.com/developer/client/setup#windows) for details on installation.
 
-The Transifex Wavi project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn’t need change anything.
+The Transifex Pptp project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn’t need change anything.
 
 ### Synchronising translations
 To assist in updating translations, we have created a script to help.
 
 1. `python contrib/devtools/update-translations.py`
-2. Update `src/qt/wavi_locale.qrc` manually or via
-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\(wavi_\(.*\)\).ts/<file alias="\2">locale\/\1.qm<\/file>/'`
+2. Update `src/qt/pptp_locale.qrc` manually or via
+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\(pptp_\(.*\)\).ts/<file alias="\2">locale\/\1.qm<\/file>/'`
 3. Update `src/Makefile.qt.include` manually or via
-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\(wavi_\(.*\)\).ts/  qt\/locale\/\1.ts \\/'`
+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\(pptp_\(.*\)\).ts/  qt\/locale\/\1.ts \\/'`
 4. `git add` new translations from `src/qt/locale/`
 
 **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.
@@ -86,7 +86,7 @@
 ### Handling Plurals (in source files)
 When new plurals are added to the source file, it's important to do the following steps:
 
-1. Open `wavi_en.ts` in Qt Linguist (included in the Qt SDK)
+1. Open `pptp_en.ts` in Qt Linguist (included in the Qt SDK)
 2. Search for `%n`, which will take you to the parts in the translation that use plurals
 3. Look for empty `English Translation (Singular)` and `English Translation (Plural)` fields
 4. Add the appropriate strings for the singular and plural form of the base string
@@ -99,7 +99,7 @@
 
 ```xml
 <qresource prefix="/translations">
-    <file alias="en">locale/wavi_en.qm</file>
+    <file alias="en">locale/pptp_en.qm</file>
     ...
 </qresource>
 ```
@@ -107,4 +107,4 @@
 **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.
 
 ### Questions and general assistance
-Check official forum at [https://wavitalk.org/forums/wavi-worldwide-collaboration.88/](https://wavitalk.org/forums/wavi-worldwide-collaboration.88/).
+Check official forum at [https://pptptalk.org/forums/pptp-worldwide-collaboration.88/](https://pptptalk.org/forums/pptp-worldwide-collaboration.88/).
diff -r -u ./wavi/doc/translation_strings_policy.md ./pptp/doc/translation_strings_policy.md
--- ./wavi/doc/translation_strings_policy.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/translation_strings_policy.md	Sun Mar 25 19:51:35 2018
@@ -1,7 +1,7 @@
 Translation Strings Policy
 ===========================
 
-This document provides guidelines for internationalization of the Wavi Core software.
+This document provides guidelines for internationalization of the Pptp Core software.
 
 How to translate?
 ------------------
@@ -85,10 +85,10 @@
 This adds `<numerusform>`s to the respective `.ts` file, which can be translated separately depending on the language. In English, this is simply:
 
     <message numerus="yes">
-        <source>%n active connection(s) to Wavi network</source>
+        <source>%n active connection(s) to Pptp network</source>
         <translation>
-            <numerusform>%n active connection to Wavi network</numerusform>
-            <numerusform>%n active connections to Wavi network</numerusform>
+            <numerusform>%n active connection to Pptp network</numerusform>
+            <numerusform>%n active connections to Pptp network</numerusform>
         </translation>
     </message>
 
diff -r -u ./wavi/doc/travis-ci.txt ./pptp/doc/travis-ci.txt
--- ./wavi/doc/travis-ci.txt	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/travis-ci.txt	Sun Mar 25 19:51:35 2018
@@ -29,7 +29,7 @@
 
 These caches can be manually removed if necessary. This is one of the the very few
 manual operations that is possible with Travis, and it can be done by the
-Wavi Core committer via the Travis web interface.
+Pptp Core committer via the Travis web interface.
 
 In some cases, secure strings may be needed for hiding sensitive info such as
 private keys or URLs. The travis client may be used to create these strings:
diff -r -u ./wavi/doc/unit-tests.md ./pptp/doc/unit-tests.md
--- ./wavi/doc/unit-tests.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/unit-tests.md	Sun Mar 25 19:57:54 2018
@@ -6,13 +6,13 @@
 
 After configuring, they can be run with `make check`.
 
-To run the wavid tests manually, launch `src/test/test_wavi`.
+To run the pptpd tests manually, launch `src/test/test_pptp`.
 
-To add more wavid tests, add `BOOST_AUTO_TEST_CASE` functions to the existing
+To add more pptpd tests, add `BOOST_AUTO_TEST_CASE` functions to the existing
 .cpp files in the `test/` directory or add new .cpp files that
 implement new BOOST_AUTO_TEST_SUITE sections.
 
-To run the wavi-qt tests manually, launch `src/qt/test/test_wavi-qt`
+To run the pptp-qt tests manually, launch `src/qt/test/test_pptp-qt`
 
-To add more wavi-qt tests, add them to the `src/qt/test/` directory and
+To add more pptp-qt tests, add them to the `src/qt/test/` directory and
 the `src/qt/test/test_main.cpp` file.
diff -r -u ./wavi/doc/zmq.md ./pptp/doc/zmq.md
--- ./wavi/doc/zmq.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/doc/zmq.md	Sun Mar 25 19:57:54 2018
@@ -5,8 +5,8 @@
 providing various message-oriented semantics such as publish/subscribe,
 request/reply, and push/pull.
 
-The Wavi Core daemon can be configured to act as a trusted "border
-router", implementing the wavi wire protocol and relay, making
+The Pptp Core daemon can be configured to act as a trusted "border
+router", implementing the pptp wire protocol and relay, making
 consensus decisions, maintaining the local blockchain database,
 broadcasting locally generated transactions into the network, and
 providing a queryable RPC interface to interact on a polled basis for
@@ -33,7 +33,7 @@
 
 ## Prerequisites
 
-The ZeroMQ feature in Wavi Core requires ZeroMQ API version 4.x or
+The ZeroMQ feature in Pptp Core requires ZeroMQ API version 4.x or
 newer. Typically, it is packaged by distributions as something like
 *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.
 
@@ -68,8 +68,8 @@
 
 For instance:
 
-    $ wavid -zmqpubhashtx=tcp://127.0.0.1:28332 \
-               -zmqpubrawtx=ipc:///tmp/wavid.tx.raw
+    $ pptpd -zmqpubhashtx=tcp://127.0.0.1:28332 \
+               -zmqpubrawtx=ipc:///tmp/pptpd.tx.raw
 
 Each PUB notification has a topic and body, where the header
 corresponds to the notification type. For instance, for the
@@ -77,7 +77,7 @@
 terminator) and the body is the hexadecimal transaction hash (32
 bytes).
 
-These options can also be provided in wavi.conf.
+These options can also be provided in pptp.conf.
 
 ZeroMQ endpoint specifiers for TCP (and others) are documented in the
 [ZeroMQ API](http://api.zeromq.org/4-0:_start).
@@ -89,9 +89,9 @@
 
 ## Remarks
 
-From the perspective of wavid, the ZeroMQ socket is write-only; PUB
+From the perspective of pptpd, the ZeroMQ socket is write-only; PUB
 sockets don't even have a read function. Thus, there is no state
-introduced into wavid directly. Furthermore, no information is
+introduced into pptpd directly. Furthermore, no information is
 broadcast that wasn't already received from the public P2P network.
 
 No authentication or authorization is done on connecting clients; it
@@ -104,5 +104,5 @@
 
 There are several possibilities that ZMQ notification can get lost
 during transmission depending on the communication type your are
-using. Wavid appends an up-counting sequence number to each
+using. Pptpd appends an up-counting sequence number to each
 notification which allows listeners to detect lost notifications.
Binary files ./wavi/docs/bitcoin.png and ./pptp/docs/bitcoin.png differ
Only in ./wavi/docs: css
Only in ./wavi/docs: fonts
Only in ./wavi/docs: img
diff -r -u ./wavi/docs/index.html ./pptp/docs/index.html
--- ./wavi/docs/index.html	Sat Mar 31 23:24:23 2018
+++ ./pptp/docs/index.html	Sat Mar 31 08:32:53 2018
@@ -1,10 +1,11 @@
 <html>
-<head><meta charset="UTF-8"><title>WAVI top page</title></head>
+<head><meta charset="UTF-8"><title>PPTP top page</title></head>
 <body>
-<h1 id="myText">WAVI the cryptocurrency</h1>
+<h1>PPTP the cryptocurrency</h1>
 <br><br>
-<p id="myText2"><a href="./index2.html">WAVI web page</a> needs stylesheet support.</p><br>
-<p id="myText4">If you wish&#x1f91f; the non stylesheet site, plz go to <a href="./index3.html">WAVI Normal Site</a>.</p><br>
+<p><a href="./index3.html">PPTP web page</a> does not need stylesheet support.</p><br>
+<p>If you wish&#x1f91f; the stylesheet site, plz go to <a href="./index3.html">WAVI Site</a>.</p><br>
+<img src="./ms_paint.png">
 </body>
 </html>
 
Only in ./wavi/docs: index2.html
diff -r -u ./wavi/docs/index3.html ./pptp/docs/index3.html
--- ./wavi/docs/index3.html	Sat Mar 31 23:24:23 2018
+++ ./pptp/docs/index3.html	Sat Mar 31 22:06:10 2018
@@ -1,53 +1,67 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html\; charset=UTF-8">
-<title>WAVI; YescryptR32 cryptocurrency</title>
+<title>PPTP; YescryptR16v2 cryptocurrency</title>
 </head>
 <body>
-<center><h1>WAVI</h1><img src="./bitcoin.png"></a><br>
-<h2>ON THE EARTH WITH YENTEN!</h2>
-WAVI is the first YescryptR32 algorithm cryptocurrency.<br>
-YescryptR32 is for home CPUs. No ASIC exists in the world.<hr>
-In the future, MEGA WASTE of electricity by ASICs may be restricted by nation.<br>
-WAVI will be the alternative coin when such situation.
+<center><h1>PPTP</h1><img src="./bitcoin.png"></a><br>
+<h2>April 1st Special Coin!</h2>
+PPTP is the reference cryptocurrency forked from <a href="https://wavidev-the-man.github.io/wavi/index2.html" target="_blank">WAVI</a> on 2018/4/1.<br>
+Easy to <a href="./wavi2pptp.txt" target="_blank">see change points to fork WAVI</a>.<br>
+<b>YescryptR16v2</b> algorithm is for home CPUs. No ASIC exists in the world.<hr>
+In the future, MEGA WASTE of electricity by ASICs may be restricted by United Nations Security Council.<br>
+PPTP will be the reference coin when such situation.
 <br>
 <br>
 <h2>SPECS</h2>
 <font size="-1"><center><table><tr><th></th><th></th></tr>
-<tr><td align="right" nowrap>Algorithm:</td><td align="left" nowrap> <b><font color=red>YescryptR32</font></b></td></tr>
+<tr><td align="right" nowrap>Algorithm:</td><td align="left" nowrap> <b><font color=red>YescryptR16v2</font></b></td></tr>
 <tr><td align="right" nowrap>Block time:</td><td align="left" nowrap> 2.0 minutes</td></tr>
-<tr><td align="right" nowrap>Block reward:</td><td align="left" nowrap> <b><font color=red>flexible</font></b> (Max 50 WAVI)</td></tr>
-<tr><td align="right" nowrap>Total WAVI:</td><td align="left" nowrap> 60 million WAVI</td></tr>
+<tr><td align="right" nowrap>Block reward:</td><td align="left" nowrap> <b><font color=red>flexible</font></b> (Max 50 PPTP)</td></tr>
+<tr><td align="right" nowrap>Total PPTP:</td><td align="left" nowrap> 60 million PPTP</td></tr>
 <tr><td align="right" nowrap>Difficulty re-target:</td><td align="left" nowrap> every block (<b><font color=red>Half-DGWv3</font></b>)</td></tr>
 <tr><td align="right" nowrap>Premine:</td><td align="left" nowrap> <b><font color=red>none</font></b></td></tr>
-<tr><td align="right" nowrap>Masternode:</td><td align="left" nowrap> <b><font color=red>yes</font></b> (1000 WAVI to run)</td></tr>
+<tr><td align="right" nowrap>Masternode:</td><td align="left" nowrap> <b><font color=red>yes</font></b> (1000 PPTP to run)</td></tr>
 <tr><td align="right" nowrap>Privatesend:</td><td align="left" nowrap> <b><font color=red>yes</font></b></td></tr>
 <tr><td align="right" nowrap>Instantsend:</td><td align="left" nowrap> <b><font color=red>yes</font></b></td></tr>
-<tr><td align="right" nowrap>P2P Port:</td><td align="left" nowrap> 9983</td></tr>
-<tr><td align="right" nowrap>RPC Port:</td><td align="left" nowrap> 9984</td></tr>
+<tr><td align="right" nowrap>P2P Port:</td><td align="left" nowrap> 9985</td></tr>
+<tr><td align="right" nowrap>RPC Port:</td><td align="left" nowrap> 9986</td></tr>
 </table></center></font>
 <br>
-<a href="https://github.com/wavidev-the-man/wavi/blob/master/doc/masternode.md" target="_blank">WHAT IS MASTERNODE?</a>
+<a href="https://github.com/conan-equal-newone/pptp/blob/master/doc/masternode.md" target="_blank">WHAT IS MASTERNODE?</a>
 <br><br>
-<a href="https://github.com/wavidev-the-man/wavi/blob/master/doc/instantsend.md" target="_blank">WHAT IS INSTANTSEND?</a>
+<a href="https://github.com/conan-equal-newone/pptp/blob/master/doc/instantsend.md" target="_blank">WHAT IS INSTANTSEND?</a>
 <br><br>
-<a href="https://github.com/wavidev-the-man/wavi/blob/master/doc/privatesend.md" target="_blank">WHAT IS PRIVATESEND?</a>
-<br>
-<br>
+<a href="https://github.com/conan-equal-newone/pptp/blob/master/doc/privatesend.md" target="_blank">WHAT IS PRIVATESEND?</a>
+<br><br>
+<br><br><br><br><br><br>
+<font size="7"><b>!?</b></font><br><br>
+<img src="./ms_paint11.png"><br>This is a WAVI.<br><br>
+<img src="./ms_paint22.png"><br>This is a Yenten.<br><br>
+<img src="./ms_paint33.png"><br>Ugh...<br><br><br><br>
+<img src="./ms_paint44.png"><br>PPTP.<br><br>
+<br><br><br>
 <h2>ROADMAP</h2>
-Community<br>
-Exchange<br>
-Markets<br>
-<br>
+Community?<br>
+Exchange??<br>
+Markets???<br>
+<br><br>
 <h2>MOST IMPORTANT ROADMAP</h2>
-<b><u><font color=red>EXISTING ON THE EARTH WITH YENTEN!</font></u></b><br>
-<br>
+<b><u><font color=red>EXISTING ON THE EARTH WITH POP TEAM!</font></u></b><br>
+<br><br>
+<h2>FAQ</h2>
+Q: <i>Hmm, I don't like PPTP.</i><br>
+A: <b>YOU ANTI, aren't you?</b><br>
+<br><br>
+Q: <i>お前の母ちゃん出ーべそ。</i><br>
+A: <b>お前の父ちゃんユーチューバー。</b><br>
+B: 俺の肝機能B判定ー。<br>
+<br><br>
 <audio autoplay preload="auto" volume=0.2>
-<source src="SC-8820.mp3">
+<source src="SC-88Pro.mp3">
 <p>HTML5 not supported browser</p>
 </audio>
-<h5>WAVI project 2018</h5><hr>
+<h5>Project Hellshake 2018</h5><hr>
 <a href="./"><font size=1>Back</font></a>
 </center></body>
 </html>
-
Only in ./wavi/docs: js
Only in ./pptp/docs: ms_paint.png
Only in ./pptp/docs: ms_paint11.png
Only in ./pptp/docs: ms_paint22.png
Only in ./pptp/docs: ms_paint33.png
Only in ./pptp/docs: ms_paint44.png
Only in ./wavi/docs: SC-8820.mp3
Only in ./pptp/docs: SC-88Pro.mp3
diff -r -u ./wavi/INSTALL ./pptp/INSTALL
--- ./wavi/INSTALL	Sat Mar 31 23:24:23 2018
+++ ./pptp/INSTALL	Sun Mar 25 19:57:53 2018
@@ -1,7 +1,7 @@
-Building Wavi Core
+Building Pptp Core
 
 After you install the usual build tools and C++ development tools,
-Wavi Core also needs some build dependencies which are not always provided
+Pptp Core also needs some build dependencies which are not always provided
 by default by the OS package manager
 (in particular BerkeleyDB 4.8 for building with wallet support).
 
@@ -21,10 +21,10 @@
     make
 
 Precompiled binaries are available at github, see
-https://github.com/wavibanana/wavi-binaries
+https://github.com/pptp/pptp-binaries
 
 Always verify the signatures and checksums.
 
-See doc/build-*.md for instructions on building wavid,
+See doc/build-*.md for instructions on building pptpd,
 the intended-for-services, no-graphical-interface,
-reference implementation of Wavi.
+reference implementation of Pptp.
Only in ./pptp: libpptpconsensus.pc.in
Only in ./wavi: libwaviconsensus.pc.in
diff -r -u ./wavi/Makefile.am ./pptp/Makefile.am
--- ./wavi/Makefile.am	Sat Mar 31 23:24:23 2018
+++ ./pptp/Makefile.am	Sun Mar 25 19:57:53 2018
@@ -6,16 +6,16 @@
 
 if BUILD_BITCOIN_LIBS
 pkgconfigdir = $(libdir)/pkgconfig
-pkgconfig_DATA = libwaviconsensus.pc
+pkgconfig_DATA = libpptpconsensus.pc
 endif
 
-BITCOIND_BIN=$(top_builddir)/src/wavid$(EXEEXT)
-BITCOIN_QT_BIN=$(top_builddir)/src/qt/wavi-qt$(EXEEXT)
-BITCOIN_CLI_BIN=$(top_builddir)/src/wavi-cli$(EXEEXT)
+BITCOIND_BIN=$(top_builddir)/src/pptpd$(EXEEXT)
+BITCOIN_QT_BIN=$(top_builddir)/src/qt/pptp-qt$(EXEEXT)
+BITCOIN_CLI_BIN=$(top_builddir)/src/pptp-cli$(EXEEXT)
 BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)
 
-OSX_APP=Wavi-Qt.app
-OSX_DMG=Wavi-Core.dmg
+OSX_APP=Pptp-Qt.app
+OSX_DMG=Pptp-Core.dmg
 OSX_BACKGROUND_IMAGE=background.tiff
 OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus
 OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist
@@ -41,9 +41,9 @@
   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh
 
 COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \
-  leveldb_baseline.info test_wavi_filtered.info total_coverage.info \
+  leveldb_baseline.info test_pptp_filtered.info total_coverage.info \
   baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \
-  leveldb_baseline_filtered.info test_wavi_coverage.info test_wavi.info
+  leveldb_baseline_filtered.info test_pptp_coverage.info test_pptp.info
 
 dist-hook:
 	-$(MAKE) -C $(top_distdir)/src/leveldb clean
@@ -86,7 +86,7 @@
 	$(MKDIR_P) $(@D)
 	$(INSTALL_DATA) $< $@
 
-$(OSX_APP)/Contents/MacOS/Wavi-Qt: $(BITCOIN_QT_BIN)
+$(OSX_APP)/Contents/MacOS/Pptp-Qt: $(BITCOIN_QT_BIN)
 	$(MKDIR_P) $(@D)
 	STRIPPROG="$(STRIP)" $(INSTALL_STRIP_PROGRAM)  $< $@
 
@@ -96,7 +96,7 @@
 
 OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \
   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \
-  $(OSX_APP)/Contents/MacOS/Wavi-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings
+  $(OSX_APP)/Contents/MacOS/Pptp-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings
 
 if BUILD_DARWIN
 $(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)
@@ -111,10 +111,10 @@
 	@rm -f $@
 	@cd $(@D); $(LN_S) /Applications $(@F)
 
-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Wavi-Qt
+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Pptp-Qt
 
 $(OSX_DMG): $(APP_DIST_EXTRAS)
-	$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V "Wavi-Core" -no-pad -r -dir-mode 0755 -apple -o $@ dist
+	$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V "Pptp-Core" -no-pad -r -dir-mode 0755 -apple -o $@ dist
 
 $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_IMAGE)
 	$(MKDIR_P) $(@D)
@@ -122,7 +122,7 @@
 $(APP_DIST_DIR)/.DS_Store: contrib/macdeploy/DS_Store
 	$(INSTALL) $< $@
 
-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Wavi-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)
+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Pptp-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)
 	INSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2
 
 deploydir: $(APP_DIST_EXTRAS)
@@ -162,16 +162,16 @@
 baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info
 	$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@
 
-test_wavi.info: baseline_filtered_combined.info
+test_pptp.info: baseline_filtered_combined.info
 	$(MAKE) -C src/ check
-	$(LCOV) -c -d $(abs_builddir)/src -t test_wavi -o $@
+	$(LCOV) -c -d $(abs_builddir)/src -t test_pptp -o $@
 	$(LCOV) -z -d $(abs_builddir)/src
 	$(LCOV) -z -d $(abs_builddir)/src/leveldb
 
-test_wavi_filtered.info: test_wavi.info
+test_pptp_filtered.info: test_pptp.info
 	$(LCOV) -r $< "/usr/include/*" -o $@
 
-block_test.info: test_wavi_filtered.info
+block_test.info: test_pptp_filtered.info
 	$(MKDIR_P) qa/tmp
 	-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)
 	$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@
@@ -181,7 +181,7 @@
 block_test_filtered.info: block_test.info
 	$(LCOV) -r $< "/usr/include/*" -o $@
 
-rpc_test.info: test_wavi_filtered.info
+rpc_test.info: test_pptp_filtered.info
 	-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)
 	$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@
 	$(LCOV) -z -d $(abs_builddir)/src
@@ -190,13 +190,13 @@
 rpc_test_filtered.info: rpc_test.info
 	$(LCOV) -r $< "/usr/include/*" -o $@
 
-test_wavi_coverage.info: baseline_filtered_combined.info test_wavi_filtered.info
-	$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_wavi_filtered.info -o $@
+test_pptp_coverage.info: baseline_filtered_combined.info test_pptp_filtered.info
+	$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_pptp_filtered.info -o $@
 
-total_coverage.info: baseline_filtered_combined.info test_wavi_filtered.info block_test_filtered.info rpc_test_filtered.info
-	$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_wavi_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) "\%" | $(AWK) '{ print substr($$3,2,50) "/" $$5 }' > coverage_percent.txt
+total_coverage.info: baseline_filtered_combined.info test_pptp_filtered.info block_test_filtered.info rpc_test_filtered.info
+	$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_pptp_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) "\%" | $(AWK) '{ print substr($$3,2,50) "/" $$5 }' > coverage_percent.txt
 
-test_wavi.coverage/.dirstamp:  test_wavi_coverage.info
+test_pptp.coverage/.dirstamp:  test_pptp_coverage.info
 	$(GENHTML) -s $< -o $(@D)
 	@touch $@
 
@@ -204,11 +204,11 @@
 	$(GENHTML) -s $< -o $(@D)
 	@touch $@
 
-cov: test_wavi.coverage/.dirstamp total.coverage/.dirstamp
+cov: test_pptp.coverage/.dirstamp total.coverage/.dirstamp
 
 endif
 
-# Wavi: disable the test until upstream switches from convoluted comparison tool
+# Pptp: disable the test until upstream switches from convoluted comparison tool
 # Ref https://github.com/bitcoin/bitcoin/issues/4545
 if USE_COMPARISON_TOOL
 check-local:
@@ -225,4 +225,4 @@
 .INTERMEDIATE: $(COVERAGE_INFO)
 
 clean-local:
-	rm -rf coverage_percent.txt test_wavi.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)
+	rm -rf coverage_percent.txt test_pptp.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)
Only in ./pptp: pptp-docs
diff -r -u ./wavi/qa/pull-tester/rpc-tests.py ./pptp/qa/pull-tester/rpc-tests.py
--- ./wavi/qa/pull-tester/rpc-tests.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/pull-tester/rpc-tests.py	Sun Mar 25 19:57:55 2018
@@ -62,10 +62,10 @@
 
 #Set env vars
 buildDir = BUILDDIR
-if "WAVID" not in os.environ:
-    os.environ["WAVID"] = buildDir + '/src/wavid' + EXEEXT
-if "WAVICLI" not in os.environ:
-    os.environ["WAVICLI"] = buildDir + '/src/wavi-cli' + EXEEXT
+if "PPTPD" not in os.environ:
+    os.environ["PPTPD"] = buildDir + '/src/pptpd' + EXEEXT
+if "PPTPCLI" not in os.environ:
+    os.environ["PPTPCLI"] = buildDir + '/src/pptp-cli' + EXEEXT
 
 if EXEEXT == ".exe" and "-win" not in opts:
     # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9
@@ -117,15 +117,15 @@
     'timestampindex.py',
     'spentindex.py',
     'decodescript.py',
-    'p2p-fullblocktest.py', # NOTE: needs wavi_hash to pass
+    'p2p-fullblocktest.py', # NOTE: needs pptp_hash to pass
     'blockchain.py',
     'disablewallet.py',
-    'sendheaders.py', # NOTE: needs wavi_hash to pass
+    'sendheaders.py', # NOTE: needs pptp_hash to pass
     'keypool.py',
     'keypool-hd.py',
     'prioritise_transaction.py',
-    'invalidblockrequest.py', # NOTE: needs wavi_hash to pass
-    'invalidtxrequest.py', # NOTE: needs wavi_hash to pass
+    'invalidblockrequest.py', # NOTE: needs pptp_hash to pass
+    'invalidtxrequest.py', # NOTE: needs pptp_hash to pass
     'abandonconflict.py',
     'p2p-versionbits-warning.py',
 ]
@@ -135,9 +135,9 @@
 testScriptsExt = [
     'bip9-softforks.py',
     'bip65-cltv.py',
-    'bip65-cltv-p2p.py', # NOTE: needs wavi_hash to pass
+    'bip65-cltv-p2p.py', # NOTE: needs pptp_hash to pass
     'bip68-sequence.py',
-    'bipdersig-p2p.py', # NOTE: needs wavi_hash to pass
+    'bipdersig-p2p.py', # NOTE: needs pptp_hash to pass
     'bipdersig.py',
     'getblocktemplate_longpoll.py', # FIXME: "socket.error: [Errno 54] Connection reset by peer" on my Mac, same as  https://github.com/bitcoin/bitcoin/issues/6651
     'getblocktemplate_proposals.py',
@@ -149,10 +149,10 @@
 #    'rpcbind_test.py', #temporary, bug in libevent, see #6655
     'smartfees.py',
     'maxblocksinflight.py',
-    'p2p-acceptblock.py', # NOTE: needs wavi_hash to pass
+    'p2p-acceptblock.py', # NOTE: needs pptp_hash to pass
     'mempool_packages.py',
     'maxuploadtarget.py',
-    # 'replace-by-fee.py', # RBF is disabled in Wavi Core
+    # 'replace-by-fee.py', # RBF is disabled in Pptp Core
 ]
 
 def runtests():
diff -r -u ./wavi/qa/pull-tester/run-bitcoind-for-test.sh.in ./pptp/qa/pull-tester/run-bitcoind-for-test.sh.in
--- ./wavi/qa/pull-tester/run-bitcoind-for-test.sh.in	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/pull-tester/run-bitcoind-for-test.sh.in	Sun Mar 25 19:57:55 2018
@@ -3,14 +3,14 @@
 # Distributed under the MIT software license, see the accompanying
 # file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #
-DATADIR="@abs_top_builddir@/.wavicore"
+DATADIR="@abs_top_builddir@/.pptpcore"
 rm -rf "$DATADIR"
 mkdir -p "$DATADIR"/regtest
 touch "$DATADIR/regtest/debug.log"
 tail -q -n 1 -F "$DATADIR/regtest/debug.log" | grep -m 1 -q "Done loading" &
 WAITER=$!
 PORT=`expr 10000 + $$ % 55536`
-"@abs_top_builddir@/src/wavid@EXEEXT@" -connect=0.0.0.0 -datadir="$DATADIR" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &
+"@abs_top_builddir@/src/pptpd@EXEEXT@" -connect=0.0.0.0 -datadir="$DATADIR" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &
 BITCOIND=$!
 
 #Install a watchdog.
diff -r -u ./wavi/qa/README.md ./pptp/qa/README.md
--- ./wavi/qa/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/README.md	Sun Mar 25 19:51:36 2018
@@ -1,7 +1,7 @@
 The [pull-tester](/qa/pull-tester/) folder contains a script to call
 multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.
 
-Every pull request to the Wavi Core repository is built and run through
+Every pull request to the Pptp Core repository is built and run through
 the regression test suite. You can also run all or only individual
 tests locally.
 
@@ -31,9 +31,9 @@
 
 ```
   -h, --help            show this help message and exit
-  --nocleanup           Leave wavids and test.* datadir on exit or error
-  --noshutdown          Don't stop wavids after the test execution
-  --srcdir=SRCDIR       Source directory containing wavid/wavi-cli
+  --nocleanup           Leave pptpds and test.* datadir on exit or error
+  --noshutdown          Don't stop pptpds after the test execution
+  --srcdir=SRCDIR       Source directory containing pptpd/pptp-cli
                         (default: ../../src)
   --tmpdir=TMPDIR       Root directory for datadirs
   --tracerpc            Print out all RPC calls as they are made
@@ -47,7 +47,7 @@
 A 200-block -regtest blockchain and wallets for four nodes
 is created the first time a regression test is run and
 is stored in the cache/ directory. Each node has 25 mature
-blocks (25*500=12500 WAVI) in its wallet.
+blocks (25*500=12500 PPTP) in its wallet.
 
 After the first run, the cache/ blockchain and wallets are
 copied into a temporary directory and used as the initial
@@ -58,7 +58,7 @@
 
 ```bash
 rm -rf cache
-killall wavid
+killall pptpd
 ```
 
 Writing tests
diff -r -u ./wavi/qa/rpc-tests/fundrawtransaction-hd.py ./pptp/qa/rpc-tests/fundrawtransaction-hd.py
--- ./wavi/qa/rpc-tests/fundrawtransaction-hd.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/fundrawtransaction-hd.py	Sun Mar 25 19:46:14 2018
@@ -416,7 +416,7 @@
         mSigObj = self.nodes[2].addmultisigaddress(2, [addr1Obj['pubkey'], addr2Obj['pubkey']])
 
 
-        # send 12 WAVI to msig addr
+        # send 12 PPTP to msig addr
         txId = self.nodes[0].sendtoaddress(mSigObj, 12)
         self.sync_all()
         self.nodes[1].generate(1)
diff -r -u ./wavi/qa/rpc-tests/fundrawtransaction.py ./pptp/qa/rpc-tests/fundrawtransaction.py
--- ./wavi/qa/rpc-tests/fundrawtransaction.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/fundrawtransaction.py	Sun Mar 25 19:46:14 2018
@@ -416,7 +416,7 @@
         mSigObj = self.nodes[2].addmultisigaddress(2, [addr1Obj['pubkey'], addr2Obj['pubkey']])
 
 
-        # send 12 WAVI to msig addr
+        # send 12 PPTP to msig addr
         txId = self.nodes[0].sendtoaddress(mSigObj, 12)
         self.sync_all()
         self.nodes[1].generate(1)
diff -r -u ./wavi/qa/rpc-tests/listtransactions.py ./pptp/qa/rpc-tests/listtransactions.py
--- ./wavi/qa/rpc-tests/listtransactions.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/listtransactions.py	Sun Mar 25 19:51:36 2018
@@ -94,7 +94,7 @@
                            {"category":"receive","amount":Decimal("0.1")},
                            {"txid":txid, "account" : "watchonly"} )
 
-        # rbf is disabled in Wavi Core
+        # rbf is disabled in Pptp Core
         # self.run_rbf_opt_in_test()
 
     # Check that the opt-in-rbf flag works properly, for sent and received
diff -r -u ./wavi/qa/rpc-tests/maxblocksinflight.py ./pptp/qa/rpc-tests/maxblocksinflight.py
--- ./wavi/qa/rpc-tests/maxblocksinflight.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/maxblocksinflight.py	Sun Mar 25 19:43:09 2018
@@ -74,7 +74,7 @@
 class MaxBlocksInFlightTest(BitcoinTestFramework):
     def add_options(self, parser):
         parser.add_option("--testbinary", dest="testbinary",
-                          default=os.getenv("WAVID", "wavid"),
+                          default=os.getenv("PPTPD", "pptpd"),
                           help="Binary to test max block requests behavior")
 
     def setup_chain(self):
diff -r -u ./wavi/qa/rpc-tests/maxuploadtarget.py ./pptp/qa/rpc-tests/maxuploadtarget.py
--- ./wavi/qa/rpc-tests/maxuploadtarget.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/maxuploadtarget.py	Sun Mar 25 19:43:09 2018
@@ -87,8 +87,8 @@
  
     def add_options(self, parser):
         parser.add_option("--testbinary", dest="testbinary",
-                          default=os.getenv("WAVID", "wavid"),
-                          help="wavid binary to test")
+                          default=os.getenv("PPTPD", "pptpd"),
+                          help="pptpd binary to test")
 
     def setup_chain(self):
         initialize_chain_clean(self.options.tmpdir, 2)
diff -r -u ./wavi/qa/rpc-tests/merkle_blocks.py ./pptp/qa/rpc-tests/merkle_blocks.py
--- ./wavi/qa/rpc-tests/merkle_blocks.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/merkle_blocks.py	Sun Mar 25 19:51:36 2018
@@ -71,7 +71,7 @@
         txid_unspent = txid1 if txin_spent["txid"] != txid1 else txid2
 
         # We can't find the block from a fully-spent tx
-        # Doesn't apply to Wavi Core - we have txindex always on
+        # Doesn't apply to Pptp Core - we have txindex always on
         # assert_raises(JSONRPCException, self.nodes[2].gettxoutproof, [txid_spent])
         # ...but we can if we specify the block
         assert_equal(self.nodes[2].verifytxoutproof(self.nodes[2].gettxoutproof([txid_spent], blockhash)), [txid_spent])
diff -r -u ./wavi/qa/rpc-tests/multi_rpc.py ./pptp/qa/rpc-tests/multi_rpc.py
--- ./wavi/qa/rpc-tests/multi_rpc.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/multi_rpc.py	Sun Mar 25 19:57:55 2018
@@ -27,10 +27,10 @@
     def setup_chain(self):
         print("Initializing test directory "+self.options.tmpdir)
         initialize_chain(self.options.tmpdir)
-        #Append rpcauth to wavi.conf before initialization
+        #Append rpcauth to pptp.conf before initialization
         rpcauth = "rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144"
         rpcauth2 = "rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e"
-        with open(os.path.join(self.options.tmpdir+"/node0", "wavi.conf"), 'a') as f:
+        with open(os.path.join(self.options.tmpdir+"/node0", "pptp.conf"), 'a') as f:
             f.write(rpcauth+"\n")
             f.write(rpcauth2+"\n")
 
diff -r -u ./wavi/qa/rpc-tests/p2p-acceptblock.py ./pptp/qa/rpc-tests/p2p-acceptblock.py
--- ./wavi/qa/rpc-tests/p2p-acceptblock.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/p2p-acceptblock.py	Sun Mar 25 19:43:09 2018
@@ -109,7 +109,7 @@
 class AcceptBlockTest(BitcoinTestFramework):
     def add_options(self, parser):
         parser.add_option("--testbinary", dest="testbinary",
-                          default=os.getenv("WAVID", "wavid"),
+                          default=os.getenv("PPTPD", "pptpd"),
                           help="bitcoind binary to test")
 
     def setup_chain(self):
diff -r -u ./wavi/qa/rpc-tests/test_framework/comptool.py ./pptp/qa/rpc-tests/test_framework/comptool.py
--- ./wavi/qa/rpc-tests/test_framework/comptool.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/test_framework/comptool.py	Sun Mar 25 19:38:24 2018
@@ -9,7 +9,7 @@
 from .util import p2p_port
 
 '''
-This is a tool for comparing two or more wavids to each other
+This is a tool for comparing two or more pptpds to each other
 using a script provided.
 
 To use, create a class that implements get_tests(), and pass it in
diff -r -u ./wavi/qa/rpc-tests/test_framework/mininode.py ./pptp/qa/rpc-tests/test_framework/mininode.py
--- ./wavi/qa/rpc-tests/test_framework/mininode.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/test_framework/mininode.py	Sun Mar 25 19:57:55 2018
@@ -1,4 +1,4 @@
-# mininode.py - Wavi P2P network half-a-node
+# mininode.py - Pptp P2P network half-a-node
 #
 # Distributed under the MIT/X11 software license, see the accompanying
 # file COPYING or http://www.opensource.org/licenses/mit-license.php.
@@ -6,12 +6,12 @@
 # This python code was modified from ArtForz' public domain  half-a-node, as
 # found in the mini-node branch of http://github.com/jgarzik/pynode.
 #
-# NodeConn: an object which manages p2p connectivity to a wavi node
+# NodeConn: an object which manages p2p connectivity to a pptp node
 # NodeConnCB: a base class that describes the interface for receiving
 #             callbacks with network messages from a NodeConn
 # CBlock, CTransaction, CBlockHeader, CTxIn, CTxOut, etc....:
 #     data structures that should map to corresponding structures in
-#     wavi/primitives
+#     pptp/primitives
 # msg_block, msg_tx, msg_headers, etc.:
 #     data structures that represent network messages
 # ser_*, deser_*: functions that handle serialization/deserialization
@@ -32,7 +32,7 @@
 import logging
 import copy
 
-import wavi_hash
+import pptp_hash
 
 BIP0031_VERSION = 60000
 MY_VERSION = 70208  # current MIN_PEER_PROTO_VERSION
@@ -64,8 +64,8 @@
 def hash256(s):
     return sha256(sha256(s))
 
-def wavihash(s):
-    return wavi_hash.getPoWHash(s)
+def pptphash(s):
+    return pptp_hash.getPoWHash(s)
 
 def deser_string(f):
     nit = struct.unpack("<B", f.read(1))[0]
@@ -247,7 +247,7 @@
 def ToHex(obj):
     return hexlify(obj.serialize()).decode('ascii')
 
-# Objects that map to wavid objects, which can be serialized/deserialized
+# Objects that map to pptpd objects, which can be serialized/deserialized
 
 class CAddress(object):
     def __init__(self):
@@ -496,8 +496,8 @@
             r += struct.pack("<I", self.nTime)
             r += struct.pack("<I", self.nBits)
             r += struct.pack("<I", self.nNonce)
-            self.sha256 = uint256_from_str(wavihash(r))
-            self.hash = encode(wavihash(r)[::-1], 'hex_codec').decode('ascii')
+            self.sha256 = uint256_from_str(pptphash(r))
+            self.hash = encode(pptphash(r)[::-1], 'hex_codec').decode('ascii')
 
     def rehash(self):
         self.sha256 = None
@@ -972,7 +972,7 @@
         self.headers = []
 
     def deserialize(self, f):
-        # comment in wavid indicates these should be deserialized as blocks
+        # comment in pptpd indicates these should be deserialized as blocks
         blocks = deser_vector(f, CBlock)
         for x in blocks:
             self.headers.append(CBlockHeader(x))
@@ -1185,7 +1185,7 @@
         vt.addrFrom.ip = "0.0.0.0"
         vt.addrFrom.port = 0
         self.send_message(vt, True)
-        print 'MiniNode: Connecting to Wavi Node IP # ' + dstaddr + ':' \
+        print 'MiniNode: Connecting to Pptp Node IP # ' + dstaddr + ':' \
             + str(dstport)
 
         try:
diff -r -u ./wavi/qa/rpc-tests/test_framework/test_framework.py ./pptp/qa/rpc-tests/test_framework/test_framework.py
--- ./wavi/qa/rpc-tests/test_framework/test_framework.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/test_framework/test_framework.py	Sun Mar 25 19:43:40 2018
@@ -99,11 +99,11 @@
 
         parser = optparse.OptionParser(usage="%prog [options]")
         parser.add_option("--nocleanup", dest="nocleanup", default=False, action="store_true",
-                          help="Leave wavids and test.* datadir on exit or error")
+                          help="Leave pptpds and test.* datadir on exit or error")
         parser.add_option("--noshutdown", dest="noshutdown", default=False, action="store_true",
-                          help="Don't stop wavids after the test execution")
+                          help="Don't stop pptpds after the test execution")
         parser.add_option("--srcdir", dest="srcdir", default="../../src",
-                          help="Source directory containing wavid/wavi-cli (default: %default)")
+                          help="Source directory containing pptpd/pptp-cli (default: %default)")
         parser.add_option("--tmpdir", dest="tmpdir", default=tempfile.mkdtemp(prefix="test"),
                           help="Root directory for datadirs")
         parser.add_option("--tracerpc", dest="trace_rpc", default=False, action="store_true",
@@ -151,7 +151,7 @@
             stop_nodes(self.nodes)
             wait_bitcoinds()
         else:
-            print("Note: wavids were not stopped and may still be running")
+            print("Note: pptpds were not stopped and may still be running")
 
         if not self.options.nocleanup and not self.options.noshutdown:
             print("Cleaning up")
@@ -179,10 +179,10 @@
 
     def add_options(self, parser):
         parser.add_option("--testbinary", dest="testbinary",
-                          default=os.getenv("WAVID", "wavid"),
+                          default=os.getenv("PPTPD", "pptpd"),
                           help="bitcoind binary to test")
         parser.add_option("--refbinary", dest="refbinary",
-                          default=os.getenv("WAVID", "wavid"),
+                          default=os.getenv("PPTPD", "pptpd"),
                           help="bitcoind binary to use for reference nodes (if any)")
 
     def setup_chain(self):
diff -r -u ./wavi/qa/rpc-tests/test_framework/util.py ./pptp/qa/rpc-tests/test_framework/util.py
--- ./wavi/qa/rpc-tests/test_framework/util.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/test_framework/util.py	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 # Copyright (c) 2014-2015 The Bitcoin Core developers
-# Copyright (c) 2014-2017 The Wavi Core developers
+# Copyright (c) 2018-2018 The Pptp Core developers
 # Distributed under the MIT/X11 software license, see the accompanying
 # file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -149,7 +149,7 @@
     datadir = os.path.join(dirname, "node"+str(n))
     if not os.path.isdir(datadir):
         os.makedirs(datadir)
-    with open(os.path.join(datadir, "wavi.conf"), 'w') as f:
+    with open(os.path.join(datadir, "pptp.conf"), 'w') as f:
         f.write("regtest=1\n")
         f.write("rpcuser=rt\n")
         f.write("rpcpassword=rt\n")
@@ -163,12 +163,12 @@
 
 def wait_for_bitcoind_start(process, url, i):
     '''
-    Wait for wavid to start. This means that RPC is accessible and fully initialized.
-    Raise an exception if wavid exits during initialization.
+    Wait for pptpd to start. This means that RPC is accessible and fully initialized.
+    Raise an exception if pptpd exits during initialization.
     '''
     while True:
         if process.poll() is not None:
-            raise Exception('wavid exited with status %i during initialization' % process.returncode)
+            raise Exception('pptpd exited with status %i during initialization' % process.returncode)
         try:
             rpc = get_rpc_proxy(url, i)
             blocks = rpc.getblockcount()
@@ -197,15 +197,15 @@
             if os.path.isdir(os.path.join("cache","node"+str(i))):
                 shutil.rmtree(os.path.join("cache","node"+str(i)))
 
-        # Create cache directories, run wavids:
+        # Create cache directories, run pptpds:
         for i in range(4):
             datadir=initialize_datadir("cache", i)
-            args = [ os.getenv("WAVID", "wavid"), "-server", "-keypool=1", "-datadir="+datadir, "-discover=0" ]
+            args = [ os.getenv("PPTPD", "pptpd"), "-server", "-keypool=1", "-datadir="+datadir, "-discover=0" ]
             if i > 0:
                 args.append("-connect=127.0.0.1:"+str(p2p_port(0)))
             bitcoind_processes[i] = subprocess.Popen(args)
             if os.getenv("PYTHON_DEBUG", ""):
-                print "initialize_chain: wavid started, waiting for RPC to come up"
+                print "initialize_chain: pptpd started, waiting for RPC to come up"
             wait_for_bitcoind_start(bitcoind_processes[i], rpc_url(i), i)
             if os.getenv("PYTHON_DEBUG", ""):
                 print "initialize_chain: RPC succesfully started"
@@ -247,7 +247,7 @@
         from_dir = os.path.join("cache", "node"+str(i))
         to_dir = os.path.join(test_dir,  "node"+str(i))
         shutil.copytree(from_dir, to_dir)
-        initialize_datadir(test_dir, i) # Overwrite port/rpcport in wavi.conf
+        initialize_datadir(test_dir, i) # Overwrite port/rpcport in pptp.conf
 
 def initialize_chain_clean(test_dir, num_nodes):
     """
@@ -280,17 +280,17 @@
 
 def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):
     """
-    Start a wavid and return RPC connection to it
+    Start a pptpd and return RPC connection to it
     """
     datadir = os.path.join(dirname, "node"+str(i))
     if binary is None:
-        binary = os.getenv("WAVID", "wavid")
+        binary = os.getenv("PPTPD", "pptpd")
     # RPC tests still depend on free transactions
     args = [ binary, "-datadir="+datadir, "-server", "-keypool=1", "-discover=0", "-rest", "-blockprioritysize=50000", "-mocktime="+str(get_mocktime()) ]
     if extra_args is not None: args.extend(extra_args)
     bitcoind_processes[i] = subprocess.Popen(args)
     if os.getenv("PYTHON_DEBUG", ""):
-        print "start_node: wavid started, waiting for RPC to come up"
+        print "start_node: pptpd started, waiting for RPC to come up"
     url = rpc_url(i, rpchost)
     wait_for_bitcoind_start(bitcoind_processes[i], url, i)
     if os.getenv("PYTHON_DEBUG", ""):
@@ -304,7 +304,7 @@
 
 def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):
     """
-    Start multiple wavids, return RPC connections to them
+    Start multiple pptpds, return RPC connections to them
     """
     if extra_args is None: extra_args = [ None for i in range(num_nodes) ]
     if binary is None: binary = [ None for i in range(num_nodes) ]
diff -r -u ./wavi/qa/rpc-tests/txn_clone.py ./pptp/qa/rpc-tests/txn_clone.py
--- ./wavi/qa/rpc-tests/txn_clone.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/txn_clone.py	Sun Mar 25 19:46:14 2018
@@ -21,7 +21,7 @@
         return super(TxnMallTest, self).setup_network(True)
 
     def run_test(self):
-        # All nodes should start with 12,500 WAVI:
+        # All nodes should start with 12,500 PPTP:
         starting_balance = 12500
         for i in range(4):
             assert_equal(self.nodes[i].getbalance(), starting_balance)
@@ -64,7 +64,7 @@
 
         # manipulation 2. createrawtransaction randomizes the order of its outputs, so swap them if necessary.
         # output 0 is at version+#inputs+input+sigstub+sequence+#outputs
-        # 400 WAVI serialized is 00902f5009000000
+        # 400 PPTP serialized is 00902f5009000000
         pos0 = 2*(4+1+36+1+4+1)
         hex400 = "00902f5009000000"
         output_len = 16 + 2 + 2 * int("0x" + clone_raw[pos0 + 16 : pos0 + 16 + 2], 0)
@@ -92,7 +92,7 @@
         tx1 = self.nodes[0].gettransaction(txid1)
         tx2 = self.nodes[0].gettransaction(txid2)
 
-        # Node0's balance should be starting balance, plus 500WAVI for another
+        # Node0's balance should be starting balance, plus 500PPTP for another
         # matured block, minus tx1 and tx2 amounts, and minus transaction fees:
         expected = starting_balance + fund_foo_tx["fee"] + fund_bar_tx["fee"]
         if self.options.mine_block: expected += 500
@@ -136,7 +136,7 @@
         assert_equal(tx1_clone["confirmations"], 2)
         assert_equal(tx2["confirmations"], 1)
 
-        # Check node0's total balance; should be same as before the clone, + 1000 WAVI for 2 matured,
+        # Check node0's total balance; should be same as before the clone, + 1000 PPTP for 2 matured,
         # less possible orphaned matured subsidy
         expected += 1000
         if (self.options.mine_block): 
diff -r -u ./wavi/qa/rpc-tests/txn_doublespend.py ./pptp/qa/rpc-tests/txn_doublespend.py
--- ./wavi/qa/rpc-tests/txn_doublespend.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/txn_doublespend.py	Sun Mar 25 19:46:14 2018
@@ -21,7 +21,7 @@
         return super(TxnMallTest, self).setup_network(True)
 
     def run_test(self):
-        # All nodes should start with 12,500 WAVI:
+        # All nodes should start with 12,500 PPTP:
         starting_balance = 12500
         for i in range(4):
             assert_equal(self.nodes[i].getbalance(), starting_balance)
@@ -42,7 +42,7 @@
         # Coins are sent to node1_address
         node1_address = self.nodes[1].getnewaddress("from0")
 
-        # First: use raw transaction API to send 12400 WAVI to node1_address,
+        # First: use raw transaction API to send 12400 PPTP to node1_address,
         # but don't broadcast:
         doublespend_fee = Decimal('-.02')
         rawtx_input_0 = {}
@@ -60,7 +60,7 @@
         doublespend = self.nodes[0].signrawtransaction(rawtx)
         assert_equal(doublespend["complete"], True)
 
-        # Create two spends using 1 500 WAVI coin each
+        # Create two spends using 1 500 PPTP coin each
         txid1 = self.nodes[0].sendfrom("foo", node1_address, 400, 0)
         txid2 = self.nodes[0].sendfrom("bar", node1_address, 200, 0)
         
@@ -72,7 +72,7 @@
         tx1 = self.nodes[0].gettransaction(txid1)
         tx2 = self.nodes[0].gettransaction(txid2)
 
-        # Node0's balance should be starting balance, plus 500WAVI for another
+        # Node0's balance should be starting balance, plus 500PPTP for another
         # matured block, minus 400, minus 200, and minus transaction fees:
         expected = starting_balance + fund_foo_tx["fee"] + fund_bar_tx["fee"]
         if self.options.mine_block: expected += 500
@@ -114,7 +114,7 @@
         assert_equal(tx1["confirmations"], -2)
         assert_equal(tx2["confirmations"], -2)
 
-        # Node0's total balance should be starting balance, plus 1000WAVI for
+        # Node0's total balance should be starting balance, plus 1000PPTP for
         # two more matured blocks, minus 12400 for the double-spend, plus fees (which are
         # negative):
         expected = starting_balance + 1000 - 12400 + fund_foo_tx["fee"] + fund_bar_tx["fee"] + doublespend_fee
diff -r -u ./wavi/qa/rpc-tests/wallet-hd.py ./pptp/qa/rpc-tests/wallet-hd.py
--- ./wavi/qa/rpc-tests/wallet-hd.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/wallet-hd.py	Sun Mar 25 19:38:24 2018
@@ -31,7 +31,7 @@
             start_node(1, self.options.tmpdir, ['-usehd=0'])
             raise AssertionError("Must not allow to turn off HD on an already existing HD wallet")
         except Exception as e:
-            assert("wavid exited with status 1 during initialization" in str(e))
+            assert("pptpd exited with status 1 during initialization" in str(e))
         # assert_start_raises_init_error(1, self.options.tmpdir, ['-usehd=0'], 'already existing HD wallet')
         # self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1])
         self.nodes[1] = start_node(1, self.options.tmpdir, ['-usehd=1', '-keypool=0'])
diff -r -u ./wavi/qa/rpc-tests/wallet.py ./pptp/qa/rpc-tests/wallet.py
--- ./wavi/qa/rpc-tests/wallet.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/qa/rpc-tests/wallet.py	Sun Mar 25 19:47:11 2018
@@ -15,10 +15,10 @@
         fee = balance_with_fee - curr_balance
         target_fee = fee_per_byte * tx_size
         if fee < target_fee:
-            raise AssertionError("Fee of %s WAVI too low! (Should be %s WAVI)"%(str(fee), str(target_fee)))
+            raise AssertionError("Fee of %s PPTP too low! (Should be %s PPTP)"%(str(fee), str(target_fee)))
         # allow the node's estimation to be at most 2 bytes off
         if fee > fee_per_byte * (tx_size + 2):
-            raise AssertionError("Fee of %s WAVI too high! (Should be %s WAVI)"%(str(fee), str(target_fee)))
+            raise AssertionError("Fee of %s PPTP too high! (Should be %s PPTP)"%(str(fee), str(target_fee)))
         return curr_balance
 
     def setup_chain(self):
@@ -61,7 +61,7 @@
         assert_equal(len(self.nodes[1].listunspent()), 1)
         assert_equal(len(self.nodes[2].listunspent()), 0)
 
-        # Send 210 WAVI from 0 to 2 using sendtoaddress call.
+        # Send 210 PPTP from 0 to 2 using sendtoaddress call.
         # Second transaction will be child of first, and will require a fee
         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 110)
         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 100)
@@ -86,7 +86,7 @@
         self.nodes[1].generate(100)
         self.sync_all()
 
-        # node0 should end up with 1000 WAVI in block rewards plus fees, but
+        # node0 should end up with 1000 PPTP in block rewards plus fees, but
         # minus the 210 plus fees sent to node2
         assert_equal(self.nodes[0].getbalance(), 1000-210)
         assert_equal(self.nodes[2].getbalance(), 210)
@@ -119,7 +119,7 @@
         assert_equal(self.nodes[2].getbalance(), 1000)
         assert_equal(self.nodes[2].getbalance("from1"), 1000-210)
 
-        # Send 100 WAVI normal
+        # Send 100 PPTP normal
         address = self.nodes[0].getnewaddress("test")
         fee_per_byte = Decimal('0.00001') / 1000
         self.nodes[2].settxfee(fee_per_byte * 1000)
@@ -129,7 +129,7 @@
         node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), Decimal('900'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))
         assert_equal(self.nodes[0].getbalance(), Decimal('100'))
 
-        # Send 100 WAVI with subtract fee from amount
+        # Send 100 PPTP with subtract fee from amount
         txid = self.nodes[2].sendtoaddress(address, 100, "", "", True)
         self.nodes[2].generate(1)
         self.sync_all()
@@ -137,7 +137,7 @@
         assert_equal(self.nodes[2].getbalance(), node_2_bal)
         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), Decimal('200'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))
 
-        # Sendmany 100 WAVI
+        # Sendmany 100 PPTP
         txid = self.nodes[2].sendmany('from1', {address: 100}, 0, False, "", [])
         self.nodes[2].generate(1)
         self.sync_all()
@@ -145,7 +145,7 @@
         node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('100'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))
         assert_equal(self.nodes[0].getbalance(), node_0_bal)
 
-        # Sendmany 100 WAVI with subtract fee from amount
+        # Sendmany 100 PPTP with subtract fee from amount
         txid = self.nodes[2].sendmany('from1', {address: 100}, 0, False, "", [address])
         self.nodes[2].generate(1)
         self.sync_all()
diff -r -u ./wavi/README.md ./pptp/README.md
--- ./wavi/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/README.md	Sat Mar 31 12:22:57 2018
@@ -1,29 +1,29 @@
-Wavi Core staging tree 0.12.2
+Pptp Core staging tree 0.12.2
 ===============================
 
 
-What is Wavi?
+What is Pptp?
 ----------------
 
-Wavi is an experimental new digital currency that enables anonymous, instant
-payments to anyone, anywhere in the world. Wavi uses peer-to-peer technology
+Pptp is an experimental new digital currency that enables anonymous, instant
+payments to anyone, anywhere in the world. Pptp uses peer-to-peer technology
 to operate with no central authority: managing transactions and issuing money
-are carried out collectively by the network. Wavi Core is the name of the open
+are carried out collectively by the network. Pptp Core is the name of the open
 source software which enables the use of this currency.
 
 
 License
 -------
 
-Wavi Core is released under the terms of the MIT license. See [COPYING](COPYING) for more
+Pptp Core is released under the terms of the MIT license. See [COPYING](COPYING) for more
 information or see https://opensource.org/licenses/MIT.
 
 Development Process
 -------------------
 
 The `master` branch is meant to be stable. Development is normally done in separate branches.
-[Tags](https://github.com/wavidev-the-man/wavi/tags) are created to indicate new official,
-stable release versions of Wavi Core.
+[Tags](https://github.com/conan-equal-newone/pptp/tags) are created to indicate new official,
+stable release versions of Pptp Core.
 
 The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).
 
Binary files ./wavi/share/pixmaps/bitcoin.ico and ./pptp/share/pixmaps/bitcoin.ico differ
Binary files ./wavi/share/pixmaps/nsis-header.bmp and ./pptp/share/pixmaps/nsis-header.bmp differ
Binary files ./wavi/share/pixmaps/nsis-wizard.bmp and ./pptp/share/pixmaps/nsis-wizard.bmp differ
Only in ./pptp/share/pixmaps: pptp128.png
Only in ./pptp/share/pixmaps: pptp128.xpm
Only in ./pptp/share/pixmaps: pptp16.png
Only in ./pptp/share/pixmaps: pptp16.xpm
Only in ./pptp/share/pixmaps: pptp256.png
Only in ./pptp/share/pixmaps: pptp256.xpm
Only in ./pptp/share/pixmaps: pptp32.png
Only in ./pptp/share/pixmaps: pptp32.xpm
Only in ./pptp/share/pixmaps: pptp64.png
Only in ./pptp/share/pixmaps: pptp64.xpm
Only in ./wavi/share/pixmaps: wabi128.png
Only in ./wavi/share/pixmaps: wabi128.xpm
Only in ./wavi/share/pixmaps: wabi16.png
Only in ./wavi/share/pixmaps: wabi16.xpm
Only in ./wavi/share/pixmaps: wabi256.png
Only in ./wavi/share/pixmaps: wabi256.xpm
Only in ./wavi/share/pixmaps: wabi32.png
Only in ./wavi/share/pixmaps: wabi32.xpm
Only in ./wavi/share/pixmaps: wabi64.png
Only in ./wavi/share/pixmaps: wabi64.xpm
Only in ./wavi/share/pixmaps: wavi128.png
Only in ./wavi/share/pixmaps: wavi128.xpm
Only in ./wavi/share/pixmaps: wavi16.png
Only in ./wavi/share/pixmaps: wavi16.xpm
Only in ./wavi/share/pixmaps: wavi256.png
Only in ./wavi/share/pixmaps: wavi256.xpm
Only in ./wavi/share/pixmaps: wavi32.png
Only in ./wavi/share/pixmaps: wavi32.xpm
Only in ./wavi/share/pixmaps: wavi64.png
Only in ./wavi/share/pixmaps: wavi64.xpm
diff -r -u ./wavi/share/qt/extract_strings_qt.py ./pptp/share/qt/extract_strings_qt.py
--- ./wavi/share/qt/extract_strings_qt.py	Sat Mar 31 23:24:23 2018
+++ ./pptp/share/qt/extract_strings_qt.py	Sun Mar 25 19:57:55 2018
@@ -9,7 +9,7 @@
 import os
 import sys
 
-OUT_CPP="qt/wavistrings.cpp"
+OUT_CPP="qt/pptpstrings.cpp"
 EMPTY=['""']
 
 def parse_po(text):
@@ -69,10 +69,10 @@
 #define UNUSED
 #endif
 """)
-f.write('static const char UNUSED *wavi_strings[] = {\n')
+f.write('static const char UNUSED *pptp_strings[] = {\n')
 messages.sort(key=operator.itemgetter(0))
 for (msgid, msgstr) in messages:
     if msgid != EMPTY:
-        f.write('QT_TRANSLATE_NOOP("wavi-core", %s),\n' % ('\n'.join(msgid)))
+        f.write('QT_TRANSLATE_NOOP("pptp-core", %s),\n' % ('\n'.join(msgid)))
 f.write('};\n')
 f.close()
diff -r -u ./wavi/share/qt/Info.plist.in ./pptp/share/qt/Info.plist.in
--- ./wavi/share/qt/Info.plist.in	Sat Mar 31 23:24:23 2018
+++ ./pptp/share/qt/Info.plist.in	Sun Mar 25 19:57:55 2018
@@ -17,7 +17,7 @@
   <string>APPL</string>
 
   <key>CFBundleGetInfoString</key>
-  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright © 2009-@COPYRIGHT_YEAR@ The Bitcoin Core developers, 2014-@COPYRIGHT_YEAR@ The Wavi Core developers</string>
+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright © 2009-@COPYRIGHT_YEAR@ The Bitcoin Core developers, 2014-@COPYRIGHT_YEAR@ The Pptp Core developers</string>
 
   <key>CFBundleShortVersionString</key>
   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@</string>
@@ -29,16 +29,16 @@
   <string>????</string>
 
   <key>CFBundleExecutable</key>
-  <string>Wavi-Qt</string>
+  <string>Pptp-Qt</string>
   
   <key>CFBundleName</key>
-  <string>Wavi-Qt</string>
+  <string>Pptp-Qt</string>
 
   <key>LSHasLocalizedDisplayName</key>
   <true/>
 
   <key>CFBundleIdentifier</key>
-  <string>org.wavi.Wavi-Qt</string>
+  <string>org.pptp.Pptp-Qt</string>
 
   <key>CFBundleURLTypes</key>
   <array>
@@ -46,10 +46,10 @@
       <key>CFBundleTypeRole</key>
       <string>Editor</string>
       <key>CFBundleURLName</key>
-      <string>org.wavi.WaviPayment</string>
+      <string>org.pptp.PptpPayment</string>
       <key>CFBundleURLSchemes</key>
       <array>
-        <string>wavi</string>
+        <string>pptp</string>
       </array>
     </dict>
   </array>
@@ -58,9 +58,9 @@
   <array>
     <dict>
       <key>UTTypeIdentifier</key>
-      <string>org.wavi.paymentrequest</string>
+      <string>org.pptp.paymentrequest</string>
       <key>UTTypeDescription</key>
-      <string>Wavi payment request</string>
+      <string>Pptp payment request</string>
       <key>UTTypeConformsTo</key>
       <array>
         <string>public.data</string>
@@ -68,10 +68,10 @@
       <key>UTTypeTagSpecification</key>
       <dict>
         <key>public.mime-type</key>
-        <string>application/x-wavi-payment-request</string>
+        <string>application/x-pptp-payment-request</string>
         <key>public.filename-extension</key>
         <array>
-          <string>wavipaymentrequest</string>
+          <string>pptppaymentrequest</string>
         </array>
       </dict>
     </dict>
@@ -84,7 +84,7 @@
       <string>Editor</string>
       <key>LSItemContentTypes</key>
       <array>
-        <string>org.wavi.paymentrequest</string>
+        <string>org.pptp.paymentrequest</string>
       </array>
       <key>LSHandlerRank</key>
       <string>Owner</string>
diff -r -u ./wavi/share/setup.nsi.in ./pptp/share/setup.nsi.in
--- ./wavi/share/setup.nsi.in	Sat Mar 31 23:24:23 2018
+++ ./pptp/share/setup.nsi.in	Sat Mar 31 12:35:42 2018
@@ -6,8 +6,8 @@
 # General Symbol Definitions
 !define REGKEY "SOFTWARE\$(^Name)"
 !define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@
-!define COMPANY "Wavi Core project"
-!define URL https://www.wavi.org/
+!define COMPANY "Pptp Core project"
+!define URL https://github.com/conan-equal-newone/pptp/
 
 # MUI Symbol Definitions
 !define MUI_ICON "@abs_top_srcdir@/share/pixmaps/bitcoin.ico"
@@ -20,7 +20,7 @@
 !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
 !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
 !define MUI_STARTMENUPAGE_DEFAULTFOLDER "@PACKAGE_NAME@"
-!define MUI_FINISHPAGE_RUN $INSTDIR\wavi-qt.exe
+!define MUI_FINISHPAGE_RUN $INSTDIR\pptp-qt.exe
 !define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"
 !define MUI_UNWELCOMEFINISHPAGE_BITMAP "@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp"
 !define MUI_UNFINISHPAGE_NOAUTOCLOSE
@@ -48,18 +48,18 @@
 !insertmacro MUI_LANGUAGE English
 
 # Installer attributes
-OutFile @abs_top_srcdir@/wavicore-${VERSION}-win@WINDOWS_BITS@-setup.exe
+OutFile @abs_top_srcdir@/pptpcore-${VERSION}-win@WINDOWS_BITS@-setup.exe
 !if "@WINDOWS_BITS@" == "64"
-InstallDir $PROGRAMFILES64\WaviCore
+InstallDir $PROGRAMFILES64\PptpCore
 !else
-InstallDir $PROGRAMFILES\WaviCore
+InstallDir $PROGRAMFILES\PptpCore
 !endif
 CRCCheck on
 XPStyle on
 BrandingText " "
 ShowInstDetails show
 VIProductVersion ${VERSION}.@CLIENT_VERSION_BUILD@
-VIAddVersionKey ProductName "Wavi Core"
+VIAddVersionKey ProductName "Pptp Core"
 VIAddVersionKey ProductVersion "${VERSION}"
 VIAddVersionKey CompanyName "${COMPANY}"
 VIAddVersionKey CompanyWebsite "${URL}"
@@ -73,19 +73,19 @@
 Section -Main SEC0000
     SetOutPath $INSTDIR
     SetOverwrite on
-    File @abs_top_srcdir@/release/wavi-qt.exe
+    File @abs_top_srcdir@/release/pptp-qt.exe
     File /oname=COPYING.txt @abs_top_srcdir@/COPYING
     File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt
     SetOutPath $INSTDIR\daemon
-    File @abs_top_srcdir@/release/wavid.exe
-    File @abs_top_srcdir@/release/wavi-cli.exe
+    File @abs_top_srcdir@/release/pptpd.exe
+    File @abs_top_srcdir@/release/pptp-cli.exe
     SetOutPath $INSTDIR\doc
     File /r @abs_top_srcdir@/doc\*.*
     SetOutPath $INSTDIR
     WriteRegStr HKCU "${REGKEY}\Components" Main 1
 
-    # Remove old wxwidgets-based-wavi executable and locales:
-    Delete /REBOOTOK $INSTDIR\wavi.exe
+    # Remove old wxwidgets-based-pptp executable and locales:
+    Delete /REBOOTOK $INSTDIR\pptp.exe
     RMDir /r /REBOOTOK $INSTDIR\locale
 SectionEnd
 
@@ -95,7 +95,7 @@
     WriteUninstaller $INSTDIR\uninstall.exe
     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
     CreateDirectory $SMPROGRAMS\$StartMenuGroup
-    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\$(^Name).lnk" $INSTDIR\wavi-qt.exe
+    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\$(^Name).lnk" $INSTDIR\pptp-qt.exe
     CreateShortcut "$SMPROGRAMS\$StartMenuGroup\Uninstall $(^Name).lnk" $INSTDIR\uninstall.exe
     !insertmacro MUI_STARTMENU_WRITE_END
     WriteRegStr HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayName "$(^Name)"
@@ -106,10 +106,10 @@
     WriteRegStr HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" UninstallString $INSTDIR\uninstall.exe
     WriteRegDWORD HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoModify 1
     WriteRegDWORD HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoRepair 1
-    WriteRegStr HKCR "wavi" "URL Protocol" ""
-    WriteRegStr HKCR "wavi" "" "URL:Wavi"
-    WriteRegStr HKCR "wavi\DefaultIcon" "" $INSTDIR\wavi-qt.exe
-    WriteRegStr HKCR "wavi\shell\open\command" "" '"$INSTDIR\wavi-qt.exe" "%1"'
+    WriteRegStr HKCR "pptp" "URL Protocol" ""
+    WriteRegStr HKCR "pptp" "" "URL:Pptp"
+    WriteRegStr HKCR "pptp\DefaultIcon" "" $INSTDIR\pptp-qt.exe
+    WriteRegStr HKCR "pptp\shell\open\command" "" '"$INSTDIR\pptp-qt.exe" "%1"'
 SectionEnd
 
 # Macro for selecting uninstaller sections
@@ -127,7 +127,7 @@
 
 # Uninstaller sections
 Section /o -un.Main UNSEC0000
-    Delete /REBOOTOK $INSTDIR\wavi-qt.exe
+    Delete /REBOOTOK $INSTDIR\pptp-qt.exe
     Delete /REBOOTOK $INSTDIR\COPYING.txt
     Delete /REBOOTOK $INSTDIR\readme.txt
     RMDir /r /REBOOTOK $INSTDIR\daemon
@@ -139,7 +139,7 @@
     DeleteRegKey HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)"
     Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\Uninstall $(^Name).lnk"
     Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\$(^Name).lnk"
-    Delete /REBOOTOK "$SMSTARTUP\Wavi.lnk"
+    Delete /REBOOTOK "$SMSTARTUP\Pptp.lnk"
     Delete /REBOOTOK $INSTDIR\uninstall.exe
     Delete /REBOOTOK $INSTDIR\debug.log
     Delete /REBOOTOK $INSTDIR\db.log
@@ -147,7 +147,7 @@
     DeleteRegValue HKCU "${REGKEY}" Path
     DeleteRegKey /IfEmpty HKCU "${REGKEY}\Components"
     DeleteRegKey /IfEmpty HKCU "${REGKEY}"
-    DeleteRegKey HKCR "wavi"
+    DeleteRegKey HKCR "pptp"
     RmDir /REBOOTOK $SMPROGRAMS\$StartMenuGroup
     RmDir /REBOOTOK $INSTDIR
     Push $R0
diff -r -u ./wavi/src/activemasternode.cpp ./pptp/src/activemasternode.cpp
--- ./wavi/src/activemasternode.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/activemasternode.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/activemasternode.h ./pptp/src/activemasternode.h
--- ./wavi/src/activemasternode.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/activemasternode.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/amount.cpp ./pptp/src/amount.cpp
--- ./wavi/src/amount.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/amount.cpp	Sun Mar 25 19:46:14 2018
@@ -7,7 +7,7 @@
 
 #include "tinyformat.h"
 
-const std::string CURRENCY_UNIT = "WAVI";
+const std::string CURRENCY_UNIT = "PPTP";
 
 CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)
 {
diff -r -u ./wavi/src/base58.h ./pptp/src/base58.h
--- ./wavi/src/base58.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/base58.h	Sun Mar 25 19:51:36 2018
@@ -95,7 +95,7 @@
     bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }
 };
 
-/** base58-encoded Wavi addresses.
+/** base58-encoded Pptp addresses.
  * Public-key-hash-addresses have version 76 (or 140 testnet).
  * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.
  * Script-hash-addresses have version 16 (or 19 testnet).
diff -r -u ./wavi/src/bench/.gitignore ./pptp/src/bench/.gitignore
--- ./wavi/src/bench/.gitignore	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/bench/.gitignore	Sun Mar 25 19:57:55 2018
@@ -1 +1 @@
-bench_wavi
+bench_pptp
Only in ./pptp/src/bench: bench_pptp.cpp
Only in ./wavi/src/bench: bench_wavi.cpp
diff -r -u ./wavi/src/bip39.h ./pptp/src/bip39.h
--- ./wavi/src/bip39.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/bip39.h	Sun Mar 25 19:46:14 2018
@@ -21,8 +21,8 @@
  * OTHER DEALINGS IN THE SOFTWARE.
  */
 
-#ifndef WAVI_BIP39_H
-#define WAVI_BIP39_H
+#ifndef PPTP_BIP39_H
+#define PPTP_BIP39_H
 
 #include "support/allocators/secure.h"
 
diff -r -u ./wavi/src/cachemap.h ./pptp/src/cachemap.h
--- ./wavi/src/cachemap.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/cachemap.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/cachemultimap.h ./pptp/src/cachemultimap.h
--- ./wavi/src/cachemultimap.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/cachemultimap.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/chainparams.cpp ./pptp/src/chainparams.cpp
--- ./wavi/src/chainparams.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/chainparams.cpp	Tue Mar 27 20:13:24 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -51,8 +51,8 @@
  */
 static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)
 {
-    const char* pszTimestamp = "It's a bird! It's a plane! It's WAVI! 180311";
-    const CScript genesisOutputScript = CScript() << ParseHex("04c97e684fcd3f7c52eb6bc08fd57ac50b34689c27a4d04452e8259cc952f4eaaefb7967e30810001c4bac36dd4181cb026d501b2a23a27e7fa6e1f336dbc4869e") << OP_CHECKSIG;
+    const char* pszTimestamp = "Remember..., I crawl on the ground and drow muddy water, but I will return. 180325";
+    const CScript genesisOutputScript = CScript() << ParseHex("044eb58c2ba2fd5c5464796018df25dd6bb72e65b043b69b8e8c3369bacfeba86d7461a3314a7f76b6fbd802ea4f934243e4bb8c351427f103897f05ec653705a6") << OP_CHECKSIG;
     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);
 }
 
@@ -90,10 +90,10 @@
         consensus.nMajorityRejectBlockOutdated = 950;
         consensus.nMajorityWindow = 1000;
         consensus.BIP34Height = 0;
-        consensus.BIP34Hash = uint256S("0x00000d39b78c04cc35653abe2442a106a428c5e92ba41ec4967a80a09abf4725");//00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be
+        consensus.BIP34Hash = uint256S("0x000002a48eafa1bea08766bf80d5c57ed4e9535a2787acad3dbd579c6e03df5e");//00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be
         consensus.powLimit = uint256S("00000fffff000000000000000000000000000000000000000000000000000000");
-        consensus.nPowTargetTimespan = 24 * 60 * 60; // Wavi: 1 day
-        consensus.nPowTargetSpacing = 2.0 * 60; // Wavi: 2.0 minutes
+        consensus.nPowTargetTimespan = 24 * 60 * 60; // Pptp: 1 day
+        consensus.nPowTargetSpacing = 2.0 * 60; // Pptp: 2.0 minutes
         consensus.fPowAllowMinDifficultyBlocks = false;
         consensus.fPowNoRetargeting = false;
         consensus.nPowKGWHeight = 0;
@@ -120,46 +120,46 @@
         consensus.nMinimumChainWork = uint256S("0x0000000000000000000000000000000000000000000000000000000000100010"); //100010// 0
 
         // By default assume that the signatures in ancestors of this block are valid.
-        consensus.defaultAssumeValid = uint256S("0x00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be"); // 0
+        consensus.defaultAssumeValid = uint256S("0x000002a48eafa1bea08766bf80d5c57ed4e9535a2787acad3dbd579c6e03df5e"); // 0
 
         /**
          * The message start string is designed to be unlikely to occur in normal data.
          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce
          * a large 32-bit integer with any alignment.
          */
-        pchMessageStart[0] = 0x9f;
-        pchMessageStart[1] = 0xeb;
-        pchMessageStart[2] = 0x5a;
-        pchMessageStart[3] = 0xad;
-        vAlertPubKey = ParseHex("04c6c4f3d2903b682e15deb0fda76639e12e4acbf931b4788142f003014b131ec71e7e6444e7e89bc137601e5811d002ba7887e9bb8681ff6b22dfc6ab17a2a3e8");
-        nDefaultPort = 9983;
+        pchMessageStart[0] = 0x9e;
+        pchMessageStart[1] = 0xea;
+        pchMessageStart[2] = 0x59;
+        pchMessageStart[3] = 0xac;
+        vAlertPubKey = ParseHex("043f61522dc2548f101d121aeb190b7fb2aeca44215bdebe74d05a33031fd47ed6fc741f1a99e3897f6d711ab44a1eaf9d30baee5d5d2942e54d1ca5c1d54b4c52");
+        nDefaultPort = 9985;
         nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin
         nDelayGetHeadersTime = 24 * 60 * 60;
         nPruneAfterHeight = 100000;
 
-        genesis = CreateGenesisBlock(1520778900, 790796, 0x1e0ffff0, 1, 50 * COIN);//
+        genesis = CreateGenesisBlock(1521980793, 224151, 0x1e0ffff0, 1, 50 * COIN);//
         consensus.hashGenesisBlock = genesis.GetHash();
-        assert(consensus.hashGenesisBlock == uint256S("0x00000d39b78c04cc35653abe2442a106a428c5e92ba41ec4967a80a09abf4725"));//0x00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be
-        assert(genesis.hashMerkleRoot == uint256S("0xa995d4dbdb823bd9dc5e2b6b5d6401f5255ebeae5ed200c6ad79d2c568c1b017"));
+        assert(consensus.hashGenesisBlock == uint256S("0x000002a48eafa1bea08766bf80d5c57ed4e9535a2787acad3dbd579c6e03df5e"));
+        assert(genesis.hashMerkleRoot == uint256S("0x62307a8afb6846f379b8f2c37c78dfe394dfa28c33ecafa88a5e8230121a8495"));
 
 
         vSeeds.clear();
-        //vSeeds.push_back(CDNSSeedData("wavi.org", "dnsseed.wavi.org"));
-        //vSeeds.push_back(CDNSSeedData("wavidot.io", "dnsseed.wavidot.io"));
-        //vSeeds.push_back(CDNSSeedData("wavipay.io", "dnsseed.wavipay.io"));
-
-        // Wavi addresses start
-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,73);
-        // Wavi script addresses start
-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,15);
-        // Wavi private keys start
-        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,133);
-        // Wavi BIP32 pubkeys start with 'xpub' (Bitcoin defaults)
+        //vSeeds.push_back(CDNSSeedData("pptp.org", "dnsseed.pptp.org"));
+        //vSeeds.push_back(CDNSSeedData("pptpdot.io", "dnsseed.pptpdot.io"));
+        //vSeeds.push_back(CDNSSeedData("pptppay.io", "dnsseed.pptppay.io"));
+
+        // Pptp addresses start
+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,55);
+        // Pptp script addresses start
+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,16);
+        // Pptp private keys start
+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,135);
+        // Pptp BIP32 pubkeys start with 'xpub' (Bitcoin defaults)
         base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x88)(0xB2)(0x1E).convert_to_container<std::vector<unsigned char> >();
-        // Wavi BIP32 prvkeys start with 'xprv' (Bitcoin defaults)
+        // Pptp BIP32 prvkeys start with 'xprv' (Bitcoin defaults)
         base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x88)(0xAD)(0xE4).convert_to_container<std::vector<unsigned char> >();
 
-        // Wavi BIP44 coin type is '5'
+        // Pptp BIP44 coin type is '5'
         nExtCoinType = 5;
 
         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));
@@ -172,7 +172,7 @@
 
         nPoolMaxTransactions = 3;
         nFulfilledRequestExpireTime = 60*60; // fulfilled requests expire in 1 hour
-        strSporkPubKey = "04d8abf3ef3056240b22465cc80fd9dbba5078616bbe10ab869ed777beeb207c26562bcc6a1915f9259f1460a58c9b594bcc13c17ae36b009997c4b919894251c9";
+        strSporkPubKey = "04b854794f57f646dcc3be14a15bd6a6eb73a8dba76613dc92fc7e1b04ce25f49dcd7db67d7a4eba90219e83c29fc7a1622add695bf3584abed71cb728fef30155";
 
         checkpointData = (CCheckpointData) {
             boost::assign::map_list_of
@@ -196,8 +196,8 @@
             ( 407452, uint256S("0x000000000003c6a87e73623b9d70af7cd908ae22fee466063e4ffc20be1d2dbc"))
             ( 523412, uint256S("0x000000000000e54f036576a10597e0e42cc22a5159ce572f999c33975e121d4d"))
             ( 523930, uint256S("0x0000000000000bccdb11c2b1cfb0ecab452abf267d89b7f46eaf2d54ce6e652c"))*/
-            ( 0, uint256S("0x00000d39b78c04cc35653abe2442a106a428c5e92ba41ec4967a80a09abf4725")),//00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be
-            1520778900, //1519569124 * UNIX timestamp of last checkpoint block
+            ( 0, uint256S("0x000002a48eafa1bea08766bf80d5c57ed4e9535a2787acad3dbd579c6e03df5e")),//00000516a96541bf40e137db48544378afd997d0ed3c7dc6d007ab6e953499be
+            1521980793, //1519569124 * UNIX timestamp of last checkpoint block
             0,    // * total number of transactions between genesis and last checkpoint
                         //   (the tx=... number in the SetBestChain debug.log lines)
             500        // * estimated number of transactions per day after checkpoint
@@ -231,10 +231,10 @@
         consensus.nMajorityRejectBlockOutdated = 75;
         consensus.nMajorityWindow = 100;
         consensus.BIP34Height = 0;
-        consensus.BIP34Hash = uint256S("0x00000ac144dd1c55a66b6486d96597fd624b9a072fa3572b9457eda66f0f740f");//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
+        consensus.BIP34Hash = uint256S("0x00000c11c60b8b093b7ed32e2d6a119abbabfcd66142d37afc62e8be133fd388");//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
         consensus.powLimit = uint256S("00000fffff000000000000000000000000000000000000000000000000000000");
-        consensus.nPowTargetTimespan = 24 * 60 * 60; // Wavi: 1 day
-        consensus.nPowTargetSpacing = 2.0 * 60; // Wavi: 2.0 minutes
+        consensus.nPowTargetTimespan = 24 * 60 * 60; // Pptp: 1 day
+        consensus.nPowTargetSpacing = 2.0 * 60; // Pptp: 2.0 minutes
         consensus.fPowAllowMinDifficultyBlocks = true;
         consensus.fPowNoRetargeting = false;
         consensus.nPowKGWHeight = 0; // nPowKGWHeight >= nPowDGWHeight means "no KGW"
@@ -261,40 +261,40 @@
         consensus.nMinimumChainWork = uint256S("0x0000000000000000000000000000000000000000000000000000000000100010"); // 0
 
         // By default assume that the signatures in ancestors of this block are valid.
-        consensus.defaultAssumeValid = uint256S("0x0000000004f5aef732d572ff514af99a995702c92e4452c7af10858231668b1f"); // 0
+        consensus.defaultAssumeValid = uint256S("0x00000c11c60b8b093b7ed32e2d6a119abbabfcd66142d37afc62e8be133fd388"); // 0
 
-        pchMessageStart[0] = 0x95;
-        pchMessageStart[1] = 0xe4;
-        pchMessageStart[2] = 0x54;
-        pchMessageStart[3] = 0x95;
-        vAlertPubKey = ParseHex("04c97e684fcd3f7c52eb6bc08fd57ac50b34689c27a4d04452e8259cc952f4eaaefb7967e30810001c4bac36dd4181cb026d501b2a23a27e7fa6e1f336dbc4869e");
-        nDefaultPort = 19983;
+        pchMessageStart[0] = 0x94;
+        pchMessageStart[1] = 0xe3;
+        pchMessageStart[2] = 0x53;
+        pchMessageStart[3] = 0x94;
+        vAlertPubKey = ParseHex("04e1f06ce6d0a64d69d7c7dcfde37792ddcef0069835b416e76d919ca4b3ffa98c5e8ad8173e7b3b0d1bd84c004f08d5ade3cceb93df70cb106b49b5d42d04284c");
+        nDefaultPort = 19985;
         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet
         nDelayGetHeadersTime = 24 * 60 * 60;
         nPruneAfterHeight = 1000;
 
-        genesis = CreateGenesisBlock(1520778910UL, 1890001UL, 0x1e0ffff0, 1, 50 * COIN);
+        genesis = CreateGenesisBlock(1521980193UL, 891818UL, 0x1e0ffff0, 1, 50 * COIN);
         consensus.hashGenesisBlock = genesis.GetHash();
-        assert(consensus.hashGenesisBlock == uint256S("0x00000ac144dd1c55a66b6486d96597fd624b9a072fa3572b9457eda66f0f740f"));//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
-        assert(genesis.hashMerkleRoot == uint256S("0xa995d4dbdb823bd9dc5e2b6b5d6401f5255ebeae5ed200c6ad79d2c568c1b017"));
+        assert(consensus.hashGenesisBlock == uint256S("0x00000c11c60b8b093b7ed32e2d6a119abbabfcd66142d37afc62e8be133fd388"));//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
+        assert(genesis.hashMerkleRoot == uint256S("0x62307a8afb6846f379b8f2c37c78dfe394dfa28c33ecafa88a5e8230121a8495"));
 
         vFixedSeeds.clear();
         vSeeds.clear();
-        //vSeeds.push_back(CDNSSeedData("wavidot.io",  "testnet-seed.wavidot.io"));
+        //vSeeds.push_back(CDNSSeedData("pptpdot.io",  "testnet-seed.pptpdot.io"));
         //vSeeds.push_back(CDNSSeedData("masternode.io", "test.dnsseed.masternode.io"));
 
-        // Testnet Wavi addresses start
-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,117);
-        // Testnet Wavi script addresses start
-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,199);
+        // Testnet Pptp addresses start
+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,118);
+        // Testnet Pptp script addresses start
+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,200);
         // Testnet private keys start with '9' or 'c' (Bitcoin defaults)
         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,246);
-        // Testnet Wavi BIP32 pubkeys start with 'tpub' (Bitcoin defaults)
+        // Testnet Pptp BIP32 pubkeys start with 'tpub' (Bitcoin defaults)
         base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x35)(0x87)(0xCF).convert_to_container<std::vector<unsigned char> >();
-        // Testnet Wavi BIP32 prvkeys start with 'tprv' (Bitcoin defaults)
+        // Testnet Pptp BIP32 prvkeys start with 'tprv' (Bitcoin defaults)
         base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x35)(0x83)(0x94).convert_to_container<std::vector<unsigned char> >();
 
-        // Testnet Wavi BIP44 coin type is '1' (All coin's testnet default)
+        // Testnet Pptp BIP44 coin type is '1' (All coin's testnet default)
         nExtCoinType = 1;
 
         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));
@@ -307,15 +307,15 @@
 
         nPoolMaxTransactions = 3;
         nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 5 minutes
-        strSporkPubKey = "046f78dcf911fbd61910136f7f0f8d90578f68d0b3ac973b5040fb7afb501b5939f39b108b0569dca71488f5bbf498d92e4d1194f6f941307ffd95f75e76869f0e";
+        strSporkPubKey = "04a3732407e2092cd42474983ebfcab01ac6cbb0a1bb16abfe768e11fcd31aad8067c3caef54551bf957f9712c73804f80ad698624bd75501cf654572ee96917e4";
 
         checkpointData = (CCheckpointData) {
             boost::assign::map_list_of
 /*            (    261, uint256S("0x00000c26026d0815a7e2ce4fa270775f61403c040647ff2c3091f99e894a4618"))
             (   1999, uint256S("0x00000052e538d27fa53693efe6fb6892a0c1d26c0235f599171c48a3cce553b1"))*/
-            (   0, uint256S("0x00000ac144dd1c55a66b6486d96597fd624b9a072fa3572b9457eda66f0f740f")),//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
+            (   0, uint256S("0x00000c11c60b8b093b7ed32e2d6a119abbabfcd66142d37afc62e8be133fd388")),//00000a97fc9bb3c18349014c348debd9b7d134a48b89c16e4edb63a79a91b863
 
-            1520778910, //1519569150 * UNIX timestamp of last checkpoint block
+            1521980193, //1519569150 * UNIX timestamp of last checkpoint block
             0,       // * total number of transactions between genesis and last checkpoint
                         //   (the tx=... number in the SetBestChain debug.log lines)
             10         // * estimated number of transactions per day after checkpoint
@@ -352,8 +352,8 @@
         consensus.BIP34Height = -1; // BIP34 has not necessarily activated on regtest
         consensus.BIP34Hash = uint256();
         consensus.powLimit = uint256S("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
-        consensus.nPowTargetTimespan = 24 * 60 * 60; // Wavi: 1 day
-        consensus.nPowTargetSpacing = 2.0 * 60; // Wavi: 2.0 minutes
+        consensus.nPowTargetTimespan = 24 * 60 * 60; // Pptp: 1 day
+        consensus.nPowTargetSpacing = 2.0 * 60; // Pptp: 2.0 minutes
         consensus.fPowAllowMinDifficultyBlocks = true;
         consensus.fPowNoRetargeting = true;
         consensus.nPowKGWHeight = 0; // same as mainnet
@@ -376,19 +376,19 @@
         // By default assume that the signatures in ancestors of this block are valid.
         consensus.defaultAssumeValid = uint256S("0x00");
 
-        pchMessageStart[0] = 0xad;
-        pchMessageStart[1] = 0x5b;
-        pchMessageStart[2] = 0xfb;
-        pchMessageStart[3] = 0xaf;
+        pchMessageStart[0] = 0xac;
+        pchMessageStart[1] = 0x5a;
+        pchMessageStart[2] = 0xfa;
+        pchMessageStart[3] = 0xae;
         nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin
         nDelayGetHeadersTime = 0; // never delay GETHEADERS in regtests
-        nDefaultPort = 8334;
+        nDefaultPort = 8335;
         nPruneAfterHeight = 1000;
 
-        genesis = CreateGenesisBlock(1520778920, 0, 0x207fffff, 1, 50 * COIN);
+        genesis = CreateGenesisBlock(1521979593, 2, 0x207fffff, 1, 50 * COIN);
         consensus.hashGenesisBlock = genesis.GetHash();
-        assert(consensus.hashGenesisBlock == uint256S("0x18a0292d04cd45e1aee55d7dd8a9873fdff7bb55108729b2a2b215a5780ed0b8"));//0c9d10149c505b92b7ac0811218c8d60201719fab28e95f425e35b5c7c9fb65a
-        assert(genesis.hashMerkleRoot == uint256S("0xa995d4dbdb823bd9dc5e2b6b5d6401f5255ebeae5ed200c6ad79d2c568c1b017"));
+        assert(consensus.hashGenesisBlock == uint256S("0x5666f38204f27cd3349adfe5e3b5b05e1dbce33eac445d21337b0a61f542b7bd"));
+        assert(genesis.hashMerkleRoot == uint256S("0x62307a8afb6846f379b8f2c37c78dfe394dfa28c33ecafa88a5e8230121a8495"));
 
         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.
         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds.
@@ -403,23 +403,23 @@
 
         checkpointData = (CCheckpointData){
             boost::assign::map_list_of
-            ( 0, uint256S("0x18a0292d04cd45e1aee55d7dd8a9873fdff7bb55108729b2a2b215a5780ed0b8")),//0c9d10149c505b92b7ac0811218c8d60201719fab28e95f425e35b5c7c9fb65a
+            ( 0, uint256S("0x5666f38204f27cd3349adfe5e3b5b05e1dbce33eac445d21337b0a61f542b7bd")),
             0,
             0,
             0
         };
-        // Regtest Wavi addresses start
-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,141);
-        // Regtest Wavi script addresses start
-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,191);
+        // Regtest Pptp addresses start
+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,139);
+        // Regtest Pptp script addresses start
+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,192);
         // Regtest private keys start with '9' or 'c' (Bitcoin defaults)
         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,238);
-        // Regtest Wavi BIP32 pubkeys start with 'tpub' (Bitcoin defaults)
+        // Regtest Pptp BIP32 pubkeys start with 'tpub' (Bitcoin defaults)
         base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x35)(0x87)(0xCF).convert_to_container<std::vector<unsigned char> >();
-        // Regtest Wavi BIP32 prvkeys start with 'tprv' (Bitcoin defaults)
+        // Regtest Pptp BIP32 prvkeys start with 'tprv' (Bitcoin defaults)
         base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x35)(0x83)(0x94).convert_to_container<std::vector<unsigned char> >();
 
-        // Regtest Wavi BIP44 coin type is '1' (All coin's testnet default)
+        // Regtest Pptp BIP44 coin type is '1' (All coin's testnet default)
         nExtCoinType = 1;
    }
 };
diff -r -u ./wavi/src/chainparams.h ./pptp/src/chainparams.h
--- ./wavi/src/chainparams.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/chainparams.h	Sun Mar 25 19:51:36 2018
@@ -34,7 +34,7 @@
 
 /**
  * CChainParams defines various tweakable parameters of a given instance of the
- * Wavi system. There are three: the main network on which people trade goods
+ * Pptp system. There are three: the main network on which people trade goods
  * and services, the public test network which gets reset from time to time and
  * a regression test mode which is intended for private networks only. It has
  * minimal difficulty to ensure that blocks can be found instantly.
diff -r -u ./wavi/src/chainparamsbase.cpp ./pptp/src/chainparamsbase.cpp
--- ./wavi/src/chainparamsbase.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/chainparamsbase.cpp	Thu Mar 29 23:17:40 2018
@@ -32,7 +32,7 @@
 public:
     CBaseMainParams()
     {
-        nRPCPort = 9984;
+        nRPCPort = 9986;
     }
 };
 static CBaseMainParams mainParams;
@@ -45,7 +45,7 @@
 public:
     CBaseTestNetParams()
     {
-        nRPCPort = 19984;
+        nRPCPort = 19986;
         strDataDir = "testnet3";
     }
 };
@@ -59,7 +59,7 @@
 public:
     CBaseRegTestParams()
     {
-        nRPCPort = 18334;
+        nRPCPort = 18336;
         strDataDir = "regtest";
     }
 };
diff -r -u ./wavi/src/chainparamsbase.h ./pptp/src/chainparamsbase.h
--- ./wavi/src/chainparamsbase.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/chainparamsbase.h	Sun Mar 25 19:51:36 2018
@@ -9,8 +9,8 @@
 #include <vector>
 
 /**
- * CBaseChainParams defines the base parameters (shared between wavi-cli and wavid)
- * of a given instance of the Wavi system.
+ * CBaseChainParams defines the base parameters (shared between pptp-cli and pptpd)
+ * of a given instance of the Pptp system.
  */
 class CBaseChainParams
 {
diff -r -u ./wavi/src/chainparamsseeds.h ./pptp/src/chainparamsseeds.h
--- ./wavi/src/chainparamsseeds.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/chainparamsseeds.h	Sat Mar 31 07:20:57 2018
@@ -23,11 +23,11 @@
     {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2e,0x69,0x76,0x0f}, 9999},
     {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb2,0x21,0x7e,0xdd}, 9999},
     {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0xec,0x17,0x83}, 9999},*/
-    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcb,0xbd,0x61,0x87}, 9983}
+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x85,0x82,0x42,0xa7}, 9985}
 };
 
 static SeedSpec6 pnSeed6_test[] = {
 //    {{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x99,0xcb,0x26,0x31,0xba,0x48,0x51,0x31,0x39,0x0d}, 18333},
-//    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcb,0xbd,0x61,0x87}, 19983}
+//    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcb,0xbd,0x61,0x87}, 19986}
 };
 #endif // BITCOIN_CHAINPARAMSSEEDS_H
diff -r -u ./wavi/src/checkpoints.cpp ./pptp/src/checkpoints.cpp
--- ./wavi/src/checkpoints.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/checkpoints.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2009-2014 The Bitcoin developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/clientversion.cpp ./pptp/src/clientversion.cpp
--- ./wavi/src/clientversion.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/clientversion.cpp	Sun Mar 25 19:51:36 2018
@@ -10,10 +10,10 @@
 
 /**
  * Name of client reported in the 'version' message. Report the same name
- * for both wavid and wavi-qt, to make it harder for attackers to
+ * for both pptpd and pptp-qt, to make it harder for attackers to
  * target servers or GUI users specifically.
  */
-const std::string CLIENT_NAME("Wavi Core");
+const std::string CLIENT_NAME("Pptp Core");
 
 /**
  * Client version number
diff -r -u ./wavi/src/clientversion.h ./pptp/src/clientversion.h
--- ./wavi/src/clientversion.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/clientversion.h	Sun Mar 25 19:57:55 2018
@@ -6,14 +6,14 @@
 #define BITCOIN_CLIENTVERSION_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #else
 
 /**
  * client versioning and copyright year
  */
 
-//! These need to be macros, as clientversion.cpp's and wavi*-res.rc's voodoo requires it
+//! These need to be macros, as clientversion.cpp's and pptp*-res.rc's voodoo requires it
 #define CLIENT_VERSION_MAJOR 0
 #define CLIENT_VERSION_MINOR 12
 #define CLIENT_VERSION_REVISION 2
@@ -38,10 +38,10 @@
 #define DO_STRINGIZE(X) #X
 
 //! Copyright string used in Windows .rc files
-#define COPYRIGHT_STR "2009-" STRINGIZE(COPYRIGHT_YEAR) " The Bitcoin Core Developers, 2014-" STRINGIZE(COPYRIGHT_YEAR) " The Wavi Core Developers"
+#define COPYRIGHT_STR "2009-" STRINGIZE(COPYRIGHT_YEAR) " The Bitcoin Core Developers, 2014-" STRINGIZE(COPYRIGHT_YEAR) " The Pptp Core Developers"
 
 /**
- * wavid-res.rc includes this file, but it cannot cope with real c++ code.
+ * pptpd-res.rc includes this file, but it cannot cope with real c++ code.
  * WINDRES_PREPROC is defined to indicate that its pre-processor is running.
  * Anything other than a define should be guarded below.
  */
diff -r -u ./wavi/src/coins.h ./pptp/src/coins.h
--- ./wavi/src/coins.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/coins.h	Sun Mar 25 19:57:55 2018
@@ -270,7 +270,7 @@
     size_t DynamicMemoryUsage() const;
 
     /** 
-     * Amount of wavi coming in to a transaction
+     * Amount of pptp coming in to a transaction
      * Note that lightweight clients may not know anything besides the hash of previous transactions,
      * so may not be able to calculate this.
      *
diff -r -u ./wavi/src/compat/byteswap.h ./pptp/src/compat/byteswap.h
--- ./wavi/src/compat/byteswap.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat/byteswap.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_COMPAT_BYTESWAP_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <stdint.h>
diff -r -u ./wavi/src/compat/endian.h ./pptp/src/compat/endian.h
--- ./wavi/src/compat/endian.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat/endian.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_COMPAT_ENDIAN_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <stdint.h>
diff -r -u ./wavi/src/compat/glibc_compat.cpp ./pptp/src/compat/glibc_compat.cpp
--- ./wavi/src/compat/glibc_compat.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat/glibc_compat.cpp	Sun Mar 25 19:57:55 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <cstddef>
diff -r -u ./wavi/src/compat/glibc_sanity.cpp ./pptp/src/compat/glibc_sanity.cpp
--- ./wavi/src/compat/glibc_sanity.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat/glibc_sanity.cpp	Sun Mar 25 19:57:55 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <cstddef>
diff -r -u ./wavi/src/compat/strnlen.cpp ./pptp/src/compat/strnlen.cpp
--- ./wavi/src/compat/strnlen.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat/strnlen.cpp	Sun Mar 25 19:57:55 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <cstring>
diff -r -u ./wavi/src/compat.h ./pptp/src/compat.h
--- ./wavi/src/compat.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/compat.h	Sun Mar 25 19:57:55 2018
@@ -7,7 +7,7 @@
 #define BITCOIN_COMPAT_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #ifdef WIN32
diff -r -u ./wavi/src/crypto/common.h ./pptp/src/crypto/common.h
--- ./wavi/src/crypto/common.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/crypto/common.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_CRYPTO_COMMON_H
 
 #if defined(HAVE_CONFIG_H)
-#include "wavi-config.h"
+#include "pptp-config.h"
 #endif
 
 #include <stdint.h>
diff -r -u ./wavi/src/crypto/yescrypt/yescrypt-opt_c.h ./pptp/src/crypto/yescrypt/yescrypt-opt_c.h
--- ./wavi/src/crypto/yescrypt/yescrypt-opt_c.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/crypto/yescrypt/yescrypt-opt_c.h	Sun Mar 25 19:20:37 2018
@@ -930,7 +930,7 @@
 		{
 			HMAC_SHA256_CTX ctx;
 			HMAC_SHA256_Init(&ctx, buf, buflen);
-			HMAC_SHA256_Update(&ctx, "WaviBanana", 10);
+			HMAC_SHA256_Update(&ctx, "PPTPPubKey", 10);
 			HMAC_SHA256_Final((uint8_t *)sha256, &ctx);
 		}
 		/* Compute StoredKey */
diff -r -u ./wavi/src/crypto/yescrypt/yescrypt-simd_c.h ./pptp/src/crypto/yescrypt/yescrypt-simd_c.h
--- ./wavi/src/crypto/yescrypt/yescrypt-simd_c.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/crypto/yescrypt/yescrypt-simd_c.h	Sun Mar 25 19:21:15 2018
@@ -1354,7 +1354,7 @@
 		{
 			HMAC_SHA256_CTX ctx;
 			HMAC_SHA256_Init(&ctx, buf, buflen);
-			HMAC_SHA256_Update(&ctx, "WaviBanana", 10);
+			HMAC_SHA256_Update(&ctx, "PPTPPubKey", 10);
 			HMAC_SHA256_Final(sha256, &ctx);
 		}
 		/* Compute StoredKey */
diff -r -u ./wavi/src/crypto/yescrypt/yescrypt.c ./pptp/src/crypto/yescrypt/yescrypt.c
--- ./wavi/src/crypto/yescrypt/yescrypt.c	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/crypto/yescrypt/yescrypt.c	Mon Mar 26 22:58:15 2018
@@ -22,14 +22,14 @@
 #include "yescrypt-best_c.h"
 
 #define YESCRYPT_N 4096
-#define YESCRYPT_R 32
-#define YESCRYPT_P 1
+#define YESCRYPT_R 16
+#define YESCRYPT_P 4
 #define YESCRYPT_T 0
 #define YESCRYPT_FLAGS (YESCRYPT_RW | YESCRYPT_PWXFORM)
 
 #ifdef __clang__
 
-static int yescrypt_wavi(const uint8_t *passwd, size_t passwdlen,
+static int yescrypt_pptp(const uint8_t *passwd, size_t passwdlen,
                             const uint8_t *salt, size_t saltlen,
                             uint8_t *buf, size_t buflen)
 {
@@ -59,7 +59,7 @@
 
 #else
 
-static int yescrypt_wavi(const uint8_t *passwd, size_t passwdlen,
+static int yescrypt_pptp(const uint8_t *passwd, size_t passwdlen,
                             const uint8_t *salt, size_t saltlen,
                             uint8_t *buf, size_t buflen)
 {
@@ -102,7 +102,7 @@
 
 void yescrypt_hash(const char *input, char *output)
 {
-    yescrypt_wavi((const uint8_t *) input, 80,
+    yescrypt_pptp((const uint8_t *) input, 80,
                      (const uint8_t *) input, 80,
                      (uint8_t *) output, 32);
 }
diff -r -u ./wavi/src/drafted/governance-categories.h ./pptp/src/drafted/governance-categories.h
--- ./wavi/src/drafted/governance-categories.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-categories.h	Sun Mar 25 19:51:36 2018
@@ -4,22 +4,22 @@
 
 	* means the category has an associated class
 	
-	CWaviNetwork: WAVI NETWORK (ROOT)
+	CPptpNetwork: PPTP NETWORK (ROOT)
 	has:
 		vector<CNetworkVariable> vecNetworkVariables;
-		vector<CWaviProject> vecProjects;
+		vector<CPptpProject> vecProjects;
 		vector<CGovernanceObject> vecProposals;
 		vector<CBudgetContract> vecContracts;
 		vector<CBudgetUsers> vecUsers;
 
-	CWaviProject:
+	CPptpProject:
 	has:
 		name
 		employees
 
 */
 
-	// WAVI NETWORK (ROOT)
+	// PPTP NETWORK (ROOT)
 	// 	-> NETWORK VARIABLE
 	// 		-> switch, setting
 	// 	-> CATEGORIES
@@ -49,7 +49,7 @@
 	// 			-> USER1 (only users are allowed here in this scope)
 	// 			-> USER2
 	// 		-> GROUP2 (EVO)
-	// 			-> VALUEOVERRIDE (STORE=WAVIDRIVE)
+	// 			-> VALUEOVERRIDE (STORE=PPTPDRIVE)
 	// 			-> USER1
 
 	// 	-> COMPANIES
diff -r -u ./wavi/src/drafted/governance-classes.h ./pptp/src/drafted/governance-classes.h
--- ./wavi/src/drafted/governance-classes.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-classes.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 /*
  * FIELDS AND CLASSIFICATION
@@ -45,7 +45,7 @@
  * =========================
  *
  *   // network
- *   CWaviNetwork lvl, network-type, network-status, network-error, milestone-status*
+ *   CPptpNetwork lvl, network-type, network-status, network-error, milestone-status*
  *   CCategory lvl, category-type, status, status-error
  *   CNetworkGlobalVariable lvl, global-type, status, status-error
  *   // base: actor
@@ -79,7 +79,7 @@
  *  TREE STRUCTURE
  *  ===========================================
  * 
- *  WAVI NETWORK (ROOT)
+ *  PPTP NETWORK (ROOT)
  *      -> NETWORK GLOBOLS
  *          -> SWITCHES, SETTINGS
  *      -> CATEGORIES
@@ -117,7 +117,7 @@
     int nLevel;
     std::string strCategory;
 
-    // Current OBJECT STATUS (see http://govman.wavi.org/index.php/Documentation_:_Status_Field)
+    // Current OBJECT STATUS (see http://govman.pptp.org/index.php/Documentation_:_Status_Field)
     int nStatusID;
     std::string strStatusMessage;
 
@@ -130,7 +130,7 @@
 };
 
 // // root node
-class CWaviNetwork : public CGovernanceObject
+class CPptpNetwork : public CGovernanceObject
 {
 private:
     std::string strName;
@@ -138,7 +138,7 @@
 
 
 public:
-    CWaviNetwork(UniValue objIn)
+    CPptpNetwork(UniValue objIn)
     {
         strName = objIn["name"].get_str();
         strURL = objIn["name"].get_str();
@@ -174,9 +174,9 @@
 
 };
 
-// // can be under: WaviNetwork
+// // can be under: PptpNetwork
 // //   -- signature requirements : Key1(User)
-// class CWaviNetworkVariable : public CGovernanceObject
+// class CPptpNetworkVariable : public CGovernanceObject
 // {
 // private:
 
@@ -279,7 +279,7 @@
 //     // isRootCategory()
 //     // {
 //     //     // root categories won't have categories as parents
-//     //     return (IsType() == WaviNetwork);
+//     //     return (IsType() == PptpNetwork);
 //     // }
 
 //     // isSubcategoryOf(std::string strParentName)
diff -r -u ./wavi/src/drafted/governance-keys.cpp ./pptp/src/drafted/governance-keys.cpp
--- ./wavi/src/drafted/governance-keys.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-keys.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 
-// // Copyright (c) 2014-2017 The Wavi Core developers
+// // Copyright (c) 2018-2018 The Pptp Core developers
 // // Distributed under the MIT/X11 software license, see the accompanying
 // // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/drafted/governance-keys.h ./pptp/src/drafted/governance-keys.h
--- ./wavi/src/drafted/governance-keys.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-keys.h	Sun Mar 25 19:57:55 2018
@@ -13,7 +13,7 @@
 	
 	- Users will configure their keys, something like this:
 
-	wavi.conf:
+	pptp.conf:
 
 		addgovkey=PrivKey1:name1 #comments
 		addgovkey=PrivKey2:name2 #comments
diff -r -u ./wavi/src/drafted/governance-types.cpp ./pptp/src/drafted/governance-types.cpp
--- ./wavi/src/drafted/governance-types.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-types.cpp	Sun Mar 25 19:51:36 2018
@@ -7,8 +7,8 @@
     if(strType == "AllTypes") type = AllTypes;
     if(strType == "Error") type = Error;
     if(strType == "ValueOverride") type = ValueOverride;
-    if(strType == "WaviNetwork") type = WaviNetwork;
-    if(strType == "WaviNetworkVariable") type = WaviNetworkVariable;
+    if(strType == "PptpNetwork") type = PptpNetwork;
+    if(strType == "PptpNetworkVariable") type = PptpNetworkVariable;
     if(strType == "Category") type = Category;
     if(strType == "Group") type = Group;
     if(strType == "User") type = User;
@@ -28,8 +28,8 @@
     if(type == AllTypes) s = "AllTypes";
     if(type == Error) s = "Error";
     if(type == ValueOverride) s = "ValueOverride";
-    if(type == WaviNetwork) s = "WaviNetwork";
-    if(type == WaviNetworkVariable) s = "WaviNetworkVariable";
+    if(type == PptpNetwork) s = "PptpNetwork";
+    if(type == PptpNetworkVariable) s = "PptpNetworkVariable";
     if(type == Category) s = "Category";
     if(type == Group) s = "Group";
     if(type == User) s = "User";
diff -r -u ./wavi/src/drafted/governance-types.h ./pptp/src/drafted/governance-types.h
--- ./wavi/src/drafted/governance-types.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/drafted/governance-types.h	Sun Mar 25 19:51:36 2018
@@ -16,9 +16,9 @@
     ValueOverride = 1, 
 
     // -------------------------------
-    // WaviNetwork - is the root node
-    WaviNetwork = 1000,
-    WaviNetworkVariable = 1001,
+    // PptpNetwork - is the root node
+    PptpNetwork = 1000,
+    PptpNetworkVariable = 1001,
     Category = 1002,
 
     // Actors
diff -r -u ./wavi/src/dsnotificationinterface.cpp ./pptp/src/dsnotificationinterface.cpp
--- ./wavi/src/dsnotificationinterface.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/dsnotificationinterface.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/flat-database.h ./pptp/src/flat-database.h
--- ./wavi/src/flat-database.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/flat-database.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-classes.cpp ./pptp/src/governance-classes.cpp
--- ./wavi/src/governance-classes.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-classes.cpp	Sun Mar 25 20:14:31 2018
@@ -1,8 +1,8 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
-//#define ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
 
 #include "core_io.h"
 #include "governance-classes.h"
@@ -435,7 +435,7 @@
             ExtractDestination(payment.script, address1);
             CBitcoinAddress address2(address1);
 
-            // TODO: PRINT NICE N.N WAVI OUTPUT
+            // TODO: PRINT NICE N.N PPTP OUTPUT
 
             DBG( cout << "CSuperblockManager::CreateSuperblock Before LogPrintf call, nAmount = " << payment.nAmount << endl; );
             LogPrintf("NEW Superblock : output %d (addr %s, amount %d)\n", i, address2.ToString(), payment.nAmount);
@@ -579,7 +579,7 @@
         CBitcoinAddress address(vecParsed1[i]);
         if (!address.IsValid()) {
             std::ostringstream ostr;
-            ostr << "CSuperblock::ParsePaymentSchedule -- Invalid Wavi Address : " <<  vecParsed1[i];
+            ostr << "CSuperblock::ParsePaymentSchedule -- Invalid Pptp Address : " <<  vecParsed1[i];
             LogPrintf("%s\n", ostr.str());
             throw std::runtime_error(ostr.str());
         }
diff -r -u ./wavi/src/governance-classes.h ./pptp/src/governance-classes.h
--- ./wavi/src/governance-classes.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-classes.h	Sun Mar 25 20:14:31 2018
@@ -1,10 +1,10 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #ifndef GOVERNANCE_CLASSES_H
 #define GOVERNANCE_CLASSES_H
 
-//#define ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
 
 #include "base58.h"
 #include "governance.h"
diff -r -u ./wavi/src/governance-exceptions.h ./pptp/src/governance-exceptions.h
--- ./wavi/src/governance-exceptions.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-exceptions.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-misc.h ./pptp/src/governance-misc.h
--- ./wavi/src/governance-misc.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-misc.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
diff -r -u ./wavi/src/governance-object.cpp ./pptp/src/governance-object.cpp
--- ./wavi/src/governance-object.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-object.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -454,7 +454,7 @@
                 } else if (err == CMasternode::COLLATERAL_UTXO_NOT_FOUND) {
                     strError = "Failed to find Masternode UTXO, missing masternode=" + strOutpoint + "\n";
                 } else if (err == CMasternode::COLLATERAL_INVALID_AMOUNT) {
-                    strError = "Masternode UTXO should have 1000 WAVI, missing masternode=" + strOutpoint + "\n";
+                    strError = "Masternode UTXO should have 1000 PPTP, missing masternode=" + strOutpoint + "\n";
                 }
 
                 return false;
diff -r -u ./wavi/src/governance-object.h ./pptp/src/governance-object.h
--- ./wavi/src/governance-object.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-object.h	Sun Mar 25 20:14:31 2018
@@ -1,11 +1,11 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #ifndef GOVERNANCE_OBJECT_H
 #define GOVERNANCE_OBJECT_H
 
-//#define ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
 
 #include "cachemultimap.h"
 #include "governance-exceptions.h"
diff -r -u ./wavi/src/governance-validators.cpp ./pptp/src/governance-validators.cpp
--- ./wavi/src/governance-validators.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-validators.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-validators.h ./pptp/src/governance-validators.h
--- ./wavi/src/governance-validators.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-validators.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-vote.cpp ./pptp/src/governance-vote.cpp
--- ./wavi/src/governance-vote.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-vote.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-vote.h ./pptp/src/governance-vote.h
--- ./wavi/src/governance-vote.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-vote.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
diff -r -u ./wavi/src/governance-votedb.cpp ./pptp/src/governance-votedb.cpp
--- ./wavi/src/governance-votedb.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-votedb.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance-votedb.h ./pptp/src/governance-votedb.h
--- ./wavi/src/governance-votedb.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance-votedb.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance.cpp ./pptp/src/governance.cpp
--- ./wavi/src/governance.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/governance.h ./pptp/src/governance.h
--- ./wavi/src/governance.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/governance.h	Sun Mar 25 20:14:31 2018
@@ -1,11 +1,11 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #ifndef GOVERNANCE_H
 #define GOVERNANCE_H
 
-//#define ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
 
 #include "bloom.h"
 #include "cachemap.h"
diff -r -u ./wavi/src/hash.h ./pptp/src/hash.h
--- ./wavi/src/hash.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/hash.h	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -367,7 +367,7 @@
 uint64_t SipHashUint256(uint64_t k0, uint64_t k1, const uint256& val);
 uint64_t SipHashUint256Extra(uint64_t k0, uint64_t k1, const uint256& val, uint32_t extra);
 
-/* ----------- Wavi Hash ------------------------------------------------ */
+/* ----------- Pptp Hash ------------------------------------------------ */
 template<typename T1>
 inline uint256 HashX11(const T1 pbegin, const T1 pend)
 
diff -r -u ./wavi/src/hdchain.cpp ./pptp/src/hdchain.cpp
--- ./wavi/src/hdchain.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/hdchain.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 
 #include "base58.h"
diff -r -u ./wavi/src/hdchain.h ./pptp/src/hdchain.h
--- ./wavi/src/hdchain.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/hdchain.h	Sun Mar 25 20:14:31 2018
@@ -1,7 +1,7 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
-#ifndef WAVI_HDCHAIN_H
-#define WAVI_HDCHAIN_H
+#ifndef PPTP_HDCHAIN_H
+#define PPTP_HDCHAIN_H
 
 #include "key.h"
 #include "sync.h"
@@ -149,4 +149,4 @@
     std::string GetKeyPath() const;
 };
 
-#endif // WAVI_HDCHAIN_H
+#endif // PPTP_HDCHAIN_H
diff -r -u ./wavi/src/httpserver.cpp ./pptp/src/httpserver.cpp
--- ./wavi/src/httpserver.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/httpserver.cpp	Sun Mar 25 19:57:55 2018
@@ -315,7 +315,7 @@
 /** Event dispatcher thread */
 static void ThreadHTTP(struct event_base* base, struct evhttp* http)
 {
-    RenameThread("wavi-http");
+    RenameThread("pptp-http");
     LogPrint("http", "Entering http event loop\n");
     event_base_dispatch(base);
     // Event loop will be interrupted by InterruptHTTPServer()
@@ -364,7 +364,7 @@
 /** Simple wrapper to set thread name and run work queue */
 static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)
 {
-    RenameThread("wavi-httpworker");
+    RenameThread("pptp-httpworker");
     queue->Run();
 }
 
diff -r -u ./wavi/src/init.cpp ./pptp/src/init.cpp
--- ./wavi/src/init.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/init.cpp	Sun Mar 25 20:14:31 2018
@@ -1,11 +1,11 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "init.h"
@@ -224,7 +224,7 @@
     /// for example if the data directory was found to be locked.
     /// Be sure that anything that writes files or flushes caches only does this if the respective
     /// module was initialized.
-    RenameThread("wavi-shutoff");
+    RenameThread("pptp-shutoff");
     mempool.AddTransactionsUpdated(1);
     StopHTTPRPC();
     StopREST();
@@ -550,7 +550,7 @@
         strUsage += HelpMessageOpt("-limitdescendantsize=<n>", strprintf("Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).", DEFAULT_DESCENDANT_SIZE_LIMIT));
     }
     string debugCategories = "addrman, alert, bench, coindb, db, http, leveldb, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq, "
-                             "wavi (or specifically: gobject, instantsend, keepass, masternode, mnpayments, mnsync, privatesend, spork)"; // Don't translate these and qt below
+                             "pptp (or specifically: gobject, instantsend, keepass, masternode, mnpayments, mnsync, privatesend, spork)"; // Don't translate these and qt below
     if (mode == HMM_BITCOIN_QT)
         debugCategories += ", qt";
     strUsage += HelpMessageOpt("-debug=<category>", strprintf(_("Output debugging information (default: %u, supplying <category> is optional)"), 0) + ". " +
@@ -584,7 +584,7 @@
     }
     strUsage += HelpMessageOpt("-shrinkdebugfile", _("Shrink debug.log file on client startup (default: 1 when no -debug)"));
     AppendParamsHelpMessages(strUsage, showDebug);
-    strUsage += HelpMessageOpt("-litemode=<n>", strprintf(_("Disable all Wavi specific functionality (Masternodes, PrivateSend, InstantSend, Governance) (0-1, default: %u)"), 0));
+    strUsage += HelpMessageOpt("-litemode=<n>", strprintf(_("Disable all Pptp specific functionality (Masternodes, PrivateSend, InstantSend, Governance) (0-1, default: %u)"), 0));
 
     strUsage += HelpMessageGroup(_("Masternode options:"));
     strUsage += HelpMessageOpt("-masternode=<n>", strprintf(_("Enable the client to act as a masternode (0-1, default: %u)"), 0));
@@ -597,7 +597,7 @@
     strUsage += HelpMessageOpt("-enableprivatesend=<n>", strprintf(_("Enable use of automated PrivateSend for funds stored in this wallet (0-1, default: %u)"), 0));
     strUsage += HelpMessageOpt("-privatesendmultisession=<n>", strprintf(_("Enable multiple PrivateSend mixing sessions per block, experimental (0-1, default: %u)"), DEFAULT_PRIVATESEND_MULTISESSION));
     strUsage += HelpMessageOpt("-privatesendrounds=<n>", strprintf(_("Use N separate masternodes for each denominated input to mix funds (2-16, default: %u)"), DEFAULT_PRIVATESEND_ROUNDS));
-    strUsage += HelpMessageOpt("-privatesendamount=<n>", strprintf(_("Keep N WAVI anonymized (default: %u)"), DEFAULT_PRIVATESEND_AMOUNT));
+    strUsage += HelpMessageOpt("-privatesendamount=<n>", strprintf(_("Keep N PPTP anonymized (default: %u)"), DEFAULT_PRIVATESEND_AMOUNT));
     strUsage += HelpMessageOpt("-liquidityprovider=<n>", strprintf(_("Provide liquidity to PrivateSend by infrequently mixing coins on a continual basis (0-100, default: %u, 1=very frequent, high fees, 100=very infrequent, low fees)"), DEFAULT_PRIVATESEND_LIQUIDITY));
 #endif // ENABLE_WALLET
 
@@ -646,7 +646,7 @@
     // todo: remove urls from translations on next change
     return FormatParagraph(strprintf(_("Copyright (C) 2009-%i The Bitcoin Core Developers"), COPYRIGHT_YEAR)) + "\n" +
            "\n" +
-           FormatParagraph(strprintf(_("Copyright (C) 2014-%i The Wavi Core Developers"), COPYRIGHT_YEAR)) + "\n" +
+           FormatParagraph(strprintf(_("Copyright (C) 2014-%i The Pptp Core Developers"), COPYRIGHT_YEAR)) + "\n" +
            "\n" +
            FormatParagraph(_("This is experimental software.")) + "\n" +
            "\n" +
@@ -726,7 +726,7 @@
 void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)
 {
     const CChainParams& chainparams = Params();
-    RenameThread("wavi-loadblk");
+    RenameThread("pptp-loadblk");
     CImportingNow imp;
 
     // -reindex
@@ -789,7 +789,7 @@
 }
 
 /** Sanity checks
- *  Ensure that Wavi Core is running in a usable environment with all
+ *  Ensure that Pptp Core is running in a usable environment with all
  *  necessary library support.
  */
 bool InitSanityCheck(void)
@@ -954,10 +954,10 @@
     fLogIPs = GetBoolArg("-logips", DEFAULT_LOGIPS);
 
     LogPrintf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
-    LogPrintf("Wavi Core version %s (%s)\n", FormatFullVersion(), CLIENT_DATE);
+    LogPrintf("Pptp Core version %s (%s)\n", FormatFullVersion(), CLIENT_DATE);
 }
 
-/** Initialize Wavi Core.
+/** Initialize Pptp Core.
  *  @pre Parameters should be parsed and config file should be read.
  */
 bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)
@@ -1234,7 +1234,7 @@
 
     // Sanity check
     if (!InitSanityCheck())
-        return InitError(_("Initialization sanity check failed. Wavi Core is shutting down."));
+        return InitError(_("Initialization sanity check failed. Pptp Core is shutting down."));
 
     std::string strDataDir = GetDataDir().string();
 #ifdef ENABLE_WALLET
@@ -1242,7 +1242,7 @@
     if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))
         return InitError(strprintf(_("Wallet %s resides outside data directory %s"), strWalletFile, strDataDir));
 #endif
-    // Make sure only a single Wavi Core process is using the data directory.
+    // Make sure only a single Pptp Core process is using the data directory.
     boost::filesystem::path pathLockFile = GetDataDir() / ".lock";
     FILE* file = fopen(pathLockFile.string().c_str(), "a"); // empty lock file; created if it doesn't exist.
     if (file) fclose(file);
@@ -1251,9 +1251,9 @@
         static boost::interprocess::file_lock lock(pathLockFile.string().c_str());
         // Wait maximum 10 seconds if an old wallet is still running. Avoids lockup during restart
         if (!lock.timed_lock(boost::get_system_time() + boost::posix_time::seconds(10)))
-            return InitError(strprintf(_("Cannot obtain a lock on data directory %s. Wavi Core is probably already running."), strDataDir));
+            return InitError(strprintf(_("Cannot obtain a lock on data directory %s. Pptp Core is probably already running."), strDataDir));
     } catch(const boost::interprocess::interprocess_exception& e) {
-        return InitError(strprintf(_("Cannot obtain a lock on data directory %s. Wavi Core is probably already running.") + " %s.", strDataDir, e.what()));
+        return InitError(strprintf(_("Cannot obtain a lock on data directory %s. Pptp Core is probably already running.") + " %s.", strDataDir, e.what()));
     }
 
 #ifndef WIN32
@@ -1718,10 +1718,10 @@
                              " or address book entries might be missing or incorrect."));
             }
             else if (nLoadWalletRet == DB_TOO_NEW)
-                strErrors << _("Error loading wallet.dat: Wallet requires newer version of Wavi Core") << "\n";
+                strErrors << _("Error loading wallet.dat: Wallet requires newer version of Pptp Core") << "\n";
             else if (nLoadWalletRet == DB_NEED_REWRITE)
             {
-                strErrors << _("Wallet needed to be rewritten: restart Wavi Core to complete") << "\n";
+                strErrors << _("Wallet needed to be rewritten: restart Pptp Core to complete") << "\n";
                 LogPrintf("%s", strErrors.str());
                 return InitError(strErrors.str());
             }
@@ -2011,14 +2011,14 @@
         return InitError(_("Failed to load fulfilled requests cache from") + "\n" + (pathDB / strDBName).string());
     }
 
-    // ********************************************************* Step 11c: update block tip in Wavi modules
+    // ********************************************************* Step 11c: update block tip in Pptp modules
 
     // force UpdatedBlockTip to initialize nCachedBlockHeight for DS, MN payments and budgets
     // but don't call it directly to prevent triggering of other listeners like zmq etc.
     // GetMainSignals().UpdatedBlockTip(chainActive.Tip());
     pdsNotificationInterface->InitializeCurrentBlockTip();
 
-    // ********************************************************* Step 11d: start wavi-ps-<smth> threads
+    // ********************************************************* Step 11d: start pptp-ps-<smth> threads
 
     threadGroup.create_thread(boost::bind(&ThreadCheckPrivateSend, boost::ref(*g_connman)));
     if (fMasterNode)
diff -r -u ./wavi/src/instantx.cpp ./pptp/src/instantx.cpp
--- ./wavi/src/instantx.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/instantx.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -48,7 +48,7 @@
 
 void CInstantSend::ProcessMessage(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
     if(!sporkManager.IsSporkActive(SPORK_2_INSTANTSEND_ENABLED)) return;
 
     // NOTE: NetMsgType::TXLOCKREQUEST is handled via ProcessMessage() in main.cpp
diff -r -u ./wavi/src/instantx.h ./pptp/src/instantx.h
--- ./wavi/src/instantx.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/instantx.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #ifndef INSTANTX_H
diff -r -u ./wavi/src/keepass.cpp ./pptp/src/keepass.cpp
--- ./wavi/src/keepass.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/keepass.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -243,7 +243,7 @@
 {
     std::ostringstream streamOut;
     streamOut << "POST / HTTP/1.1\r\n"
-      << "User-Agent: wavi-json-rpc/" << FormatFullVersion() << "\r\n"
+      << "User-Agent: pptp-json-rpc/" << FormatFullVersion() << "\r\n"
       << "Host: localhost\r\n"
       << "Content-Type: application/json\r\n"
       << "Content-Length: " << strMsg.size() << "\r\n"
@@ -336,7 +336,7 @@
     struct evkeyvalq *output_headers = evhttp_request_get_output_headers(req);
     assert(output_headers);
 //    s << "POST / HTTP/1.1\r\n"
-    evhttp_add_header(output_headers, "User-Agent", ("wavi-json-rpc/" + FormatFullVersion()).c_str());
+    evhttp_add_header(output_headers, "User-Agent", ("pptp-json-rpc/" + FormatFullVersion()).c_str());
     evhttp_add_header(output_headers, "Host", KEEPASS_HTTP_HOST);
     evhttp_add_header(output_headers, "Accept", "application/json");
     evhttp_add_header(output_headers, "Content-Type", "application/json");
@@ -494,7 +494,7 @@
     LogPrint("keepass", "CKeePassIntegrator::rpcSetLogin -- send Url: %s\n", sUrl);
 
     //request.addStrParameter("SubmitUrl", sSubmitUrl); // Is used to construct the entry title
-    request.addStrParameter("Login", SecureString("wavi"));
+    request.addStrParameter("Login", SecureString("pptp"));
     request.addStrParameter("Password", sWalletPass);
     if(sEntryId.size() != 0)
     {
diff -r -u ./wavi/src/keepass.h ./pptp/src/keepass.h
--- ./wavi/src/keepass.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/keepass.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/Makefile.am ./pptp/src/Makefile.am
--- ./wavi/src/Makefile.am	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/Makefile.am	Sun Mar 25 19:57:55 2018
@@ -49,8 +49,8 @@
 endif
 
 if BUILD_BITCOIN_LIBS
-lib_LTLIBRARIES = libwaviconsensus.la
-LIBBITCOIN_CONSENSUS=libwaviconsensus.la
+lib_LTLIBRARIES = libpptpconsensus.la
+LIBBITCOIN_CONSENSUS=libpptpconsensus.la
 else
 LIBBITCOIN_CONSENSUS=
 endif
@@ -60,15 +60,15 @@
 BENCHMARKS =
 
 if BUILD_BITCOIND
-  bin_PROGRAMS += wavid
+  bin_PROGRAMS += pptpd
 endif
 
 if BUILD_BITCOIN_UTILS
-  bin_PROGRAMS += wavi-cli wavi-tx
+  bin_PROGRAMS += pptp-cli pptp-tx
 endif
 
 .PHONY: FORCE check-symbols check-security
-# wavi core #
+# pptp core #
 BITCOIN_CORE_H = \
   addrdb.h \
   activemasternode.h \
@@ -208,7 +208,7 @@
 	  $(abs_top_srcdir)
 libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h
 
-# server: shared between wavid and wavi-qt
+# server: shared between pptpd and pptp-qt
 libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
 libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
 libbitcoin_server_a_SOURCES = \
@@ -282,7 +282,7 @@
 endif
 
 
-# wallet: shared between wavid and wavi-qt, but only linked
+# wallet: shared between pptpd and pptp-qt, but only linked
 # when wallet enabled
 libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
 libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
@@ -357,7 +357,7 @@
   crypto/sph_skein.h \
   crypto/sph_types.h
 
-# common: shared between wavid, and wavi-qt and non-server tools
+# common: shared between pptpd, and pptp-qt and non-server tools
 libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
 libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
 libbitcoin_common_a_SOURCES = \
@@ -417,7 +417,7 @@
 libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp
 endif
 
-# cli: shared between wavi-cli and wavi-qt
+# cli: shared between pptp-cli and pptp-qt
 libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
 libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
 libbitcoin_cli_a_SOURCES = \
@@ -428,16 +428,16 @@
 #
 
 # bitcoind binary #
-wavid_SOURCES = wavid.cpp
-wavid_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
-wavid_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
-wavid_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+pptpd_SOURCES = pptpd.cpp
+pptpd_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
+pptpd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+pptpd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
 
 if TARGET_WINDOWS
-wavid_SOURCES += wavid-res.rc
+pptpd_SOURCES += pptpd-res.rc
 endif
 
-wavid_LDADD = \
+pptpd_LDADD = \
   $(LIBBITCOIN_SERVER) \
   $(LIBBITCOIN_COMMON) \
   $(LIBUNIVALUE) \
@@ -448,56 +448,56 @@
   $(LIBSECP256K1)
 
 if ENABLE_ZMQ
-wavid_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
+pptpd_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
 endif
 
 if ENABLE_WALLET
-wavid_LDADD += libbitcoin_wallet.a
+pptpd_LDADD += libbitcoin_wallet.a
 endif
 
-wavid_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
+pptpd_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
 
-# wavi-cli binary #
-wavi_cli_SOURCES = wavi-cli.cpp
-wavi_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
-wavi_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
-wavi_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+# pptp-cli binary #
+pptp_cli_SOURCES = pptp-cli.cpp
+pptp_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
+pptp_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+pptp_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
 
 if TARGET_WINDOWS
-wavi_cli_SOURCES += wavi-cli-res.rc
+pptp_cli_SOURCES += pptp-cli-res.rc
 endif
 
-wavi_cli_LDADD = \
+pptp_cli_LDADD = \
   $(LIBBITCOIN_CLI) \
   $(LIBUNIVALUE) \
   $(LIBBITCOIN_UTIL)
-wavi_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)
+pptp_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)
 #
 
-# wavi-tx binary #
-wavi_tx_SOURCES = wavi-tx.cpp
-wavi_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
-wavi_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
-wavi_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+# pptp-tx binary #
+pptp_tx_SOURCES = pptp-tx.cpp
+pptp_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
+pptp_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+pptp_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
 
 if TARGET_WINDOWS
-wavi_tx_SOURCES += wavi-tx-res.rc
+pptp_tx_SOURCES += pptp-tx-res.rc
 endif
 
-wavi_tx_LDADD = \
+pptp_tx_LDADD = \
   $(LIBUNIVALUE) \
   $(LIBBITCOIN_COMMON) \
   $(LIBBITCOIN_UTIL) \
   $(LIBBITCOIN_CRYPTO) \
   $(LIBSECP256K1)
 
-wavi_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)
+pptp_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)
 #
 
-# waviconsensus library #
+# pptpconsensus library #
 if BUILD_BITCOIN_LIBS
-include_HEADERS = script/waviconsensus.h
-libwaviconsensus_la_SOURCES = \
+include_HEADERS = script/pptpconsensus.h
+libpptpconsensus_la_SOURCES = \
   crypto/hmac_sha512.cpp \
   crypto/ripemd160.cpp \
   crypto/sha1.cpp \
@@ -506,20 +506,20 @@
   hash.cpp \
   primitives/transaction.cpp \
   pubkey.cpp \
-  script/waviconsensus.cpp \
+  script/pptpconsensus.cpp \
   script/interpreter.cpp \
   script/script.cpp \
   uint256.cpp \
   utilstrencodings.cpp
 
 if GLIBC_BACK_COMPAT
-  libwaviconsensus_la_SOURCES += compat/glibc_compat.cpp
+  libpptpconsensus_la_SOURCES += compat/glibc_compat.cpp
 endif
 
-libwaviconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
-libwaviconsensus_la_LIBADD = $(LIBSECP256K1)
-libwaviconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL
-libwaviconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+libpptpconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
+libpptpconsensus_la_LIBADD = $(LIBSECP256K1)
+libpptpconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL
+libpptpconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
 
 endif
 #
diff -r -u ./wavi/src/Makefile.bench.include ./pptp/src/Makefile.bench.include
--- ./wavi/src/Makefile.bench.include	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/Makefile.bench.include	Sun Mar 25 19:57:55 2018
@@ -1,17 +1,17 @@
-bin_PROGRAMS += bench/bench_wavi
+bin_PROGRAMS += bench/bench_pptp
 BENCH_SRCDIR = bench
-BENCH_BINARY = bench/bench_wavi$(EXEEXT)
+BENCH_BINARY = bench/bench_pptp$(EXEEXT)
 
 
-bench_bench_wavi_SOURCES = \
-  bench/bench_wavi.cpp \
+bench_bench_pptp_SOURCES = \
+  bench/bench_pptp.cpp \
   bench/bench.cpp \
   bench/bench.h \
   bench/Examples.cpp
 
-bench_bench_wavi_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
-bench_bench_wavi_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
-bench_bench_wavi_LDADD = \
+bench_bench_pptp_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
+bench_bench_pptp_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+bench_bench_pptp_LDADD = \
   $(LIBBITCOIN_SERVER) \
   $(LIBBITCOIN_COMMON) \
   $(LIBBITCOIN_UTIL) \
@@ -22,15 +22,15 @@
   $(LIBUNIVALUE)
 
 if ENABLE_ZMQ
-bench_bench_wavi_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
+bench_bench_pptp_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
 endif
 
 if ENABLE_WALLET
-bench_bench_wavi_LDADD += $(LIBBITCOIN_WALLET)
+bench_bench_pptp_LDADD += $(LIBBITCOIN_WALLET)
 endif
 
-bench_bench_wavi_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
-bench_bench_wavi_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+bench_bench_pptp_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
+bench_bench_pptp_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
 
 CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno
 
@@ -42,4 +42,4 @@
 	$(BENCH_BINARY)
 
 bitcoin_bench_clean : FORCE
-	rm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_wavi_OBJECTS) $(BENCH_BINARY)
+	rm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_pptp_OBJECTS) $(BENCH_BINARY)
diff -r -u ./wavi/src/Makefile.qt.include ./pptp/src/Makefile.qt.include
--- ./wavi/src/Makefile.qt.include	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/Makefile.qt.include	Sun Mar 25 19:57:55 2018
@@ -1,24 +1,24 @@
-bin_PROGRAMS += qt/wavi-qt
+bin_PROGRAMS += qt/pptp-qt
 EXTRA_LIBRARIES += qt/libbitcoinqt.a
 
-# wavi qt core #
+# pptp qt core #
 QT_TS = \
-  qt/locale/wavi_bg.ts \
-  qt/locale/wavi_de.ts \
-  qt/locale/wavi_en.ts \
-  qt/locale/wavi_es.ts \
-  qt/locale/wavi_fi.ts \
-  qt/locale/wavi_fr.ts \
-  qt/locale/wavi_it.ts \
-  qt/locale/wavi_ja.ts \
-  qt/locale/wavi_pl.ts \
-  qt/locale/wavi_pt.ts \
-  qt/locale/wavi_ru.ts \
-  qt/locale/wavi_sk.ts \
-  qt/locale/wavi_sv.ts \
-  qt/locale/wavi_vi.ts \
-  qt/locale/wavi_zh_CN.ts \
-  qt/locale/wavi_zh_TW.ts
+  qt/locale/pptp_bg.ts \
+  qt/locale/pptp_de.ts \
+  qt/locale/pptp_en.ts \
+  qt/locale/pptp_es.ts \
+  qt/locale/pptp_fi.ts \
+  qt/locale/pptp_fr.ts \
+  qt/locale/pptp_it.ts \
+  qt/locale/pptp_ja.ts \
+  qt/locale/pptp_pl.ts \
+  qt/locale/pptp_pt.ts \
+  qt/locale/pptp_ru.ts \
+  qt/locale/pptp_sk.ts \
+  qt/locale/pptp_sv.ts \
+  qt/locale/pptp_vi.ts \
+  qt/locale/pptp_zh_CN.ts \
+  qt/locale/pptp_zh_TW.ts
 
 QT_FORMS_UI = \
   qt/forms/addressbookpage.ui \
@@ -95,16 +95,16 @@
   qt/macnotificationhandler.mm
 
 QT_MOC = \
-  qt/wavi.moc \
+  qt/pptp.moc \
   qt/bitcoinamountfield.moc \
   qt/intro.moc \
   qt/overviewpage.moc \
   qt/rpcconsole.moc
 
-QT_QRC_CPP = qt/qrc_wavi.cpp
-QT_QRC = qt/wavi.qrc
-QT_QRC_LOCALE_CPP = qt/qrc_wavi_locale.cpp
-QT_QRC_LOCALE = qt/wavi_locale.qrc
+QT_QRC_CPP = qt/qrc_pptp.cpp
+QT_QRC = qt/pptp.qrc
+QT_QRC_LOCALE_CPP = qt/qrc_pptp_locale.cpp
+QT_QRC_LOCALE = qt/pptp_locale.qrc
 
 PROTOBUF_CC = qt/paymentrequest.pb.cc
 PROTOBUF_H = qt/paymentrequest.pb.h
@@ -454,7 +454,7 @@
   qt/res/images/drkblue/about.png \
   qt/res/images/drkblue/splash.png \
   qt/res/images/drkblue/splash_testnet.png \
-  qt/res/images/drkblue/wavi_logo_horizontal.png \
+  qt/res/images/drkblue/pptp_logo_horizontal.png \
   qt/res/images/drkblue/unchecked.png \
   qt/res/images/drkblue/checked.png \
   qt/res/images/drkblue/drkblue_downArrow.png \
@@ -467,7 +467,7 @@
   qt/res/images/crownium/about.png \
   qt/res/images/crownium/splash.png \
   qt/res/images/crownium/splash_testnet.png \
-  qt/res/images/crownium/wavi_logo_horizontal.png \
+  qt/res/images/crownium/pptp_logo_horizontal.png \
   qt/res/images/crownium/unchecked.png \
   qt/res/images/crownium/checked.png \
   qt/res/images/crownium/drkblue_downArrow.png \
@@ -480,7 +480,7 @@
   qt/res/images/light/about.png \
   qt/res/images/light/splash.png \
   qt/res/images/light/splash_testnet.png \
-  qt/res/images/light/wavi_logo_horizontal.png \
+  qt/res/images/light/pptp_logo_horizontal.png \
   qt/res/images/light/unchecked.png \
   qt/res/images/light/checked.png \
   qt/res/images/light/drkblue_downArrow.png \
@@ -493,7 +493,7 @@
   qt/res/images/trad/about.png \
   qt/res/images/trad/splash.png \
   qt/res/images/trad/splash_testnet.png \
-  qt/res/images/trad/wavi_logo_horizontal.png \
+  qt/res/images/trad/pptp_logo_horizontal.png \
   qt/res/images/trad/drkblue_downArrow.png \
   qt/res/images/trad/drkblue_downArrow_small.png \
   qt/res/images/trad/drkblue_upArrow_small.png \
@@ -511,7 +511,7 @@
 
 RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)
 
-BITCOIN_RC = qt/res/wavi-qt-res.rc
+BITCOIN_RC = qt/res/pptp-qt-res.rc
 
 BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \
   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS
@@ -532,70 +532,70 @@
 # Most files will depend on the forms and moc files as includes. Generate them
 # before anything else.
 $(QT_MOC): $(QT_FORMS_H)
-$(qt_libbitcoinqt_a_OBJECTS) $(qt_wavi_qt_OBJECTS) : | $(QT_MOC)
+$(qt_libbitcoinqt_a_OBJECTS) $(qt_pptp_qt_OBJECTS) : | $(QT_MOC)
 
 #Generating these with a half-written protobuf header leads to wacky results.
 #This makes sure it's done.
 $(QT_MOC): $(PROTOBUF_H)
 $(QT_MOC_CPP): $(PROTOBUF_H)
 
-# wavi-qt binary #
-qt_wavi_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
+# pptp-qt binary #
+qt_pptp_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)
-qt_wavi_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
+qt_pptp_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
 
-qt_wavi_qt_SOURCES = qt/wavi.cpp
+qt_pptp_qt_SOURCES = qt/pptp.cpp
 if TARGET_DARWIN
-  qt_wavi_qt_SOURCES += $(BITCOIN_MM)
+  qt_pptp_qt_SOURCES += $(BITCOIN_MM)
 endif
 if TARGET_WINDOWS
-  qt_wavi_qt_SOURCES += $(BITCOIN_RC)
+  qt_pptp_qt_SOURCES += $(BITCOIN_RC)
 endif
-qt_wavi_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)
+qt_pptp_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)
 if ENABLE_WALLET
-qt_wavi_qt_LDADD += $(LIBBITCOIN_WALLET)
+qt_pptp_qt_LDADD += $(LIBBITCOIN_WALLET)
 endif
 if ENABLE_ZMQ
-qt_wavi_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
+qt_pptp_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
 endif
-qt_wavi_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
+qt_pptp_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
-qt_wavi_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
-qt_wavi_qt_LIBTOOLFLAGS = --tag CXX
+qt_pptp_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+qt_pptp_qt_LIBTOOLFLAGS = --tag CXX
 
 #locale/foo.ts -> locale/foo.qm
 QT_QM=$(QT_TS:.ts=.qm)
 
 SECONDARY: $(QT_QM)
 
-qt/wavistrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)
+qt/pptpstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)
 	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
 	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^
 
-translate: qt/wavistrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) qt/wavi.cpp $(BITCOIN_QT_H) $(BITCOIN_MM)
+translate: qt/pptpstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) qt/pptp.cpp $(BITCOIN_QT_H) $(BITCOIN_MM)
 	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
-	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/wavi_en.ts
+	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/pptp_en.ts
 
 $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
 	@test -f $(RCC)
 	@test -f $(@D)/$(<F) || cp -f $< $(@D)
-	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) $(RCCFLAGS) -name wavi_locale $(@D)/$(<F) | \
+	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) $(RCCFLAGS) -name pptp_locale $(@D)/$(<F) | \
 	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
 
 $(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_CSS) $(RES_MOVIES) $(PROTOBUF_H)
 	@test -f $(RCC)
-	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) $(RCCFLAGS) -name wavi $< | \
+	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) $(RCCFLAGS) -name pptp $< | \
 	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
 
 CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno
 
 CLEANFILES += $(CLEAN_QT)
 
-wavi_qt_clean: FORCE
-	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_wavi_qt_OBJECTS) qt/wavi-qt$(EXEEXT) $(LIBBITCOINQT)
+pptp_qt_clean: FORCE
+	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_pptp_qt_OBJECTS) qt/pptp-qt$(EXEEXT) $(LIBBITCOINQT)
 
-wavi_qt : qt/wavi-qt$(EXEEXT)
+pptp_qt : qt/pptp-qt$(EXEEXT)
 
 ui_%.h: %.ui
 	@test -f $(UIC)
diff -r -u ./wavi/src/Makefile.qttest.include ./pptp/src/Makefile.qttest.include
--- ./wavi/src/Makefile.qttest.include	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/Makefile.qttest.include	Sun Mar 25 19:57:55 2018
@@ -1,5 +1,5 @@
-bin_PROGRAMS += qt/test/test_wavi-qt
-TESTS += qt/test/test_wavi-qt
+bin_PROGRAMS += qt/test/test_pptp-qt
+TESTS += qt/test/test_pptp-qt
 
 TEST_QT_MOC_CPP = \
   qt/test/moc_compattests.cpp \
@@ -17,44 +17,44 @@
   qt/test/paymentservertests.h \
   qt/test/trafficgraphdatatests.h
 
-qt_test_test_wavi_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
+qt_test_test_pptp_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)
 
-qt_test_test_wavi_qt_SOURCES = \
+qt_test_test_pptp_qt_SOURCES = \
   qt/test/compattests.cpp \
   qt/test/test_main.cpp \
   qt/test/uritests.cpp \
   qt/test/trafficgraphdatatests.cpp \
   $(TEST_QT_H)
 if ENABLE_WALLET
-qt_test_test_wavi_qt_SOURCES += \
+qt_test_test_pptp_qt_SOURCES += \
   qt/test/paymentservertests.cpp
 endif
 
-nodist_qt_test_test_wavi_qt_SOURCES = $(TEST_QT_MOC_CPP)
+nodist_qt_test_test_pptp_qt_SOURCES = $(TEST_QT_MOC_CPP)
 
-qt_test_test_wavi_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)
+qt_test_test_pptp_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)
 if ENABLE_WALLET
-qt_test_test_wavi_qt_LDADD += $(LIBBITCOIN_WALLET)
+qt_test_test_pptp_qt_LDADD += $(LIBBITCOIN_WALLET)
 endif
 if ENABLE_ZMQ
-qt_test_test_wavi_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
+qt_test_test_pptp_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
 endif
-qt_test_test_wavi_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \
+qt_test_test_pptp_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \
   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \
   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
-qt_test_test_wavi_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
-qt_test_test_wavi_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
+qt_test_test_pptp_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
+qt_test_test_pptp_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
 
 CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
 
 CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)
 
-test_wavi_qt : qt/test/test_wavi-qt$(EXEEXT)
+test_pptp_qt : qt/test/test_pptp-qt$(EXEEXT)
 
-test_wavi_qt_check : qt/test/test_wavi-qt$(EXEEXT) FORCE
+test_pptp_qt_check : qt/test/test_pptp-qt$(EXEEXT) FORCE
 	$(MAKE) check-TESTS TESTS=$^
 
-test_wavi_qt_clean: FORCE
-	rm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_wavi_qt_OBJECTS)
+test_pptp_qt_clean: FORCE
+	rm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_pptp_qt_OBJECTS)
diff -r -u ./wavi/src/Makefile.test.include ./pptp/src/Makefile.test.include
--- ./wavi/src/Makefile.test.include	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/Makefile.test.include	Sun Mar 25 19:57:55 2018
@@ -1,7 +1,7 @@
-TESTS += test/test_wavi
-bin_PROGRAMS += test/test_wavi
+TESTS += test/test_pptp
+bin_PROGRAMS += test/test_pptp
 TEST_SRCDIR = test
-TEST_BINARY=test/test_wavi$(EXEEXT)
+TEST_BINARY=test/test_pptp$(EXEEXT)
 
 
 EXTRA_DIST += \
@@ -84,8 +84,8 @@
   test/sigopcount_tests.cpp \
   test/skiplist_tests.cpp \
   test/streams_tests.cpp \
-  test/test_wavi.cpp \
-  test/test_wavi.h \
+  test/test_pptp.cpp \
+  test/test_pptp.h \
   test/timedata_tests.cpp \
   test/transaction_tests.cpp \
   test/txvalidationcache_tests.cpp \
@@ -101,23 +101,23 @@
   test/rpc_wallet_tests.cpp
 endif
 
-test_test_wavi_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
-test_test_wavi_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
-test_test_wavi_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
+test_test_pptp_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
+test_test_pptp_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
+test_test_pptp_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)
-test_test_wavi_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
+test_test_pptp_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
 if ENABLE_WALLET
-test_test_wavi_LDADD += $(LIBBITCOIN_WALLET)
+test_test_pptp_LDADD += $(LIBBITCOIN_WALLET)
 endif
 
-test_test_wavi_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
-test_test_wavi_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
+test_test_pptp_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
+test_test_pptp_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
 
 if ENABLE_ZMQ
-test_test_wavi_LDADD += $(ZMQ_LIBS)
+test_test_pptp_LDADD += $(ZMQ_LIBS)
 endif
 
-nodist_test_test_wavi_SOURCES = $(GENERATED_TEST_FILES)
+nodist_test_test_pptp_SOURCES = $(GENERATED_TEST_FILES)
 
 $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)
 
@@ -125,13 +125,13 @@
 
 CLEANFILES += $(CLEAN_BITCOIN_TEST)
 
-wavi_test: $(TEST_BINARY)
+pptp_test: $(TEST_BINARY)
 
-wavi_test_check: $(TEST_BINARY) FORCE
+pptp_test_check: $(TEST_BINARY) FORCE
 	$(MAKE) check-TESTS TESTS=$^
 
-wavi_test_clean : FORCE
-	rm -f $(CLEAN_BITCOIN_TEST) $(test_test_wavi_OBJECTS) $(TEST_BINARY)
+pptp_test_clean : FORCE
+	rm -f $(CLEAN_BITCOIN_TEST) $(test_test_pptp_OBJECTS) $(TEST_BINARY)
 
 check-local:
 	@echo "Running test/bitcoin-util-test.py..."
diff -r -u ./wavi/src/masternode-payments.cpp ./pptp/src/masternode-payments.cpp
--- ./wavi/src/masternode-payments.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode-payments.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -27,7 +27,7 @@
 *   Determine if coinbase outgoing created money is the correct value
 *
 *   Why is this needed?
-*   - In Wavi some blocks are superblocks, which output much higher amounts of coins
+*   - In Pptp some blocks are superblocks, which output much higher amounts of coins
 *   - Otherblocks are 10% lower in outgoing value, so in total, no extra coins are created
 *   - When non-superblocks are detected, the normal schedule should be maintained
 */
@@ -305,7 +305,7 @@
 
 void CMasternodePayments::ProcessMessage(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
 
     if (strCommand == NetMsgType::MASTERNODEPAYMENTSYNC) { //Masternode Payments Request Sync
 
@@ -583,7 +583,7 @@
         }
     }
 
-    LogPrintf("CMasternodeBlockPayees::IsTransactionValid -- ERROR: Missing required payment, possible payees: '%s', amount: %f WAVI\n", strPayeesPossible, (float)nMasternodePayment/COIN);
+    LogPrintf("CMasternodeBlockPayees::IsTransactionValid -- ERROR: Missing required payment, possible payees: '%s', amount: %f PPTP\n", strPayeesPossible, (float)nMasternodePayment/COIN);
     return false;
 }
 
diff -r -u ./wavi/src/masternode-payments.h ./pptp/src/masternode-payments.h
--- ./wavi/src/masternode-payments.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode-payments.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/masternode-sync.cpp ./pptp/src/masternode-sync.cpp
--- ./wavi/src/masternode-sync.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode-sync.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/masternode-sync.h ./pptp/src/masternode-sync.h
--- ./wavi/src/masternode-sync.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode-sync.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #ifndef MASTERNODE_SYNC_H
diff -r -u ./wavi/src/masternode.cpp ./pptp/src/masternode.cpp
--- ./wavi/src/masternode.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -560,7 +560,7 @@
         }
 
         if (err == COLLATERAL_INVALID_AMOUNT) {
-            LogPrint("masternode", "CMasternodeBroadcast::CheckOutpoint -- Masternode UTXO should have 1000 WAVI, masternode=%s\n", vin.prevout.ToStringShort());
+            LogPrint("masternode", "CMasternodeBroadcast::CheckOutpoint -- Masternode UTXO should have 1000 PPTP, masternode=%s\n", vin.prevout.ToStringShort());
             return false;
         }
 
@@ -586,7 +586,7 @@
     }
 
     // verify that sig time is legit in past
-    // should be at least not earlier than block when 1000 WAVI tx got nMasternodeMinimumConfirmations
+    // should be at least not earlier than block when 1000 PPTP tx got nMasternodeMinimumConfirmations
     uint256 hashBlock = uint256();
     CTransaction tx2;
     GetTransaction(vin.prevout.hash, tx2, Params().GetConsensus(), hashBlock, true);
@@ -594,7 +594,7 @@
         LOCK(cs_main);
         BlockMap::iterator mi = mapBlockIndex.find(hashBlock);
         if (mi != mapBlockIndex.end() && (*mi).second) {
-            CBlockIndex* pMNIndex = (*mi).second; // block for 1000 WAVI tx -> 1 confirmation
+            CBlockIndex* pMNIndex = (*mi).second; // block for 1000 PPTP tx -> 1 confirmation
             CBlockIndex* pConfIndex = chainActive[pMNIndex->nHeight + Params().GetConsensus().nMasternodeMinimumConfirmations - 1]; // block where tx got nMasternodeMinimumConfirmations
             if(pConfIndex->GetBlockTime() > sigTime) {
                 LogPrintf("CMasternodeBroadcast::CheckOutpoint -- Bad sigTime %d (%d conf block is at %d) for Masternode %s %s\n",
diff -r -u ./wavi/src/masternode.h ./pptp/src/masternode.h
--- ./wavi/src/masternode.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternode.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -251,7 +251,7 @@
         return false;
     }
 
-    /// Is the input associated with collateral public key? (and there is 1000 WAVI - checking if valid masternode)
+    /// Is the input associated with collateral public key? (and there is 1000 PPTP - checking if valid masternode)
     bool IsInputAssociatedWithPubkey();
 
     bool IsValidNetAddr();
diff -r -u ./wavi/src/masternodeconfig.h ./pptp/src/masternodeconfig.h
--- ./wavi/src/masternodeconfig.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternodeconfig.h	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/masternodeman.cpp ./pptp/src/masternodeman.cpp
--- ./wavi/src/masternodeman.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternodeman.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -740,7 +740,7 @@
 
 void CMasternodeMan::ProcessMessage(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
 
     if (strCommand == NetMsgType::MNANNOUNCE) { //Masternode Broadcast
 
diff -r -u ./wavi/src/masternodeman.h ./pptp/src/masternodeman.h
--- ./wavi/src/masternodeman.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/masternodeman.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/messagesigner.cpp ./pptp/src/messagesigner.cpp
--- ./wavi/src/messagesigner.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/messagesigner.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/messagesigner.h ./pptp/src/messagesigner.h
--- ./wavi/src/messagesigner.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/messagesigner.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/miner.cpp ./pptp/src/miner.cpp
--- ./wavi/src/miner.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/miner.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -36,7 +36,7 @@
 
 //////////////////////////////////////////////////////////////////////////////
 //
-// WaviMiner
+// PptpMiner
 //
 
 //
@@ -343,7 +343,7 @@
 // Internal miner
 //
 
-// ***TODO*** ScanHash is not yet used in Wavi
+// ***TODO*** ScanHash is not yet used in Pptp
 //
 // ScanHash scans nonces looking for a hash with at least some zero bits.
 // The nonce is usually preserved between calls, but periodically or if the
@@ -402,9 +402,9 @@
 // ***TODO*** that part changed in bitcoin, we are using a mix with old one here for now
 void static BitcoinMiner(const CChainParams& chainparams, CConnman& connman)
 {
-    LogPrintf("WaviMiner -- started\n");
+    LogPrintf("PptpMiner -- started\n");
     SetThreadPriority(THREAD_PRIORITY_LOWEST);
-    RenameThread("wavi-miner");
+    RenameThread("pptp-miner");
 
     unsigned int nExtraNonce = 0;
 
@@ -441,13 +441,13 @@
             std::unique_ptr<CBlockTemplate> pblocktemplate(CreateNewBlock(chainparams, coinbaseScript->reserveScript));
             if (!pblocktemplate.get())
             {
-                LogPrintf("WaviMiner -- Keypool ran out, please call keypoolrefill before restarting the mining thread\n");
+                LogPrintf("PptpMiner -- Keypool ran out, please call keypoolrefill before restarting the mining thread\n");
                 return;
             }
             CBlock *pblock = &pblocktemplate->block;
             IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);
 
-            LogPrintf("WaviMiner -- Running miner with %u transactions in block (%u bytes)\n", pblock->vtx.size(),
+            LogPrintf("PptpMiner -- Running miner with %u transactions in block (%u bytes)\n", pblock->vtx.size(),
                 ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));
 
             //
@@ -467,7 +467,7 @@
                     {
                         // Found a solution
                         SetThreadPriority(THREAD_PRIORITY_NORMAL);
-                        LogPrintf("WaviMiner:\n  proof-of-work found\n  hash: %s\n  target: %s\n", hash.GetHex(), hashTarget.GetHex());
+                        LogPrintf("PptpMiner:\n  proof-of-work found\n  hash: %s\n  target: %s\n", hash.GetHex(), hashTarget.GetHex());
                         ProcessBlockFound(pblock, chainparams);
                         SetThreadPriority(THREAD_PRIORITY_LOWEST);
                         coinbaseScript->KeepScript();
@@ -511,12 +511,12 @@
     }
     catch (const boost::thread_interrupted&)
     {
-        LogPrintf("WaviMiner -- terminated\n");
+        LogPrintf("PptpMiner -- terminated\n");
         throw;
     }
     catch (const std::runtime_error &e)
     {
-        LogPrintf("WaviMiner -- runtime error: %s\n", e.what());
+        LogPrintf("PptpMiner -- runtime error: %s\n", e.what());
         return;
     }
 }
diff -r -u ./wavi/src/net.cpp ./pptp/src/net.cpp
--- ./wavi/src/net.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/net.cpp	Sun Mar 25 20:14:31 2018
@@ -1,11 +1,11 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "net.h"
@@ -663,7 +663,7 @@
         nPingUsecWait = GetTimeMicros() - nPingUsecStart;
     }
 
-    // Raw ping time is in microseconds, but show it to user as whole seconds (Wavi users should be well used to small numbers with many decimal places by now :)
+    // Raw ping time is in microseconds, but show it to user as whole seconds (Pptp users should be well used to small numbers with many decimal places by now :)
     stats.dPingTime = (((double)nPingUsecTime) / 1e6);
     stats.dMinPing  = (((double)nMinPingUsecTime) / 1e6);
     stats.dPingWait = (((double)nPingUsecWait) / 1e6);
@@ -1446,7 +1446,7 @@
             }
         }
 
-        std::string strDesc = "Wavi Core " + FormatFullVersion();
+        std::string strDesc = "Pptp Core " + FormatFullVersion();
 
         try {
             while (true) {
@@ -2032,7 +2032,7 @@
     {
         int nErr = WSAGetLastError();
         if (nErr == WSAEADDRINUSE)
-            strError = strprintf(_("Unable to bind to %s on this computer. Wavi Core is probably already running."), addrBind.ToString());
+            strError = strprintf(_("Unable to bind to %s on this computer. Pptp Core is probably already running."), addrBind.ToString());
         else
             strError = strprintf(_("Unable to bind to %s on this computer (bind returned error %s)"), addrBind.ToString(), NetworkErrorString(nErr));
         LogPrintf("%s\n", strError);
diff -r -u ./wavi/src/net.h ./pptp/src/net.h
--- ./wavi/src/net.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/net.h	Sun Mar 25 19:51:36 2018
@@ -142,7 +142,7 @@
     // fConnectToMasternode should be 'true' only if you want this node to allow to connect to itself
     // and/or you want it to be disconnected on CMasternodeMan::ProcessMasternodeConnections()
     // Unfortunately, can't make this method private like in Bitcoin,
-    // because it's used in many Wavi-specific places (masternode, privatesend).
+    // because it's used in many Pptp-specific places (masternode, privatesend).
     CNode* ConnectNode(CAddress addrConnect, const char *pszDest = NULL, bool fConnectToMasternode = false);
 
     struct CFullyConnectedOnly {
diff -r -u ./wavi/src/net_processing.cpp ./pptp/src/net_processing.cpp
--- ./wavi/src/net_processing.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/net_processing.cpp	Sun Mar 25 19:51:36 2018
@@ -46,7 +46,7 @@
 using namespace std;
 
 #if defined(NDEBUG)
-# error "Wavi Core cannot be compiled without assertions."
+# error "Pptp Core cannot be compiled without assertions."
 #endif
 
 int64_t nTimeBestReceived = 0; // Used only to inform the wallet of when we last received a block
@@ -705,7 +705,7 @@
         return mapBlockIndex.count(inv.hash);
 
     /* 
-        Wavi Related Inventory Messages
+        Pptp Related Inventory Messages
 
         --
 
diff -r -u ./wavi/src/netaddress.cpp ./pptp/src/netaddress.cpp
--- ./wavi/src/netaddress.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netaddress.cpp	Sun Mar 25 19:57:55 2018
@@ -4,7 +4,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #ifdef HAVE_CONFIG_H
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "netaddress.h"
diff -r -u ./wavi/src/netaddress.h ./pptp/src/netaddress.h
--- ./wavi/src/netaddress.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netaddress.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_NETADDRESS_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "compat.h"
diff -r -u ./wavi/src/netbase.cpp ./pptp/src/netbase.cpp
--- ./wavi/src/netbase.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netbase.cpp	Sun Mar 25 19:57:55 2018
@@ -4,7 +4,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #ifdef HAVE_CONFIG_H
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "netbase.h"
diff -r -u ./wavi/src/netbase.h ./pptp/src/netbase.h
--- ./wavi/src/netbase.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netbase.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_NETBASE_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "compat.h"
diff -r -u ./wavi/src/netfulfilledman.cpp ./pptp/src/netfulfilledman.cpp
--- ./wavi/src/netfulfilledman.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netfulfilledman.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/netfulfilledman.h ./pptp/src/netfulfilledman.h
--- ./wavi/src/netfulfilledman.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/netfulfilledman.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/noui.cpp ./pptp/src/noui.cpp
--- ./wavi/src/noui.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/noui.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -52,7 +52,7 @@
 
 void noui_connect()
 {
-    // Connect wavid signal handlers
+    // Connect pptpd signal handlers
     uiInterface.ThreadSafeMessageBox.connect(noui_ThreadSafeMessageBox);
     uiInterface.ThreadSafeQuestion.connect(noui_ThreadSafeQuestion);
     uiInterface.InitMessage.connect(noui_InitMessage);
diff -r -u ./wavi/src/pow.cpp ./pptp/src/pow.cpp
--- ./wavi/src/pow.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/pow.cpp	Sun Mar 25 19:57:55 2018
@@ -81,7 +81,7 @@
 }
 
 unsigned int static DarkGravityWave(const CBlockIndex* pindexLast, const Consensus::Params& params) {
-    /* current difficulty formula, wavi - DarkGravity v3, written by Evan Duffield - evan@wavi.org */
+    /* current difficulty formula, pptp - DarkGravity v3, written by Evan Duffield - evan@pptp.org */
     const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);
     int64_t nPastBlocks = 12;
 
Only in ./pptp/src: pptp-cli-res.rc
Only in ./pptp/src: pptp-cli.cpp
Only in ./pptp/src: pptp-tx-res.rc
Only in ./pptp/src: pptp-tx.cpp
Only in ./pptp/src: pptpd-res.rc
Only in ./pptp/src: pptpd.cpp
diff -r -u ./wavi/src/primitives/transaction.h ./pptp/src/primitives/transaction.h
--- ./wavi/src/primitives/transaction.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/primitives/transaction.h	Sun Mar 25 20:38:15 2018
@@ -167,13 +167,13 @@
 
     CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const
     {
-        // "Dust" is defined in terms of CTransaction::minRelayTxFee, which has units puffs-per-kilobyte.
+        // "Dust" is defined in terms of CTransaction::minRelayTxFee, which has units pteps-per-kilobyte.
         // If you'd pay more than 1/3 in fees to spend something, then we consider it dust.
         // A typical spendable txout is 34 bytes big, and will need a CTxIn of at least 148 bytes to spend
-        // i.e. total is 148 + 32 = 182 bytes. Default -minrelaytxfee is 10000 puffs per kB
-        // and that means that fee per spendable txout is 182 * 10000 / 1000 = 1820 puffs.
-        // So dust is a spendable txout less than 546 * minRelayTxFee / 1000 (in puffs)
-        // i.e. 1820 * 3 = 5460 puffs with default -minrelaytxfee = minRelayTxFee = 10000 puffs per kB.
+        // i.e. total is 148 + 32 = 182 bytes. Default -minrelaytxfee is 10000 pteps per kB
+        // and that means that fee per spendable txout is 182 * 10000 / 1000 = 1820 pteps.
+        // So dust is a spendable txout less than 546 * minRelayTxFee / 1000 (in pteps)
+        // i.e. 1820 * 3 = 5460 pteps with default -minrelaytxfee = minRelayTxFee = 10000 pteps per kB.
         if (scriptPubKey.IsUnspendable())
             return 0;
 
diff -r -u ./wavi/src/privatesend-client.cpp ./pptp/src/privatesend-client.cpp
--- ./wavi/src/privatesend-client.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-client.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "privatesend-client.h"
@@ -21,7 +21,7 @@
 void CPrivateSendClient::ProcessMessage(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
     if(fMasterNode) return;
-    if(fLiteMode) return; // ignore all Wavi related functionality
+    if(fLiteMode) return; // ignore all Pptp related functionality
     if(!masternodeSync.IsBlockchainSynced()) return;
 
     if(strCommand == NetMsgType::DSQUEUE) {
@@ -1392,7 +1392,7 @@
 //TODO: Rename/move to core
 void ThreadCheckPrivateSendClient(CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
     if(fMasterNode) return; // no client-side mixing on masternodes
 
     static bool fOneThread;
@@ -1400,7 +1400,7 @@
     fOneThread = true;
 
     // Make this thread recognisable as the PrivateSend thread
-    RenameThread("wavi-ps-client");
+    RenameThread("pptp-ps-client");
 
     unsigned int nTick = 0;
     unsigned int nDoAutoNextRun = nTick + PRIVATESEND_AUTO_TIMEOUT_MIN;
diff -r -u ./wavi/src/privatesend-client.h ./pptp/src/privatesend-client.h
--- ./wavi/src/privatesend-client.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-client.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/privatesend-server.cpp ./pptp/src/privatesend-server.cpp
--- ./wavi/src/privatesend-server.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-server.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "privatesend-server.h"
@@ -19,7 +19,7 @@
 void CPrivateSendServer::ProcessMessage(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
     if(!fMasterNode) return;
-    if(fLiteMode) return; // ignore all Wavi related functionality
+    if(fLiteMode) return; // ignore all Pptp related functionality
     if(!masternodeSync.IsBlockchainSynced()) return;
 
     if(strCommand == NetMsgType::DSACCEPT) {
@@ -463,7 +463,7 @@
 
     Being that mixing has "no fees" we need to have some kind of cost associated
     with using it to stop abuse. Otherwise it could serve as an attack vector and
-    allow endless transaction that would bloat Wavi and make it unusable. To
+    allow endless transaction that would bloat Pptp and make it unusable. To
     stop these kinds of attacks 1 in 10 successful transactions are charged. This
     adds up to a cost of 0.001DRK per transaction on average.
 */
@@ -872,14 +872,14 @@
 //TODO: Rename/move to core
 void ThreadCheckPrivateSendServer(CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
 
     static bool fOneThread;
     if(fOneThread) return;
     fOneThread = true;
 
     // Make this thread recognisable as the PrivateSend thread
-    RenameThread("wavi-ps-server");
+    RenameThread("pptp-ps-server");
 
     unsigned int nTick = 0;
 
diff -r -u ./wavi/src/privatesend-server.h ./pptp/src/privatesend-server.h
--- ./wavi/src/privatesend-server.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-server.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/privatesend-util.cpp ./pptp/src/privatesend-util.cpp
--- ./wavi/src/privatesend-util.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-util.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "privatesend-util.h"
diff -r -u ./wavi/src/privatesend-util.h ./pptp/src/privatesend-util.h
--- ./wavi/src/privatesend-util.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend-util.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/privatesend.cpp ./pptp/src/privatesend.cpp
--- ./wavi/src/privatesend.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "privatesend.h"
@@ -306,10 +306,10 @@
 bool CPrivateSend::GetDenominationsBits(int nDenom, std::vector<int> &vecBitsRet)
 {
     // ( bit on if present, 4 denominations example )
-    // bit 0 - 100WAVI+1
-    // bit 1 - 10WAVI+1
-    // bit 2 - 1WAVI+1
-    // bit 3 - .1WAVI+1
+    // bit 0 - 100PPTP+1
+    // bit 1 - 10PPTP+1
+    // bit 2 - 1PPTP+1
+    // bit 3 - .1PPTP+1
 
     int nMaxDenoms = vecStandardDenominations.size();
 
@@ -438,14 +438,14 @@
 //TODO: Rename/move to core
 void ThreadCheckPrivateSend(CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
 
     static bool fOneThread;
     if(fOneThread) return;
     fOneThread = true;
 
     // Make this thread recognisable as the PrivateSend thread
-    RenameThread("wavi-ps");
+    RenameThread("pptp-ps");
 
     unsigned int nTick = 0;
 
diff -r -u ./wavi/src/privatesend.h ./pptp/src/privatesend.h
--- ./wavi/src/privatesend.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/privatesend.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -325,7 +325,7 @@
     static std::vector<CAmount> GetStandardDenominations() { return vecStandardDenominations; }
     static CAmount GetSmallestDenomination() { return vecStandardDenominations.back(); }
 
-    /// Get the denominations for a specific amount of wavi.
+    /// Get the denominations for a specific amount of pptp.
     static int GetDenominationsByAmounts(const std::vector<CAmount>& vecAmount);
 
     static bool IsDenominatedAmount(CAmount nInputAmount);
diff -r -u ./wavi/src/protocol.cpp ./pptp/src/protocol.cpp
--- ./wavi/src/protocol.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/protocol.cpp	Sun Mar 25 19:51:36 2018
@@ -35,7 +35,7 @@
 const char *FILTERCLEAR="filterclear";
 const char *REJECT="reject";
 const char *SENDHEADERS="sendheaders";
-// Wavi message types
+// Pptp message types
 const char *TXLOCKREQUEST="ix";
 const char *TXLOCKVOTE="txlvote";
 const char *SPORK="spork";
@@ -73,7 +73,7 @@
     NetMsgType::TX,
     NetMsgType::BLOCK,
     "filtered block", // Should never occur
-    // Wavi message types
+    // Pptp message types
     // NOTE: include non-implmented here, we must keep this list in sync with enum in protocol.h
     NetMsgType::TXLOCKREQUEST,
     NetMsgType::TXLOCKVOTE,
@@ -119,7 +119,7 @@
     NetMsgType::FILTERCLEAR,
     NetMsgType::REJECT,
     NetMsgType::SENDHEADERS,
-    // Wavi message types
+    // Pptp message types
     // NOTE: do NOT include non-implmented here, we want them to be "Unknown command" in ProcessMessage()
     NetMsgType::TXLOCKREQUEST,
     NetMsgType::TXLOCKVOTE,
diff -r -u ./wavi/src/protocol.h ./pptp/src/protocol.h
--- ./wavi/src/protocol.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/protocol.h	Sun Mar 25 19:51:36 2018
@@ -219,7 +219,7 @@
  */
 extern const char *SENDHEADERS;
 
-// Wavi message types
+// Pptp message types
 // NOTE: do NOT declare non-implmented here, we don't want them to be exposed to the outside
 // TODO: add description
 extern const char *TXLOCKREQUEST;
@@ -254,15 +254,15 @@
     // Nothing
     NODE_NONE = 0,
     // NODE_NETWORK means that the node is capable of serving the block chain. It is currently
-    // set by all Wavi Core nodes, and is unset by SPV clients or other peers that just want
+    // set by all Pptp Core nodes, and is unset by SPV clients or other peers that just want
     // network services but don't provide them.
     NODE_NETWORK = (1 << 0),
     // NODE_GETUTXO means the node is capable of responding to the getutxo protocol request.
-    // Wavi Core does not support this but a patch set called Bitcoin XT does.
+    // Pptp Core does not support this but a patch set called Bitcoin XT does.
     // See BIP 64 for details on how this is implemented.
     NODE_GETUTXO = (1 << 1),
     // NODE_BLOOM means the node is capable and willing to handle bloom-filtered connections.
-    // Wavi Core nodes used to support this by default, without advertising this bit,
+    // Pptp Core nodes used to support this by default, without advertising this bit,
     // but no longer do as of protocol version 70201 (= NO_BLOOM_VERSION)
     NODE_BLOOM = (1 << 2),
 
@@ -345,7 +345,7 @@
     // Nodes may always request a MSG_FILTERED_BLOCK in a getdata, however,
     // MSG_FILTERED_BLOCK should not appear in any invs except as a part of getdata.
     MSG_FILTERED_BLOCK,
-    // Wavi message types
+    // Pptp message types
     // NOTE: declare non-implmented here, we must keep this enum consistent and backwards compatible
     MSG_TXLOCK_REQUEST,
     MSG_TXLOCK_VOTE,
diff -r -u ./wavi/src/qt/addressbookpage.cpp ./pptp/src/qt/addressbookpage.cpp
--- ./wavi/src/qt/addressbookpage.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/addressbookpage.cpp	Sun Mar 25 20:14:31 2018
@@ -1,10 +1,10 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "addressbookpage.h"
@@ -68,11 +68,11 @@
     switch(tab)
     {
     case SendingTab:
-        ui->labelExplanation->setText(tr("These are your Wavi addresses for sending payments. Always check the amount and the receiving address before sending coins."));
+        ui->labelExplanation->setText(tr("These are your Pptp addresses for sending payments. Always check the amount and the receiving address before sending coins."));
         ui->deleteAddress->setVisible(true);
         break;
     case ReceivingTab:
-        ui->labelExplanation->setText(tr("These are your Wavi addresses for receiving payments. It is recommended to use a new receiving address for each transaction."));
+        ui->labelExplanation->setText(tr("These are your Pptp addresses for receiving payments. It is recommended to use a new receiving address for each transaction."));
         ui->deleteAddress->setVisible(false);
         break;
     }
diff -r -u ./wavi/src/qt/addresstablemodel.cpp ./pptp/src/qt/addresstablemodel.cpp
--- ./wavi/src/qt/addresstablemodel.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/addresstablemodel.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -339,7 +339,7 @@
 void AddressTableModel::updateEntry(const QString &address,
         const QString &label, bool isMine, const QString &purpose, int status)
 {
-    // Update address book model from Wavi core
+    // Update address book model from Pptp core
     priv->updateEntry(address, label, isMine, purpose, status);
 }
 
diff -r -u ./wavi/src/qt/askpassphrasedialog.cpp ./pptp/src/qt/askpassphrasedialog.cpp
--- ./wavi/src/qt/askpassphrasedialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/askpassphrasedialog.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -111,7 +111,7 @@
             break;
         }
         QMessageBox::StandardButton retval = QMessageBox::question(this, tr("Confirm wallet encryption"),
-                 tr("Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR WAVI</b>!") + "<br><br>" + tr("Are you sure you wish to encrypt your wallet?"),
+                 tr("Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR PPTP</b>!") + "<br><br>" + tr("Are you sure you wish to encrypt your wallet?"),
                  QMessageBox::Yes|QMessageBox::Cancel,
                  QMessageBox::Cancel);
         if(retval == QMessageBox::Yes)
@@ -122,9 +122,9 @@
                 {
                     QMessageBox::warning(this, tr("Wallet encrypted"),
                                          "<qt>" +
-                                         tr("Wavi Core will close now to finish the encryption process. "
+                                         tr("Pptp Core will close now to finish the encryption process. "
                                          "Remember that encrypting your wallet cannot fully protect "
-                                         "your wavis from being stolen by malware infecting your computer.") +
+                                         "your pptps from being stolen by malware infecting your computer.") +
                                          "<br><br><b>" +
                                          tr("IMPORTANT: Any previous backups you have made of your wallet file "
                                          "should be replaced with the newly generated, encrypted wallet file. "
diff -r -u ./wavi/src/qt/bitcoinaddressvalidator.cpp ./pptp/src/qt/bitcoinaddressvalidator.cpp
--- ./wavi/src/qt/bitcoinaddressvalidator.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoinaddressvalidator.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -89,7 +89,7 @@
 QValidator::State BitcoinAddressCheckValidator::validate(QString &input, int &pos) const
 {
     Q_UNUSED(pos);
-    // Validate the passed Wavi address
+    // Validate the passed Pptp address
     CBitcoinAddress addr(input.toStdString());
     if (addr.IsValid())
         return QValidator::Acceptable;
diff -r -u ./wavi/src/qt/bitcoinamountfield.cpp ./pptp/src/qt/bitcoinamountfield.cpp
--- ./wavi/src/qt/bitcoinamountfield.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoinamountfield.cpp	Sun Mar 25 19:46:14 2018
@@ -24,7 +24,7 @@
 public:
     explicit AmountSpinBox(QWidget *parent):
         QAbstractSpinBox(parent),
-        currentUnit(BitcoinUnits::WAVI),
+        currentUnit(BitcoinUnits::PPTP),
         singleStep(100000) // satoshis
     {
         setAlignment(Qt::AlignRight);
@@ -99,7 +99,7 @@
 
             const QFontMetrics fm(fontMetrics());
             int h = lineEdit()->minimumSizeHint().height();
-            int w = fm.width(BitcoinUnits::format(BitcoinUnits::WAVI, BitcoinUnits::maxMoney(), false, BitcoinUnits::separatorAlways));
+            int w = fm.width(BitcoinUnits::format(BitcoinUnits::PPTP, BitcoinUnits::maxMoney(), false, BitcoinUnits::separatorAlways));
             w += 2; // cursor blinking space
 
             QStyleOptionSpinBox opt;
diff -r -u ./wavi/src/qt/bitcoingui.cpp ./pptp/src/qt/bitcoingui.cpp
--- ./wavi/src/qt/bitcoingui.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoingui.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -127,7 +127,7 @@
 
     GUIUtil::restoreWindowGeometry("nWindow", QSize(850, 550), this);
 
-    QString windowTitle = tr("Wavi Core") + " - ";
+    QString windowTitle = tr("Pptp Core") + " - ";
 #ifdef ENABLE_WALLET
     /* if compiled with wallet support, -disablewallet can still disable the wallet */
     enableWallet = !GetBoolArg("-disablewallet", false);
@@ -297,7 +297,7 @@
     tabGroup->addAction(overviewAction);
 
     sendCoinsAction = new QAction(QIcon(":/icons/" + theme + "/send"), tr("&Send"), this);
-    sendCoinsAction->setStatusTip(tr("Send coins to a Wavi address"));
+    sendCoinsAction->setStatusTip(tr("Send coins to a Pptp address"));
     sendCoinsAction->setToolTip(sendCoinsAction->statusTip());
     sendCoinsAction->setCheckable(true);
 #ifdef Q_OS_MAC
@@ -312,7 +312,7 @@
     sendCoinsMenuAction->setToolTip(sendCoinsMenuAction->statusTip());
 
     receiveCoinsAction = new QAction(QIcon(":/icons/" + theme + "/receiving_addresses"), tr("&Receive"), this);
-    receiveCoinsAction->setStatusTip(tr("Request payments (generates QR codes and wavi: URIs)"));
+    receiveCoinsAction->setStatusTip(tr("Request payments (generates QR codes and pptp: URIs)"));
     receiveCoinsAction->setToolTip(receiveCoinsAction->statusTip());
     receiveCoinsAction->setCheckable(true);
 #ifdef Q_OS_MAC
@@ -374,15 +374,15 @@
     quitAction->setStatusTip(tr("Quit application"));
     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));
     quitAction->setMenuRole(QAction::QuitRole);
-    aboutAction = new QAction(QIcon(":/icons/" + theme + "/about"), tr("&About Wavi Core"), this);
-    aboutAction->setStatusTip(tr("Show information about Wavi Core"));
+    aboutAction = new QAction(QIcon(":/icons/" + theme + "/about"), tr("&About Pptp Core"), this);
+    aboutAction->setStatusTip(tr("Show information about Pptp Core"));
     aboutAction->setMenuRole(QAction::AboutRole);
     aboutAction->setEnabled(false);
     aboutQtAction = new QAction(QIcon(":/icons/" + theme + "/about_qt"), tr("About &Qt"), this);
     aboutQtAction->setStatusTip(tr("Show information about Qt"));
     aboutQtAction->setMenuRole(QAction::AboutQtRole);
     optionsAction = new QAction(QIcon(":/icons/" + theme + "/options"), tr("&Options..."), this);
-    optionsAction->setStatusTip(tr("Modify configuration options for Wavi Core"));
+    optionsAction->setStatusTip(tr("Modify configuration options for Pptp Core"));
     optionsAction->setMenuRole(QAction::PreferencesRole);
     optionsAction->setEnabled(false);
     toggleHideAction = new QAction(QIcon(":/icons/" + theme + "/about"), tr("&Show / Hide"), this);
@@ -399,9 +399,9 @@
     unlockWalletAction->setToolTip(tr("Unlock wallet"));
     lockWalletAction = new QAction(tr("&Lock Wallet"), this);
     signMessageAction = new QAction(QIcon(":/icons/" + theme + "/edit"), tr("Sign &message..."), this);
-    signMessageAction->setStatusTip(tr("Sign messages with your Wavi addresses to prove you own them"));
+    signMessageAction->setStatusTip(tr("Sign messages with your Pptp addresses to prove you own them"));
     verifyMessageAction = new QAction(QIcon(":/icons/" + theme + "/transaction_0"), tr("&Verify message..."), this);
-    verifyMessageAction->setStatusTip(tr("Verify messages to ensure they were signed with specified Wavi addresses"));
+    verifyMessageAction->setStatusTip(tr("Verify messages to ensure they were signed with specified Pptp addresses"));
 
     openInfoAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_MessageBoxInformation), tr("&Information"), this);
     openInfoAction->setStatusTip(tr("Show diagnostic information"));
@@ -432,11 +432,11 @@
     usedReceivingAddressesAction->setStatusTip(tr("Show the list of used receiving addresses and labels"));
 
     openAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_DirOpenIcon), tr("Open &URI..."), this);
-    openAction->setStatusTip(tr("Open a wavi: URI or payment request"));
+    openAction->setStatusTip(tr("Open a pptp: URI or payment request"));
 
     showHelpMessageAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_MessageBoxInformation), tr("&Command-line options"), this);
     showHelpMessageAction->setMenuRole(QAction::NoRole);
-    showHelpMessageAction->setStatusTip(tr("Show the Wavi Core help message to get a list with possible Wavi Core command-line options"));
+    showHelpMessageAction->setStatusTip(tr("Show the Pptp Core help message to get a list with possible Pptp Core command-line options"));
 
     showPrivateSendHelpAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_MessageBoxInformation), tr("&PrivateSend information"), this);
     showPrivateSendHelpAction->setMenuRole(QAction::NoRole);
@@ -722,7 +722,7 @@
 void BitcoinGUI::createTrayIcon(const NetworkStyle *networkStyle)
 {
     trayIcon = new QSystemTrayIcon(this);
-    QString toolTip = tr("Wavi Core client") + " " + networkStyle->getTitleAddText();
+    QString toolTip = tr("Pptp Core client") + " " + networkStyle->getTitleAddText();
     trayIcon->setToolTip(toolTip);
     trayIcon->setIcon(networkStyle->getTrayAndWindowIcon());
     trayIcon->hide();
@@ -922,7 +922,7 @@
     }
 
     if (clientModel->getNetworkActive()) {
-        labelConnectionsIcon->setToolTip(tr("%n active connection(s) to Wavi network", "", count));
+        labelConnectionsIcon->setToolTip(tr("%n active connection(s) to Pptp network", "", count));
     } else {
         labelConnectionsIcon->setToolTip(tr("Network activity disabled"));
         icon = ":/icons/" + theme + "/network_disabled";
@@ -1116,7 +1116,7 @@
 
 void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style, bool *ret)
 {
-    QString strTitle = tr("Wavi Core"); // default title
+    QString strTitle = tr("Pptp Core"); // default title
     // Default to information icon
     int nMBoxIcon = QMessageBox::Information;
     int nNotifyIcon = Notificator::Information;
@@ -1142,7 +1142,7 @@
             break;
         }
     }
-    // Append title to "Wavi Core - "
+    // Append title to "Pptp Core - "
     if (!msgType.isEmpty())
         strTitle += " - " + msgType;
 
diff -r -u ./wavi/src/qt/bitcoingui.h ./pptp/src/qt/bitcoingui.h
--- ./wavi/src/qt/bitcoingui.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoingui.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_QT_BITCOINGUI_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "amount.h"
@@ -246,7 +246,7 @@
     void showPeers();
     void showRepair();
 
-    /** Open external (default) editor with wavi.conf */
+    /** Open external (default) editor with pptp.conf */
     void showConfEditor();
     /** Open external (default) editor with masternode.conf */
     void showMNConfEditor();
diff -r -u ./wavi/src/qt/bitcoinunits.cpp ./pptp/src/qt/bitcoinunits.cpp
--- ./wavi/src/qt/bitcoinunits.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoinunits.cpp	Sun Mar 25 20:38:15 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -19,10 +19,10 @@
 QList<BitcoinUnits::Unit> BitcoinUnits::availableUnits()
 {
     QList<BitcoinUnits::Unit> unitlist;
-    unitlist.append(WAVI);
-    unitlist.append(mWAVI);
-    unitlist.append(uWAVI);
-    unitlist.append(puffs);
+    unitlist.append(PPTP);
+    unitlist.append(mPPTP);
+    unitlist.append(uPPTP);
+    unitlist.append(pteps);
     return unitlist;
 }
 
@@ -30,10 +30,10 @@
 {
     switch(unit)
     {
-    case WAVI:
-    case mWAVI:
-    case uWAVI:
-    case puffs:
+    case PPTP:
+    case mPPTP:
+    case uPPTP:
+    case pteps:
         return true;
     default:
         return false;
@@ -46,10 +46,10 @@
     {
         switch(unit)
         {
-            case WAVI: return QString("WAVI");
-            case mWAVI: return QString("mWAVI");
-            case uWAVI: return QString::fromUtf8("μWAVI");
-            case puffs: return QString("puffs");
+            case PPTP: return QString("PPTP");
+            case mPPTP: return QString("mPPTP");
+            case uPPTP: return QString::fromUtf8("μPPTP");
+            case pteps: return QString("pteps");
             default: return QString("???");
         }
     }
@@ -57,10 +57,10 @@
     {
         switch(unit)
         {
-            case WAVI: return QString("tWAVI");
-            case mWAVI: return QString("mtWAVI");
-            case uWAVI: return QString::fromUtf8("μtWAVI");
-            case puffs: return QString("tpuffs");
+            case PPTP: return QString("tPPTP");
+            case mPPTP: return QString("mtPPTP");
+            case uPPTP: return QString::fromUtf8("μtPPTP");
+            case pteps: return QString("tpteps");
             default: return QString("???");
         }
     }
@@ -72,10 +72,10 @@
     {
         switch(unit)
         {
-            case WAVI: return QString("Wavi");
-            case mWAVI: return QString("Milli-Wavi (1 / 1" THIN_SP_UTF8 "000)");
-            case uWAVI: return QString("Micro-Wavi (1 / 1" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
-            case puffs: return QString("Ten Nano-Wavi (1 / 100" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
+            case PPTP: return QString("Pptp");
+            case mPPTP: return QString("Milli-Pptp (1 / 1" THIN_SP_UTF8 "000)");
+            case uPPTP: return QString("Micro-Pptp (1 / 1" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
+            case pteps: return QString("Ten Nano-Pptp (1 / 100" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
             default: return QString("???");
         }
     }
@@ -83,10 +83,10 @@
     {
         switch(unit)
         {
-            case WAVI: return QString("TestWavis");
-            case mWAVI: return QString("Milli-TestWavi (1 / 1" THIN_SP_UTF8 "000)");
-            case uWAVI: return QString("Micro-TestWavi (1 / 1" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
-            case puffs: return QString("Ten Nano-TestWavi (1 / 100" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
+            case PPTP: return QString("TestPptps");
+            case mPPTP: return QString("Milli-TestPptp (1 / 1" THIN_SP_UTF8 "000)");
+            case uPPTP: return QString("Micro-TestPptp (1 / 1" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
+            case pteps: return QString("Ten Nano-TestPptp (1 / 100" THIN_SP_UTF8 "000" THIN_SP_UTF8 "000)");
             default: return QString("???");
         }
     }
@@ -96,10 +96,10 @@
 {
     switch(unit)
     {
-    case WAVI:  return 100000000;
-    case mWAVI: return 100000;
-    case uWAVI: return 100;
-    case puffs: return 1;
+    case PPTP:  return 100000000;
+    case mPPTP: return 100000;
+    case uPPTP: return 100;
+    case pteps: return 1;
     default:   return 100000000;
     }
 }
@@ -108,10 +108,10 @@
 {
     switch(unit)
     {
-    case WAVI: return 8;
-    case mWAVI: return 5;
-    case uWAVI: return 2;
-    case puffs: return 0;
+    case PPTP: return 8;
+    case mPPTP: return 5;
+    case uPPTP: return 2;
+    case pteps: return 0;
     default: return 0;
     }
 }
diff -r -u ./wavi/src/qt/bitcoinunits.h ./pptp/src/qt/bitcoinunits.h
--- ./wavi/src/qt/bitcoinunits.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/bitcoinunits.h	Sun Mar 25 20:38:15 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -42,7 +42,7 @@
 #define THIN_SP_UTF8 REAL_THIN_SP_UTF8
 #define THIN_SP_HTML HTML_HACK_SP
 
-/** Wavi unit definitions. Encapsulates parsing and formatting
+/** Pptp unit definitions. Encapsulates parsing and formatting
    and serves as list model for drop-down selection boxes.
 */
 class BitcoinUnits: public QAbstractListModel
@@ -52,15 +52,15 @@
 public:
     explicit BitcoinUnits(QObject *parent);
 
-    /** Wavi units.
+    /** Pptp units.
       @note Source: https://en.bitcoin.it/wiki/Units . Please add only sensible ones
      */
     enum Unit
     {
-        WAVI,
-        mWAVI,
-        uWAVI,
-        puffs
+        PPTP,
+        mPPTP,
+        uPPTP,
+        pteps
     };
 
     enum SeparatorStyle
diff -r -u ./wavi/src/qt/clientmodel.cpp ./pptp/src/qt/clientmodel.cpp
--- ./wavi/src/qt/clientmodel.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/clientmodel.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/qt/clientmodel.h ./pptp/src/qt/clientmodel.h
--- ./wavi/src/qt/clientmodel.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/clientmodel.h	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -38,7 +38,7 @@
     CONNECTIONS_ALL  = (CONNECTIONS_IN | CONNECTIONS_OUT),
 };
 
-/** Model for Wavi network client. */
+/** Model for Pptp network client. */
 class ClientModel : public QObject
 {
     Q_OBJECT
diff -r -u ./wavi/src/qt/coincontroldialog.cpp ./pptp/src/qt/coincontroldialog.cpp
--- ./wavi/src/qt/coincontroldialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/coincontroldialog.cpp	Sun Mar 25 20:38:15 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -625,7 +625,7 @@
     }
 
     // actually update labels
-    int nDisplayUnit = BitcoinUnits::WAVI;
+    int nDisplayUnit = BitcoinUnits::PPTP;
     if (model && model->getOptionsModel())
         nDisplayUnit = model->getOptionsModel()->getDisplayUnit();
 
@@ -672,7 +672,7 @@
     else {
         dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateSmartFee(nTxConfirmTarget).GetFeePerK()) / 1000;
     }
-    QString toolTip4 = tr("Can vary +/- %1 puff(s) per input.").arg(dFeeVary);
+    QString toolTip4 = tr("Can vary +/- %1 ptep(s) per input.").arg(dFeeVary);
 
     l3->setToolTip(toolTip4);
     l4->setToolTip(toolTip4);
@@ -753,7 +753,7 @@
             {
                 sAddress = QString::fromStdString(CBitcoinAddress(outputAddress).ToString());
 
-                // if listMode or change => show wavi address. In tree mode, address is not shown again for direct wallet address outputs
+                // if listMode or change => show pptp address. In tree mode, address is not shown again for direct wallet address outputs
                 if (!treeMode || (!(sAddress == sWalletAddress)))
                     itemOutput->setText(COLUMN_ADDRESS, sAddress);
 
diff -r -u ./wavi/src/qt/darksendconfig.cpp ./pptp/src/qt/darksendconfig.cpp
--- ./wavi/src/qt/darksendconfig.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/darksendconfig.cpp	Sun Mar 25 19:51:36 2018
@@ -42,7 +42,7 @@
         model->getOptionsModel()->getDisplayUnit(), 1000 * COIN));
     QMessageBox::information(this, tr("PrivateSend Configuration"),
         tr(
-            "PrivateSend was successfully set to basic (%1 and 2 rounds). You can change this at any time by opening Wavi's configuration screen."
+            "PrivateSend was successfully set to basic (%1 and 2 rounds). You can change this at any time by opening Pptp's configuration screen."
         ).arg(strAmount)
     );
 
@@ -57,7 +57,7 @@
         model->getOptionsModel()->getDisplayUnit(), 1000 * COIN));
     QMessageBox::information(this, tr("PrivateSend Configuration"),
         tr(
-            "PrivateSend was successfully set to high (%1 and 8 rounds). You can change this at any time by opening Wavi's configuration screen."
+            "PrivateSend was successfully set to high (%1 and 8 rounds). You can change this at any time by opening Pptp's configuration screen."
         ).arg(strAmount)
     );
 
@@ -72,7 +72,7 @@
         model->getOptionsModel()->getDisplayUnit(), 1000 * COIN));
     QMessageBox::information(this, tr("PrivateSend Configuration"),
         tr(
-            "PrivateSend was successfully set to maximum (%1 and 16 rounds). You can change this at any time by opening Wavi's configuration screen."
+            "PrivateSend was successfully set to maximum (%1 and 16 rounds). You can change this at any time by opening Pptp's configuration screen."
         ).arg(strAmount)
     );
 
diff -r -u ./wavi/src/qt/editaddressdialog.cpp ./pptp/src/qt/editaddressdialog.cpp
--- ./wavi/src/qt/editaddressdialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/editaddressdialog.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2013 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -108,7 +108,7 @@
             break;
         case AddressTableModel::INVALID_ADDRESS:
             QMessageBox::warning(this, windowTitle(),
-                tr("The entered address \"%1\" is not a valid Wavi address.").arg(ui->addressEdit->text()),
+                tr("The entered address \"%1\" is not a valid Pptp address.").arg(ui->addressEdit->text()),
                 QMessageBox::Ok, QMessageBox::Ok);
             break;
         case AddressTableModel::DUPLICATE_ADDRESS:
diff -r -u ./wavi/src/qt/forms/addressbookpage.ui ./pptp/src/qt/forms/addressbookpage.ui
--- ./wavi/src/qt/forms/addressbookpage.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/addressbookpage.ui	Sun Mar 25 19:57:55 2018
@@ -137,7 +137,7 @@
   </layout>
  </widget>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
 </ui>
diff -r -u ./wavi/src/qt/forms/coincontroldialog.ui ./pptp/src/qt/forms/coincontroldialog.ui
--- ./wavi/src/qt/forms/coincontroldialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/coincontroldialog.ui	Sun Mar 25 19:46:14 2018
@@ -132,7 +132,7 @@
           <enum>Qt::ActionsContextMenu</enum>
          </property>
          <property name="text">
-          <string notr="true">0.00 WAVI</string>
+          <string notr="true">0.00 PPTP</string>
          </property>
          <property name="textInteractionFlags">
           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -212,7 +212,7 @@
           <enum>Qt::ActionsContextMenu</enum>
          </property>
          <property name="text">
-          <string notr="true">0.00 WAVI</string>
+          <string notr="true">0.00 PPTP</string>
          </property>
          <property name="textInteractionFlags">
           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -257,7 +257,7 @@
           <enum>Qt::ActionsContextMenu</enum>
          </property>
          <property name="text">
-          <string notr="true">0.00 WAVI</string>
+          <string notr="true">0.00 PPTP</string>
          </property>
          <property name="textInteractionFlags">
           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -292,7 +292,7 @@
           <enum>Qt::ActionsContextMenu</enum>
          </property>
          <property name="text">
-          <string notr="true">0.00 WAVI</string>
+          <string notr="true">0.00 PPTP</string>
          </property>
          <property name="textInteractionFlags">
           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
diff -r -u ./wavi/src/qt/forms/darksendconfig.ui ./pptp/src/qt/forms/darksendconfig.ui
--- ./wavi/src/qt/forms/darksendconfig.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/darksendconfig.ui	Sun Mar 25 19:46:14 2018
@@ -75,7 +75,7 @@
     </rect>
    </property>
    <property name="text">
-    <string>Use 2 separate masternodes to mix funds up to 1000 WAVI</string>
+    <string>Use 2 separate masternodes to mix funds up to 1000 PPTP</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_3">
@@ -88,7 +88,7 @@
     </rect>
    </property>
    <property name="text">
-    <string>Use 8 separate masternodes to mix funds up to 1000 WAVI</string>
+    <string>Use 8 separate masternodes to mix funds up to 1000 PPTP</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_4">
@@ -114,7 +114,7 @@
     </rect>
    </property>
    <property name="text">
-    <string>This option is the quickest and will cost about ~0.025 WAVI to anonymize 1000 WAVI</string>
+    <string>This option is the quickest and will cost about ~0.025 PPTP to anonymize 1000 PPTP</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_7">
@@ -127,7 +127,7 @@
     </rect>
    </property>
    <property name="text">
-    <string>This option is moderately fast and will cost about 0.05 WAVI to anonymize 1000 WAVI</string>
+    <string>This option is moderately fast and will cost about 0.05 PPTP to anonymize 1000 PPTP</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_8">
@@ -153,7 +153,7 @@
     </rect>
    </property>
    <property name="text">
-    <string>0.1 WAVI per 1000 WAVI you anonymize.</string>
+    <string>0.1 PPTP per 1000 PPTP you anonymize.</string>
    </property>
   </widget>
   <widget class="Line" name="line">
diff -r -u ./wavi/src/qt/forms/debugwindow.ui ./pptp/src/qt/forms/debugwindow.ui
--- ./wavi/src/qt/forms/debugwindow.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/debugwindow.ui	Sun Mar 25 19:57:55 2018
@@ -406,7 +406,7 @@
          <item>
           <widget class="QPushButton" name="openDebugLogfileButton">
            <property name="toolTip">
-            <string>Open the Wavi Core debug log file from the current data directory. This can take a few seconds for large log files.</string>
+            <string>Open the Pptp Core debug log file from the current data directory. This can take a few seconds for large log files.</string>
            </property>
            <property name="text">
             <string>&amp;Open</string>
@@ -599,7 +599,7 @@
             <string/>
            </property>
            <property name="icon">
-            <iconset resource="../wavi.qrc">
+            <iconset resource="../pptp.qrc">
              <normaloff>:/icons/prompticon</normaloff>
              <disabledoff>:/icons/prompticon</disabledoff>:/icons/prompticon</iconset>
            </property>
@@ -1732,7 +1732,7 @@
   </customwidget>
  </customwidgets>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
 </ui>
diff -r -u ./wavi/src/qt/forms/helpmessagedialog.ui ./pptp/src/qt/forms/helpmessagedialog.ui
--- ./wavi/src/qt/forms/helpmessagedialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/helpmessagedialog.ui	Sun Mar 25 19:57:55 2018
@@ -17,7 +17,7 @@
    </size>
   </property>
   <property name="windowTitle">
-   <string notr="true">Wavi Core - Command-line options</string>
+   <string notr="true">Pptp Core - Command-line options</string>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout_2">
    <property name="spacing">
@@ -76,7 +76,7 @@
         <bool>false</bool>
        </property>
        <property name="pixmap">
-        <pixmap resource="../wavi.qrc">:/images/drkblue/about</pixmap>
+        <pixmap resource="../pptp.qrc">:/images/drkblue/about</pixmap>
        </property>
        <property name="scaledContents">
         <bool>false</bool>
@@ -172,7 +172,7 @@
   </layout>
  </widget>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections>
   <connection>
diff -r -u ./wavi/src/qt/forms/intro.ui ./pptp/src/qt/forms/intro.ui
--- ./wavi/src/qt/forms/intro.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/intro.ui	Sun Mar 25 19:51:37 2018
@@ -20,7 +20,7 @@
       <string notr="true">QLabel { font-style:italic; }</string>
      </property>
      <property name="text">
-      <string>Welcome to Wavi Core.</string>
+      <string>Welcome to Pptp Core.</string>
      </property>
      <property name="wordWrap">
       <bool>true</bool>
@@ -46,7 +46,7 @@
    <item>
     <widget class="QLabel" name="label_4">
      <property name="text">
-      <string>As this is the first time the program is launched, you can choose where Wavi Core will store its data.</string>
+      <string>As this is the first time the program is launched, you can choose where Pptp Core will store its data.</string>
      </property>
      <property name="wordWrap">
       <bool>true</bool>
@@ -56,7 +56,7 @@
    <item>
     <widget class="QLabel" name="sizeWarningLabel">
      <property name="text">
-      <string>Wavi Core will download and store a copy of the Wavi block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>
+      <string>Pptp Core will download and store a copy of the Pptp block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>
      </property>
      <property name="wordWrap">
       <bool>true</bool>
diff -r -u ./wavi/src/qt/forms/modaloverlay.ui ./pptp/src/qt/forms/modaloverlay.ui
--- ./wavi/src/qt/forms/modaloverlay.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/modaloverlay.ui	Sun Mar 25 19:51:37 2018
@@ -128,7 +128,7 @@
              <item>
               <widget class="QLabel" name="infoText">
                <property name="text">
-                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the Wavi network, as detailed below.</string>
+                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the Pptp network, as detailed below.</string>
                </property>
                <property name="textFormat">
                 <enum>Qt::RichText</enum>
@@ -147,7 +147,7 @@
                 </font>
                </property>
                <property name="text">
-                <string>Attempting to spend Wavi that are affected by not-yet-displayed transactions will not be accepted by the network.</string>
+                <string>Attempting to spend Pptp that are affected by not-yet-displayed transactions will not be accepted by the network.</string>
                </property>
                <property name="textFormat">
                 <enum>Qt::RichText</enum>
diff -r -u ./wavi/src/qt/forms/optionsdialog.ui ./pptp/src/qt/forms/optionsdialog.ui
--- ./wavi/src/qt/forms/optionsdialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/optionsdialog.ui	Sun Mar 25 19:57:55 2018
@@ -30,10 +30,10 @@
        <item>
         <widget class="QCheckBox" name="bitcoinAtStartup">
          <property name="toolTip">
-          <string>Automatically start Wavi Core after logging in to the system.</string>
+          <string>Automatically start Pptp Core after logging in to the system.</string>
          </property>
          <property name="text">
-          <string>&amp;Start Wavi Core on system login</string>
+          <string>&amp;Start Pptp Core on system login</string>
          </property>
         </widget>
        </item>
@@ -253,7 +253,7 @@
             <string notr="true"/>
            </property>
            <property name="text">
-            <string>Amount of Wavi to keep anonymized</string>
+            <string>Amount of Pptp to keep anonymized</string>
            </property>
           </widget>
          </item>
@@ -298,7 +298,7 @@
        <item>
         <widget class="QCheckBox" name="mapPortUpnp">
          <property name="toolTip">
-          <string>Automatically open the Wavi Core client port on the router. This only works when your router supports UPnP and it is enabled.</string>
+          <string>Automatically open the Pptp Core client port on the router. This only works when your router supports UPnP and it is enabled.</string>
          </property>
          <property name="text">
           <string>Map port using &amp;UPnP</string>
@@ -318,7 +318,7 @@
        <item>
         <widget class="QCheckBox" name="connectSocks">
          <property name="toolTip">
-          <string>Connect to the Wavi network through a SOCKS5 proxy.</string>
+          <string>Connect to the Pptp network through a SOCKS5 proxy.</string>
          </property>
          <property name="text">
           <string>&amp;Connect through SOCKS5 proxy (default proxy):</string>
@@ -505,7 +505,7 @@
        <item>
         <widget class="QCheckBox" name="connectSocksTor">
          <property name="toolTip">
-          <string>Connect to the Wavi network through a separate SOCKS5 proxy for Tor hidden services.</string>
+          <string>Connect to the Pptp network through a separate SOCKS5 proxy for Tor hidden services.</string>
          </property>
          <property name="text">
           <string>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</string>
@@ -681,7 +681,7 @@
          <item>
           <widget class="QValueComboBox" name="lang">
            <property name="toolTip">
-            <string>The user interface language can be set here. This setting will take effect after restarting Wavi Core.</string>
+            <string>The user interface language can be set here. This setting will take effect after restarting Pptp Core.</string>
            </property>
           </widget>
          </item>
@@ -703,7 +703,7 @@
          </property>
          <property name="text">
           <string>Language missing or translation incomplete? Help contributing translations here:
-https://www.transifex.com/projects/p/wavi/</string>
+https://www.transifex.com/projects/p/pptp/</string>
          </property>
          <property name="wordWrap">
           <bool>true</bool>
diff -r -u ./wavi/src/qt/forms/overviewpage.ui ./pptp/src/qt/forms/overviewpage.ui
--- ./wavi/src/qt/forms/overviewpage.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/overviewpage.ui	Sun Mar 25 19:51:57 2018
@@ -70,7 +70,7 @@
             <item>
              <widget class="QLabel" name="labelWalletStatus">
               <property name="toolTip">
-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Wavi network after a connection is established, but this process has not completed yet.</string>
+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Pptp network after a connection is established, but this process has not completed yet.</string>
               </property>
               <property name="styleSheet">
                <string notr="true">QLabel { color: red; }</string>
@@ -425,7 +425,7 @@
             <item>
              <widget class="QLabel" name="labelPrivateSendSyncStatus">
               <property name="toolTip">
-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Wavi network after a connection is established, but this process has not completed yet.</string>
+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Pptp network after a connection is established, but this process has not completed yet.</string>
               </property>
               <property name="styleSheet">
                <string notr="true">QLabel { color: red; }</string>
@@ -514,7 +514,7 @@
                </font>
               </property>
               <property name="text">
-               <string notr="true">0 WAVI</string>
+               <string notr="true">0 PPTP</string>
               </property>
              </widget>
             </item>
@@ -528,7 +528,7 @@
             <item row="3" column="1">
              <widget class="QLabel" name="labelAmountRounds">
               <property name="text">
-               <string>0 WAVI / 0 Rounds</string>
+               <string>0 PPTP / 0 Rounds</string>
               </property>
              </widget>
             </item>
@@ -683,7 +683,7 @@
             <item>
              <widget class="QLabel" name="labelTransactionsStatus">
               <property name="toolTip">
-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Wavi network after a connection is established, but this process has not completed yet.</string>
+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Pptp network after a connection is established, but this process has not completed yet.</string>
               </property>
               <property name="styleSheet">
                <string notr="true">QLabel { color: red; }</string>
diff -r -u ./wavi/src/qt/forms/receivecoinsdialog.ui ./pptp/src/qt/forms/receivecoinsdialog.ui
--- ./wavi/src/qt/forms/receivecoinsdialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/receivecoinsdialog.ui	Sun Mar 25 19:57:55 2018
@@ -48,7 +48,7 @@
         <item row="6" column="0">
          <widget class="QLabel" name="label_3">
           <property name="toolTip">
-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Wavi network.</string>
+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Pptp network.</string>
           </property>
           <property name="text">
            <string>&amp;Message:</string>
@@ -71,7 +71,7 @@
         <item row="6" column="2">
          <widget class="QLineEdit" name="reqMessage">
           <property name="toolTip">
-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened.&lt;br&gt;Note: The message will not be sent with the payment over the Wavi network.</string>
+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened.&lt;br&gt;Note: The message will not be sent with the payment over the Pptp network.</string>
           </property>
          </widget>
         </item>
@@ -326,7 +326,7 @@
   <tabstop>removeRequestButton</tabstop>
  </tabstops>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
 </ui>
diff -r -u ./wavi/src/qt/forms/sendcoinsdialog.ui ./pptp/src/qt/forms/sendcoinsdialog.ui
--- ./wavi/src/qt/forms/sendcoinsdialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/sendcoinsdialog.ui	Sun Mar 25 20:38:15 2018
@@ -324,7 +324,7 @@
                   <enum>Qt::ActionsContextMenu</enum>
                  </property>
                  <property name="text">
-                  <string notr="true">0.00 WAVI</string>
+                  <string notr="true">0.00 PPTP</string>
                  </property>
                  <property name="textInteractionFlags">
                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -404,7 +404,7 @@
                   <enum>Qt::ActionsContextMenu</enum>
                  </property>
                  <property name="text">
-                  <string notr="true">0.00 WAVI</string>
+                  <string notr="true">0.00 PPTP</string>
                  </property>
                  <property name="textInteractionFlags">
                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -455,7 +455,7 @@
                   <enum>Qt::ActionsContextMenu</enum>
                  </property>
                  <property name="text">
-                  <string notr="true">0.00 WAVI</string>
+                  <string notr="true">0.00 PPTP</string>
                  </property>
                  <property name="textInteractionFlags">
                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -484,7 +484,7 @@
                   <enum>Qt::ActionsContextMenu</enum>
                  </property>
                  <property name="text">
-                  <string notr="true">0.00 WAVI</string>
+                  <string notr="true">0.00 PPTP</string>
                  </property>
                  <property name="textInteractionFlags">
                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -826,7 +826,7 @@
                  <item>
                   <widget class="QRadioButton" name="radioCustomPerKilobyte">
                    <property name="toolTip">
-                    <string>If the custom fee is set to 1000 puffs and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 puffs in fee,&lt;br /&gt;while &quot;at least&quot; pays 1000 puffs. For transactions bigger than a kilobyte both pay by kilobyte.</string>
+                    <string>If the custom fee is set to 1000 pteps and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 pteps in fee,&lt;br /&gt;while &quot;at least&quot; pays 1000 pteps. For transactions bigger than a kilobyte both pay by kilobyte.</string>
                    </property>
                    <property name="text">
                     <string>per kilobyte</string>
@@ -842,7 +842,7 @@
                  <item>
                   <widget class="QRadioButton" name="radioCustomAtLeast">
                    <property name="toolTip">
-                    <string>If the custom fee is set to 1000 puffs and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 puffs in fee,&lt;br /&gt;while &quot;total at least&quot; pays 1000 puffs. For transactions bigger than a kilobyte both pay by kilobyte.</string>
+                    <string>If the custom fee is set to 1000 pteps and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 pteps in fee,&lt;br /&gt;while &quot;total at least&quot; pays 1000 pteps. For transactions bigger than a kilobyte both pay by kilobyte.</string>
                    </property>
                    <property name="text">
                     <string>total at least</string>
@@ -875,7 +875,7 @@
                  <item>
                   <widget class="QCheckBox" name="checkBoxMinimumFee">
                    <property name="toolTip">
-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks.&lt;br /&gt;But be aware that this can end up in a never confirming transaction once there is more demand for wavi transactions than the network can process.</string>
+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks.&lt;br /&gt;But be aware that this can end up in a never confirming transaction once there is more demand for pptp transactions than the network can process.</string>
                    </property>
                    <property name="text">
                     <string/>
@@ -888,7 +888,7 @@
                     <bool>true</bool>
                    </property>
                    <property name="toolTip">
-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks.&lt;br /&gt;But be aware that this can end up in a never confirming transaction once there is more demand for wavi transactions than the network can process.</string>
+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks.&lt;br /&gt;But be aware that this can end up in a never confirming transaction once there is more demand for pptp transactions than the network can process.</string>
                    </property>
                    <property name="text">
                     <string>(read the tooltip)</string>
@@ -1337,7 +1337,7 @@
           <cursorShape>IBeamCursor</cursorShape>
          </property>
          <property name="text">
-          <string notr="true">123.456 WAVI</string>
+          <string notr="true">123.456 PPTP</string>
          </property>
          <property name="textInteractionFlags">
           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
@@ -1364,7 +1364,7 @@
   </customwidget>
  </customwidgets>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
  <buttongroups>
diff -r -u ./wavi/src/qt/forms/sendcoinsentry.ui ./pptp/src/qt/forms/sendcoinsentry.ui
--- ./wavi/src/qt/forms/sendcoinsentry.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/sendcoinsentry.ui	Sun Mar 25 19:57:55 2018
@@ -57,7 +57,7 @@
       <item>
        <widget class="QValidatedLineEdit" name="payTo">
         <property name="toolTip">
-         <string>The Wavi address to send the payment to</string>
+         <string>The Pptp address to send the payment to</string>
         </property>
        </widget>
       </item>
@@ -158,7 +158,7 @@
       <item>
        <widget class="QCheckBox" name="checkboxSubtractFeeFromAmount">
         <property name="toolTip">
-         <string>The fee will be deducted from the amount being sent. The recipient will receive a lower amount of Wavi than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>
+         <string>The fee will be deducted from the amount being sent. The recipient will receive a lower amount of Pptp than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>
         </property>
         <property name="text">
          <string>S&amp;ubtract fee from amount</string>
@@ -180,7 +180,7 @@
     <item row="3" column="1">
      <widget class="QLabel" name="messageTextLabel">
       <property name="toolTip">
-       <string>A message that was attached to the wavi: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Wavi network.</string>
+       <string>A message that was attached to the pptp: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Pptp network.</string>
       </property>
       <property name="textFormat">
        <enum>Qt::PlainText</enum>
@@ -1249,7 +1249,7 @@
   <tabstop>deleteButton_s</tabstop>
  </tabstops>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
 </ui>
diff -r -u ./wavi/src/qt/forms/signverifymessagedialog.ui ./pptp/src/qt/forms/signverifymessagedialog.ui
--- ./wavi/src/qt/forms/signverifymessagedialog.ui	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/forms/signverifymessagedialog.ui	Sun Mar 25 19:57:55 2018
@@ -30,7 +30,7 @@
        <item>
         <widget class="QLabel" name="infoLabel_SM">
          <property name="text">
-          <string>You can sign messages/agreements with your addresses to prove you can receive Wavi sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>
+          <string>You can sign messages/agreements with your addresses to prove you can receive Pptp sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>
          </property>
          <property name="textFormat">
           <enum>Qt::PlainText</enum>
@@ -48,7 +48,7 @@
          <item>
           <widget class="QValidatedLineEdit" name="addressIn_SM">
            <property name="toolTip">
-            <string>The Wavi address to sign the message with</string>
+            <string>The Pptp address to sign the message with</string>
            </property>
           </widget>
          </item>
@@ -140,7 +140,7 @@
          <item>
           <widget class="QPushButton" name="signMessageButton_SM">
            <property name="toolTip">
-            <string>Sign the message to prove you own this Wavi address</string>
+            <string>Sign the message to prove you own this Pptp address</string>
            </property>
            <property name="text">
             <string>Sign &amp;Message</string>
@@ -238,7 +238,7 @@
          <item>
           <widget class="QValidatedLineEdit" name="addressIn_VM">
            <property name="toolTip">
-            <string>The Wavi address the message was signed with</string>
+            <string>The Pptp address the message was signed with</string>
            </property>
           </widget>
          </item>
@@ -271,7 +271,7 @@
          <item>
           <widget class="QPushButton" name="verifyMessageButton_VM">
            <property name="toolTip">
-            <string>Verify the message to ensure it was signed with the specified Wavi address</string>
+            <string>Verify the message to ensure it was signed with the specified Pptp address</string>
            </property>
            <property name="text">
             <string>Verify &amp;Message</string>
@@ -352,7 +352,7 @@
   </customwidget>
  </customwidgets>
  <resources>
-  <include location="../wavi.qrc"/>
+  <include location="../pptp.qrc"/>
  </resources>
  <connections/>
 </ui>
diff -r -u ./wavi/src/qt/guiconstants.h ./pptp/src/qt/guiconstants.h
--- ./wavi/src/qt/guiconstants.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/guiconstants.h	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -12,7 +12,7 @@
 /* AskPassphraseDialog -- Maximum passphrase length */
 static const int MAX_PASSPHRASE_SIZE = 1024;
 
-/* WaviGUI -- Size of icons in status bar */
+/* PptpGUI -- Size of icons in status bar */
 static const int STATUSBAR_ICONSIZE = 16;
 
 static const bool DEFAULT_SPLASHSCREEN = true;
@@ -49,9 +49,9 @@
 /* Number of frames in spinner animation */
 #define SPINNER_FRAMES 36
 
-#define QAPP_ORG_NAME "Wavi"
-#define QAPP_ORG_DOMAIN "wavi.org"
-#define QAPP_APP_NAME_DEFAULT "Wavi-Qt"
-#define QAPP_APP_NAME_TESTNET "Wavi-Qt-testnet"
+#define QAPP_ORG_NAME "Pptp"
+#define QAPP_ORG_DOMAIN "pptp.org"
+#define QAPP_APP_NAME_DEFAULT "Pptp-Qt"
+#define QAPP_APP_NAME_TESTNET "Pptp-Qt-testnet"
 
 #endif // BITCOIN_QT_GUICONSTANTS_H
diff -r -u ./wavi/src/qt/guiutil.cpp ./pptp/src/qt/guiutil.cpp
--- ./wavi/src/qt/guiutil.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/guiutil.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -117,7 +117,7 @@
 #if QT_VERSION >= 0x040700
     // We don't want translators to use own addresses in translations
     // and this is the only place, where this address is supplied.
-    widget->setPlaceholderText(QObject::tr("Enter a Wavi address (e.g. %1)").arg("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
+    widget->setPlaceholderText(QObject::tr("Enter a Pptp address (e.g. %1)").arg("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
 #endif
     widget->setValidator(new BitcoinAddressEntryValidator(parent));
     widget->setCheckValidator(new BitcoinAddressCheckValidator(parent));
@@ -134,8 +134,8 @@
 
 bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)
 {
-    // return if URI is not valid or is no wavi: URI
-    if(!uri.isValid() || uri.scheme() != QString("wavi"))
+    // return if URI is not valid or is no pptp: URI
+    if(!uri.isValid() || uri.scheme() != QString("pptp"))
         return false;
 
     SendCoinsRecipient rv;
@@ -184,7 +184,7 @@
         {
             if(!i->second.isEmpty())
             {
-                if(!BitcoinUnits::parse(BitcoinUnits::WAVI, i->second, &rv.amount))
+                if(!BitcoinUnits::parse(BitcoinUnits::PPTP, i->second, &rv.amount))
                 {
                     return false;
                 }
@@ -204,13 +204,13 @@
 
 bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)
 {
-    // Convert wavi:// to wavi:
+    // Convert pptp:// to pptp:
     //
-    //    Cannot handle this later, because wavi:// will cause Qt to see the part after // as host,
+    //    Cannot handle this later, because pptp:// will cause Qt to see the part after // as host,
     //    which will lower-case it (and thus invalidate the address).
-    if(uri.startsWith("wavi://", Qt::CaseInsensitive))
+    if(uri.startsWith("pptp://", Qt::CaseInsensitive))
     {
-        uri.replace(0, 7, "wavi:");
+        uri.replace(0, 7, "pptp:");
     }
     QUrl uriInstance(uri);
     return parseBitcoinURI(uriInstance, out);
@@ -218,12 +218,12 @@
 
 QString formatBitcoinURI(const SendCoinsRecipient &info)
 {
-    QString ret = QString("wavi:%1").arg(info.address);
+    QString ret = QString("pptp:%1").arg(info.address);
     int paramCount = 0;
 
     if (info.amount)
     {
-        ret += QString("?amount=%1").arg(BitcoinUnits::format(BitcoinUnits::WAVI, info.amount, false, BitcoinUnits::separatorNever));
+        ret += QString("?amount=%1").arg(BitcoinUnits::format(BitcoinUnits::PPTP, info.amount, false, BitcoinUnits::separatorNever));
         paramCount++;
     }
 
@@ -424,7 +424,7 @@
 {
     boost::filesystem::path pathConfig = GetConfigFile();
 
-    /* Open wavi.conf with the associated application */
+    /* Open pptp.conf with the associated application */
     if (boost::filesystem::exists(pathConfig))
         QDesktopServices::openUrl(QUrl::fromLocalFile(boostPathToQString(pathConfig)));
 }
@@ -634,15 +634,15 @@
 {
     std::string chain = ChainNameFromCommandLine();
     if (chain == CBaseChainParams::MAIN)
-        return GetSpecialFolderPath(CSIDL_STARTUP) / "Wavi Core.lnk";
+        return GetSpecialFolderPath(CSIDL_STARTUP) / "Pptp Core.lnk";
     if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = "testnet4"
-        return GetSpecialFolderPath(CSIDL_STARTUP) / "Wavi Core (testnet).lnk";
-    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf("Wavi Core (%s).lnk", chain);
+        return GetSpecialFolderPath(CSIDL_STARTUP) / "Pptp Core (testnet).lnk";
+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf("Pptp Core (%s).lnk", chain);
 }
 
 bool GetStartOnSystemStartup()
 {
-    // check for "Wavi Core*.lnk"
+    // check for "Pptp Core*.lnk"
     return boost::filesystem::exists(StartupShortcutPath());
 }
 
@@ -734,8 +734,8 @@
 {
     std::string chain = ChainNameFromCommandLine();
     if (chain == CBaseChainParams::MAIN)
-        return GetAutostartDir() / "wavicore.desktop";
-    return GetAutostartDir() / strprintf("wavicore-%s.lnk", chain);
+        return GetAutostartDir() / "pptpcore.desktop";
+    return GetAutostartDir() / strprintf("pptpcore-%s.lnk", chain);
 }
 
 bool GetStartOnSystemStartup()
@@ -774,13 +774,13 @@
         if (!optionFile.good())
             return false;
         std::string chain = ChainNameFromCommandLine();
-        // Write a wavicore.desktop file to the autostart directory:
+        // Write a pptpcore.desktop file to the autostart directory:
         optionFile << "[Desktop Entry]\n";
         optionFile << "Type=Application\n";
         if (chain == CBaseChainParams::MAIN)
-            optionFile << "Name=Wavi Core\n";
+            optionFile << "Name=Pptp Core\n";
         else
-            optionFile << strprintf("Name=Wavi Core (%s)\n", chain);
+            optionFile << strprintf("Name=Pptp Core (%s)\n", chain);
         optionFile << "Exec=" << pszExePath << strprintf(" -min -testnet=%d -regtest=%d\n", GetBoolArg("-testnet", false), GetBoolArg("-regtest", false));
         optionFile << "Terminal=false\n";
         optionFile << "Hidden=false\n";
@@ -799,7 +799,7 @@
 LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl);
 LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl)
 {
-    // loop through the list of startup items and try to find the Wavi Core app
+    // loop through the list of startup items and try to find the Pptp Core app
     CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(list, NULL);
     for(int i = 0; i < CFArrayGetCount(listSnapshot); i++) {
         LSSharedFileListItemRef item = (LSSharedFileListItemRef)CFArrayGetValueAtIndex(listSnapshot, i);
@@ -844,7 +844,7 @@
     LSSharedFileListItemRef foundItem = findStartupItemInList(loginItems, bitcoinAppUrl);
 
     if(fAutoStart && !foundItem) {
-        // add Wavi Core app to startup item list
+        // add Pptp Core app to startup item list
         LSSharedFileListInsertItemURL(loginItems, kLSSharedFileListItemBeforeFirst, NULL, NULL, bitcoinAppUrl, NULL, NULL);
     }
     else if(!fAutoStart && foundItem) {
diff -r -u ./wavi/src/qt/guiutil.h ./pptp/src/qt/guiutil.h
--- ./wavi/src/qt/guiutil.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/guiutil.h	Sun Mar 25 19:57:55 2018
@@ -30,7 +30,7 @@
 class QWidget;
 QT_END_NAMESPACE
 
-/** Utility functions used by the Wavi Qt UI.
+/** Utility functions used by the Pptp Qt UI.
  */
 namespace GUIUtil
 {
@@ -45,7 +45,7 @@
     void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent);
     void setupAmountWidget(QLineEdit *widget, QWidget *parent);
 
-    // Parse "wavi:" URI into recipient object, return true on successful parsing
+    // Parse "pptp:" URI into recipient object, return true on successful parsing
     bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out);
     bool parseBitcoinURI(QString uri, SendCoinsRecipient *out);
     QString formatBitcoinURI(const SendCoinsRecipient &info);
@@ -114,7 +114,7 @@
     // Open debug.log
     void openDebugLogfile();
 	
-    // Open wavi.conf
+    // Open pptp.conf
     void openConfigfile();	
 
     // Open masternode.conf
diff -r -u ./wavi/src/qt/intro.cpp ./pptp/src/qt/intro.cpp
--- ./wavi/src/qt/intro.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/intro.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -194,7 +194,7 @@
                 TryCreateDirectory(GUIUtil::qstringToBoostPath(dataDir));
                 break;
             } catch (const fs::filesystem_error&) {
-                QMessageBox::critical(0, tr("Wavi Core"),
+                QMessageBox::critical(0, tr("Pptp Core"),
                     tr("Error: Specified data directory \"%1\" cannot be created.").arg(dataDir));
                 /* fall through, back to choosing screen */
             }
@@ -204,8 +204,8 @@
         settings.setValue("strDataDirDefault", dataDirDefaultCurrent);
     }
     /* Only override -datadir if different from the default, to make it possible to
-     * override -datadir in the wavi.conf file in the default data directory
-     * (to be consistent with wavid behavior)
+     * override -datadir in the pptp.conf file in the default data directory
+     * (to be consistent with pptpd behavior)
      */
     if(dataDir != dataDirDefaultCurrent)
         SoftSetArg("-datadir", GUIUtil::qstringToBoostPath(dataDir).string()); // use OS locale for path setting
Only in ./pptp/src/qt/locale: pptp_bg.ts
Only in ./pptp/src/qt/locale: pptp_de.ts
Only in ./pptp/src/qt/locale: pptp_en.ts
Only in ./pptp/src/qt/locale: pptp_es.ts
Only in ./pptp/src/qt/locale: pptp_fi.ts
Only in ./pptp/src/qt/locale: pptp_fr.ts
Only in ./pptp/src/qt/locale: pptp_it.ts
Only in ./pptp/src/qt/locale: pptp_ja.ts
Only in ./pptp/src/qt/locale: pptp_pl.ts
Only in ./pptp/src/qt/locale: pptp_pt.ts
Only in ./pptp/src/qt/locale: pptp_ru.ts
Only in ./pptp/src/qt/locale: pptp_sk.ts
Only in ./pptp/src/qt/locale: pptp_sv.ts
Only in ./pptp/src/qt/locale: pptp_vi.ts
Only in ./pptp/src/qt/locale: pptp_zh_CN.ts
Only in ./pptp/src/qt/locale: pptp_zh_TW.ts
Only in ./wavi/src/qt/locale: wavi_bg.ts
Only in ./wavi/src/qt/locale: wavi_de.ts
Only in ./wavi/src/qt/locale: wavi_en.ts
Only in ./wavi/src/qt/locale: wavi_es.ts
Only in ./wavi/src/qt/locale: wavi_fi.ts
Only in ./wavi/src/qt/locale: wavi_fr.ts
Only in ./wavi/src/qt/locale: wavi_it.ts
Only in ./wavi/src/qt/locale: wavi_ja.ts
Only in ./wavi/src/qt/locale: wavi_pl.ts
Only in ./wavi/src/qt/locale: wavi_pt.ts
Only in ./wavi/src/qt/locale: wavi_ru.ts
Only in ./wavi/src/qt/locale: wavi_sk.ts
Only in ./wavi/src/qt/locale: wavi_sv.ts
Only in ./wavi/src/qt/locale: wavi_vi.ts
Only in ./wavi/src/qt/locale: wavi_zh_CN.ts
Only in ./wavi/src/qt/locale: wavi_zh_TW.ts
diff -r -u ./wavi/src/qt/macnotificationhandler.mm ./pptp/src/qt/macnotificationhandler.mm
--- ./wavi/src/qt/macnotificationhandler.mm	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/macnotificationhandler.mm	Sun Mar 25 19:57:55 2018
@@ -13,7 +13,7 @@
 - (NSString *)__bundleIdentifier
 {
     if (self == [NSBundle mainBundle]) {
-        return @"org.wavi.Wavi-Qt";
+        return @"org.pptp.Pptp-Qt";
     } else {
         return [self __bundleIdentifier];
     }
diff -r -u ./wavi/src/qt/networkstyle.cpp ./pptp/src/qt/networkstyle.cpp
--- ./wavi/src/qt/networkstyle.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/networkstyle.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/qt/networkstyle.h ./pptp/src/qt/networkstyle.h
--- ./wavi/src/qt/networkstyle.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/networkstyle.h	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/qt/notificator.h ./pptp/src/qt/notificator.h
--- ./wavi/src/qt/notificator.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/notificator.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_QT_NOTIFICATOR_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <QIcon>
diff -r -u ./wavi/src/qt/openuridialog.cpp ./pptp/src/qt/openuridialog.cpp
--- ./wavi/src/qt/openuridialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/openuridialog.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2013 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -17,7 +17,7 @@
 {
     ui->setupUi(this);
 #if QT_VERSION >= 0x040700
-    ui->uriEdit->setPlaceholderText("wavi:");
+    ui->uriEdit->setPlaceholderText("pptp:");
 #endif
 }
 
@@ -49,5 +49,5 @@
     if(filename.isEmpty())
         return;
     QUrl fileUri = QUrl::fromLocalFile(filename);
-    ui->uriEdit->setText("wavi:?r=" + QUrl::toPercentEncoding(fileUri.toString()));
+    ui->uriEdit->setText("pptp:?r=" + QUrl::toPercentEncoding(fileUri.toString()));
 }
diff -r -u ./wavi/src/qt/optionsdialog.cpp ./pptp/src/qt/optionsdialog.cpp
--- ./wavi/src/qt/optionsdialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/optionsdialog.cpp	Sun Mar 25 19:57:55 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "optionsdialog.h"
@@ -92,11 +92,11 @@
     }
     
     /* Theme selector */
-    ui->theme->addItem(QString("WAVI-light"), QVariant("light"));
-    ui->theme->addItem(QString("WAVI-light-hires"), QVariant("light-hires"));
-    ui->theme->addItem(QString("WAVI-blue"), QVariant("drkblue"));
-    ui->theme->addItem(QString("WAVI-Crownium"), QVariant("crownium"));
-    ui->theme->addItem(QString("WAVI-traditional"), QVariant("trad"));
+    ui->theme->addItem(QString("PPTP-light"), QVariant("light"));
+    ui->theme->addItem(QString("PPTP-light-hires"), QVariant("light-hires"));
+    ui->theme->addItem(QString("PPTP-blue"), QVariant("drkblue"));
+    ui->theme->addItem(QString("PPTP-Crownium"), QVariant("crownium"));
+    ui->theme->addItem(QString("PPTP-traditional"), QVariant("trad"));
     
     /* Language selector */
     QDir translations(":translations");
diff -r -u ./wavi/src/qt/optionsmodel.cpp ./pptp/src/qt/optionsmodel.cpp
--- ./wavi/src/qt/optionsmodel.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/optionsmodel.cpp	Sun Mar 25 20:14:31 2018
@@ -1,10 +1,10 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "optionsmodel.h"
@@ -73,7 +73,7 @@
 
     // Display
     if (!settings.contains("nDisplayUnit"))
-        settings.setValue("nDisplayUnit", BitcoinUnits::WAVI);
+        settings.setValue("nDisplayUnit", BitcoinUnits::PPTP);
     nDisplayUnit = settings.value("nDisplayUnit").toInt();
 
     if (!settings.contains("strThirdPartyTxUrls"))
@@ -137,10 +137,10 @@
 
     if (!settings.contains("nPrivateSendAmount")) {
         // for migration from old settings
-        if (!settings.contains("nAnonymizeWaviAmount"))
+        if (!settings.contains("nAnonymizePptpAmount"))
             settings.setValue("nPrivateSendAmount", DEFAULT_PRIVATESEND_AMOUNT);
         else
-            settings.setValue("nPrivateSendAmount", settings.value("nAnonymizeWaviAmount").toInt());
+            settings.setValue("nPrivateSendAmount", settings.value("nAnonymizePptpAmount").toInt());
     }
     if (!SoftSetArg("-privatesendamount", settings.value("nPrivateSendAmount").toString().toStdString()))
         addOverriddenOption("-privatesendamount");
@@ -199,7 +199,7 @@
 
     // Remove all entries from our QSettings object
     settings.clear();
-    resetSettings = true; // Needed in wavi.cpp during shotdown to also remove the window positions
+    resetSettings = true; // Needed in pptp.cpp during shotdown to also remove the window positions
 
     // default setting for OptionsModel::StartAtStartup - disabled
     if (GUIUtil::GetStartOnSystemStartup())
diff -r -u ./wavi/src/qt/overviewpage.cpp ./pptp/src/qt/overviewpage.cpp
--- ./wavi/src/qt/overviewpage.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/overviewpage.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -38,7 +38,7 @@
     Q_OBJECT
 public:
     TxViewDelegate(const PlatformStyle *_platformStyle, QObject *parent=nullptr):
-        QAbstractItemDelegate(parent), unit(BitcoinUnits::WAVI),
+        QAbstractItemDelegate(parent), unit(BitcoinUnits::PPTP),
         platformStyle(_platformStyle)
     {
 
@@ -276,7 +276,7 @@
     this->walletModel = model;
     if(model && model->getOptionsModel())
     {
-        // update the display unit, to not use the default ("WAVI")
+        // update the display unit, to not use the default ("PPTP")
         updateDisplayUnit();
         // Keep up to date with wallet
         setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance(), model->getAnonymizedBalance(),
diff -r -u ./wavi/src/qt/paymentserver.cpp ./pptp/src/qt/paymentserver.cpp
--- ./wavi/src/qt/paymentserver.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/paymentserver.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -48,14 +48,14 @@
 #endif
 
 const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds
-const QString BITCOIN_IPC_PREFIX("wavi:");
+const QString BITCOIN_IPC_PREFIX("pptp:");
 // BIP70 payment protocol messages
 const char* BIP70_MESSAGE_PAYMENTACK = "PaymentACK";
 const char* BIP70_MESSAGE_PAYMENTREQUEST = "PaymentRequest";
 // BIP71 payment protocol media types
-const char* BIP71_MIMETYPE_PAYMENT = "application/wavi-payment";
-const char* BIP71_MIMETYPE_PAYMENTACK = "application/wavi-paymentack";
-const char* BIP71_MIMETYPE_PAYMENTREQUEST = "application/wavi-paymentrequest";
+const char* BIP71_MIMETYPE_PAYMENT = "application/pptp-payment";
+const char* BIP71_MIMETYPE_PAYMENTACK = "application/pptp-paymentack";
+const char* BIP71_MIMETYPE_PAYMENTREQUEST = "application/pptp-paymentrequest";
 // BIP70 max payment request size in bytes (DoS protection)
 const qint64 BIP70_MAX_PAYMENTREQUEST_SIZE = 50000;
 
@@ -81,7 +81,7 @@
 //
 static QString ipcServerName()
 {
-    QString name("WaviQt");
+    QString name("PptpQt");
 
     // Append a simple hash of the datadir
     // Note that GetDataDir(true) returns a different path
@@ -210,11 +210,11 @@
         if (arg.startsWith("-"))
             continue;
 
-        // If the wavi: URI contains a payment request, we are not able to detect the
+        // If the pptp: URI contains a payment request, we are not able to detect the
         // network as that would require fetching and parsing the payment request.
         // That means clicking such an URI which contains a testnet payment request
         // will start a mainnet instance and throw a "wrong network" error.
-        if (arg.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // wavi: URI
+        if (arg.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // pptp: URI
         {
             savedPaymentRequests.append(arg);
 
@@ -310,7 +310,7 @@
     GOOGLE_PROTOBUF_VERIFY_VERSION;
 
     // Install global event filter to catch QFileOpenEvents
-    // on Mac: sent when you click wavi: links
+    // on Mac: sent when you click pptp: links
     // other OSes: helpful when dealing with payment request files
     if (parent)
         parent->installEventFilter(this);
@@ -327,7 +327,7 @@
         if (!uriServer->listen(name)) {
             // constructor is called early in init, so don't use "Q_EMIT message()" here
             QMessageBox::critical(0, tr("Payment request error"),
-                tr("Cannot start wavi: click-to-pay handler"));
+                tr("Cannot start pptp: click-to-pay handler"));
         }
         else {
             connect(uriServer, SIGNAL(newConnection()), this, SLOT(handleURIConnection()));
@@ -342,7 +342,7 @@
 }
 
 //
-// OSX-specific way of handling wavi: URIs and PaymentRequest mime types.
+// OSX-specific way of handling pptp: URIs and PaymentRequest mime types.
 // Also used by paymentservertests.cpp and when opening a payment request file
 // via "Open URI..." menu entry.
 //
@@ -368,7 +368,7 @@
     if (netManager != NULL)
         delete netManager;
 
-    // netManager is used to fetch paymentrequests given in wavi: URIs
+    // netManager is used to fetch paymentrequests given in pptp: URIs
     netManager = new QNetworkAccessManager(this);
 
     QNetworkProxy proxy;
@@ -408,7 +408,7 @@
         return;
     }
 
-    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // wavi: URI
+    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // pptp: URI
     {
 #if QT_VERSION < 0x050000
         QUrl uri(s);
@@ -452,7 +452,7 @@
             }
             else
                 Q_EMIT message(tr("URI handling"),
-                    tr("URI cannot be parsed! This can be caused by an invalid Wavi address or malformed URI parameters."),
+                    tr("URI cannot be parsed! This can be caused by an invalid Pptp address or malformed URI parameters."),
                     CClientUIInterface::ICON_WARNING);
 
             return;
@@ -564,7 +564,7 @@
             addresses.append(QString::fromStdString(CBitcoinAddress(dest).ToString()));
         }
         else if (!recipient.authenticatedMerchant.isEmpty()) {
-            // Unauthenticated payment requests to custom wavi addresses are not supported
+            // Unauthenticated payment requests to custom pptp addresses are not supported
             // (there is no good way to tell the user where they are paying in a way they'd
             // have a chance of understanding).
             Q_EMIT message(tr("Payment request rejected"),
@@ -573,7 +573,7 @@
             return false;
         }
 
-        // Wavi amounts are stored as (optional) uint64 in the protobuf messages (see paymentrequest.proto),
+        // Pptp amounts are stored as (optional) uint64 in the protobuf messages (see paymentrequest.proto),
         // but CAmount is defined as int64_t. Because of that we need to verify that amounts are in a valid range
         // and no overflow has happened.
         if (!verifyAmount(sendingTo.second)) {
diff -r -u ./wavi/src/qt/paymentserver.h ./pptp/src/qt/paymentserver.h
--- ./wavi/src/qt/paymentserver.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/paymentserver.h	Sun Mar 25 19:57:55 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_QT_PAYMENTSERVER_H
 
 // This class handles payment requests from clicking on
-// wavi: URIs
+// pptp: URIs
 //
 // This is somewhat tricky, because we have to deal with
 // the situation where the user clicks on a link during
Only in ./pptp/src/qt: pptp.cpp
Only in ./pptp/src/qt: pptp.qrc
Only in ./pptp/src/qt: pptp_locale.qrc
Only in ./pptp/src/qt: pptpstrings.cpp
diff -r -u ./wavi/src/qt/receiverequestdialog.cpp ./pptp/src/qt/receiverequestdialog.cpp
--- ./wavi/src/qt/receiverequestdialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/receiverequestdialog.cpp	Sun Mar 25 19:57:55 2018
@@ -22,7 +22,7 @@
 #endif
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h" /* for USE_QRCODE */
+#include "config/pptp-config.h" /* for USE_QRCODE */
 #endif
 
 #ifdef USE_QRCODE
diff -r -u ./wavi/src/qt/recentrequeststablemodel.h ./pptp/src/qt/recentrequeststablemodel.h
--- ./wavi/src/qt/recentrequeststablemodel.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/recentrequeststablemodel.h	Sun Mar 25 19:57:55 2018
@@ -53,7 +53,7 @@
     Qt::SortOrder order;
 };
 
-/** Model for list of recently generated payment requests / wavi: URIs.
+/** Model for list of recently generated payment requests / pptp: URIs.
  * Part of wallet model.
  */
 class RecentRequestsTableModel: public QAbstractTableModel
diff -r -u ./wavi/src/qt/res/css/crownium.css ./pptp/src/qt/res/css/crownium.css
--- ./wavi/src/qt/res/css/crownium.css	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/css/crownium.css	Sun Mar 25 19:57:55 2018
@@ -762,16 +762,16 @@
 border:0;
 }
 
-/* About Wavi Dialog */
+/* About Pptp Dialog */
 QDialog#AboutDialog {
 background-color:#F8F6F6;
 }
 
-QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Wavi Contents */
+QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Pptp Contents */
 margin-left:10px;
 }
 
-QDialog#AboutDialog QLabel#label_2 { /* Margin for About Wavi text */
+QDialog#AboutDialog QLabel#label_2 { /* Margin for About Pptp text */
 margin-right:10px;
 }
 
@@ -1126,7 +1126,7 @@
 margin-right:20px;
 margin-left:0;
 margin-top:0;
-background-image: url(':/images/crownium/wavi_logo_horizontal');
+background-image: url(':/images/crownium/pptp_logo_horizontal');
 background-repeat:none;
 }
 
diff -r -u ./wavi/src/qt/res/css/drkblue.css ./pptp/src/qt/res/css/drkblue.css
--- ./wavi/src/qt/res/css/drkblue.css	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/css/drkblue.css	Sun Mar 25 19:57:55 2018
@@ -740,16 +740,16 @@
 border:0;
 }
 
-/* About Wavi Dialog */
+/* About Pptp Dialog */
 QDialog#AboutDialog {
 background-color:#F8F6F6;
 }
 
-QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Wavi Contents */
+QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Pptp Contents */
 margin-left:10px;
 }
 
-QDialog#AboutDialog QLabel#label_2 { /* Margin for About Wavi text */
+QDialog#AboutDialog QLabel#label_2 { /* Margin for About Pptp text */
 margin-right:10px;
 }
 
@@ -1103,7 +1103,7 @@
 margin-right:20px;
 margin-left:0;
 margin-top:0;
-background-image: url(':/images/drkblue/wavi_logo_horizontal');
+background-image: url(':/images/drkblue/pptp_logo_horizontal');
 background-repeat:none;
 }
 
diff -r -u ./wavi/src/qt/res/css/light-hires.css ./pptp/src/qt/res/css/light-hires.css
--- ./wavi/src/qt/res/css/light-hires.css	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/css/light-hires.css	Sun Mar 25 19:57:55 2018
@@ -743,16 +743,16 @@
 border:0;
 }
 
-/* About Wavi Dialog */
+/* About Pptp Dialog */
 QDialog#AboutDialog {
 background-color:#F8F6F6;
 }
 
-QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Wavi Contents */
+QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Pptp Contents */
 margin-left:10px;
 }
 
-QDialog#AboutDialog QLabel#label_2 { /* Margin for About Wavi text */
+QDialog#AboutDialog QLabel#label_2 { /* Margin for About Pptp text */
 margin-right:10px;
 }
 
@@ -1109,7 +1109,7 @@
 margin-right:20px;
 margin-left:0;
 margin-top:15px;
-background-image: url(':/images/light/wavi_logo_horizontal');
+background-image: url(':/images/light/pptp_logo_horizontal');
 background-repeat:none;
 }
 
diff -r -u ./wavi/src/qt/res/css/light.css ./pptp/src/qt/res/css/light.css
--- ./wavi/src/qt/res/css/light.css	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/css/light.css	Sun Mar 25 19:57:55 2018
@@ -743,16 +743,16 @@
 border:0;
 }
 
-/* About Wavi Dialog */
+/* About Pptp Dialog */
 QDialog#AboutDialog {
 background-color:#F8F6F6;
 }
 
-QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Wavi Contents */
+QDialog#AboutDialog QLabel#label, QDialog#AboutDialog QLabel#copyrightLabel, QDialog#AboutDialog QLabel#label_2 { /* About Pptp Contents */
 margin-left:10px;
 }
 
-QDialog#AboutDialog QLabel#label_2 { /* Margin for About Wavi text */
+QDialog#AboutDialog QLabel#label_2 { /* Margin for About Pptp text */
 margin-right:10px;
 }
 
@@ -1109,7 +1109,7 @@
 margin-right:20px;
 margin-left:0;
 margin-top:15px;
-background-image: url(':/images/light/wavi_logo_horizontal');
+background-image: url(':/images/light/pptp_logo_horizontal');
 background-repeat:none;
 }
 
Binary files ./wavi/src/qt/res/icons/bitcoin.icns and ./pptp/src/qt/res/icons/bitcoin.icns differ
Binary files ./wavi/src/qt/res/icons/bitcoin.ico and ./pptp/src/qt/res/icons/bitcoin.ico differ
Binary files ./wavi/src/qt/res/icons/bitcoin.png and ./pptp/src/qt/res/icons/bitcoin.png differ
Binary files ./wavi/src/qt/res/icons/crownium/about.png and ./pptp/src/qt/res/icons/crownium/about.png differ
Binary files ./wavi/src/qt/res/icons/drkblue/about.png and ./pptp/src/qt/res/icons/drkblue/about.png differ
Binary files ./wavi/src/qt/res/icons/drkblue/bitcoin.png and ./pptp/src/qt/res/icons/drkblue/bitcoin.png differ
Binary files ./wavi/src/qt/res/icons/drkblue/bitcoin_testnet.ico and ./pptp/src/qt/res/icons/drkblue/bitcoin_testnet.ico differ
Binary files ./wavi/src/qt/res/icons/drkblue/bitcoin_testnet.png and ./pptp/src/qt/res/icons/drkblue/bitcoin_testnet.png differ
Binary files ./wavi/src/qt/res/icons/light/about.png and ./pptp/src/qt/res/icons/light/about.png differ
Binary files ./wavi/src/qt/res/icons/trad/about.png and ./pptp/src/qt/res/icons/trad/about.png differ
Binary files ./wavi/src/qt/res/images/crownium/about.png and ./pptp/src/qt/res/images/crownium/about.png differ
Only in ./pptp/src/qt/res/images/crownium: pptp_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/crownium/splash.png and ./pptp/src/qt/res/images/crownium/splash.png differ
Binary files ./wavi/src/qt/res/images/crownium/splash_testnet.png and ./pptp/src/qt/res/images/crownium/splash_testnet.png differ
Only in ./wavi/src/qt/res/images/crownium: wavi_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/drkblue/about.png and ./pptp/src/qt/res/images/drkblue/about.png differ
Only in ./pptp/src/qt/res/images/drkblue: pptp_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/drkblue/splash.png and ./pptp/src/qt/res/images/drkblue/splash.png differ
Binary files ./wavi/src/qt/res/images/drkblue/splash_testnet.png and ./pptp/src/qt/res/images/drkblue/splash_testnet.png differ
Only in ./wavi/src/qt/res/images/drkblue: wavi_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/light/about.png and ./pptp/src/qt/res/images/light/about.png differ
Only in ./pptp/src/qt/res/images/light: pptp_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/light/splash.png and ./pptp/src/qt/res/images/light/splash.png differ
Binary files ./wavi/src/qt/res/images/light/splash_testnet.png and ./pptp/src/qt/res/images/light/splash_testnet.png differ
Only in ./wavi/src/qt/res/images/light: wavi_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/trad/about.png and ./pptp/src/qt/res/images/trad/about.png differ
Only in ./pptp/src/qt/res/images/trad: pptp_logo_horizontal.png
Binary files ./wavi/src/qt/res/images/trad/splash.png and ./pptp/src/qt/res/images/trad/splash.png differ
Binary files ./wavi/src/qt/res/images/trad/splash_testnet.png and ./pptp/src/qt/res/images/trad/splash_testnet.png differ
Only in ./wavi/src/qt/res/images/trad: wavi_logo_horizontal.png
Only in ./pptp/src/qt/res: pptp-qt-res.rc
diff -r -u ./wavi/src/qt/res/src/connect-0.svg ./pptp/src/qt/res/src/connect-0.svg
--- ./wavi/src/qt/res/src/connect-0.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/connect-0.svg	Sun Mar 25 19:57:55 2018
@@ -38,29 +38,29 @@
           <path
              id="path4293"
              d="m -65.35,116.3 0,3 0.5,0 c 0.54,0 1,0.5 1,1 l 0,2.6 c -1.15,0.5 -2,1.6 -2,3 0,2 1.59,3.5 3.5,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-2.3 -1.81,-4 -4,-4 z m 1,1.2 c 1.39,0.3 2.5,1.3 2.5,2.8 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.5,-1.1 -2.5,-2.5 0,-1.1 0.69,-2 1.66,-2.3 l 0.34,-0.1 0,-3.2 c 0,-0.9 -0.67,-1.5 -1.5,-1.8 z"
-             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
           <g
              style="fill:#969696;fill-opacity:1"
              id="g4295">
             <path
                id="path4297"
                d="m -67.35,106.1 c -1.94,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,2.2 1.79,4 4,4 l 0.5,0 0,-0.5 0,-2.5 -0.5,0 c -0.55,0 -1,-0.5 -1,-1 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.57,-3.5 -3.5,-3.5 z m 0,1 c 1.37,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,0.9 0.67,1.5 1.5,1.8 l 0,1 c -1.38,-0.3 -2.5,-1.4 -2.5,-2.8 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.12,-2.5 2.5,-2.5 z"
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
             <path
                id="path4299"
                d="m -57.35,106.1 c -1.93,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,0.5 -0.45,1 -1,1 l -4.85,0 3.17,3 1.68,0 c 2.21,0 4,-1.8 4,-4 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.56,-3.5 -3.5,-3.5 z m 0,1 c 1.38,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,1.6 -1.35,3 -3,3 l -1.81,0 -2.04,-1 3.85,0 c 1.11,0 2,-0.9 2,-2 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.13,-2.5 2.5,-2.5 z"
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
           </g>
           <path
              id="path4301"
              d="m -69.84,116.3 c -2.19,0 -4,1.7 -4,4 l 0,2.6 c -1.14,0.6 -1.99,1.6 -1.99,3 0,2 1.6,3.5 3.51,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-0.5 0.45,-1 1,-1 l 5.01,0 -3.36,-3 z m 0,1 1.84,0 2.19,1 -4.01,0 c -1.11,0 -2,0.9 -2,2 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.51,-1.1 -2.51,-2.5 0,-1.1 0.7,-2 1.66,-2.3 l 0.33,-0.1 0,-0.4 0,-2.8 c 0,-1.7 1.33,-3 3,-3 z"
-             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
         </g>
       </g>
     </g>
     <path
        id="path4165"
        d="m 12,8.77 c -0.84,0 -1.66,0.341 -2.254,0.937 -0.599,0.593 -0.942,1.403 -0.945,2.253 0,0.85 0.337,1.67 0.933,2.26 a 0.6001,0.6001 0 0 0 0,0 c 0.594,0.6 1.424,0.94 2.264,0.94 0.84,0 1.67,-0.34 2.26,-0.94 0.6,-0.59 0.94,-1.41 0.94,-2.26 0,-0.84 -0.34,-1.66 -0.95,-2.253 C 13.66,9.111 12.84,8.77 12,8.77 Z"
-       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
   </g>
 </svg>
diff -r -u ./wavi/src/qt/res/src/connect-1.svg ./pptp/src/qt/res/src/connect-1.svg
--- ./wavi/src/qt/res/src/connect-1.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/connect-1.svg	Sun Mar 25 19:57:55 2018
@@ -39,13 +39,13 @@
           <g
              id="g4291">
             <path
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
                d="m -65.35,116.3 0,3 0.5,0 c 0.54,0 1,0.5 1,1 l 0,2.6 c -1.15,0.5 -2,1.6 -2,3 0,2 1.59,3.5 3.5,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-2.3 -1.81,-4 -4,-4 z m 1,1.2 c 1.39,0.3 2.5,1.3 2.5,2.8 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.5,-1.1 -2.5,-2.5 0,-1.1 0.69,-2 1.66,-2.3 l 0.34,-0.1 0,-3.2 c 0,-0.9 -0.67,-1.5 -1.5,-1.8 z"
                id="path4293" />
             <g
                id="g4295">
               <path
-                 style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+                 style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
                  d="m -67.35,106.1 c -1.94,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,2.2 1.79,4 4,4 l 0.5,0 0,-0.5 0,-2.5 -0.5,0 c -0.55,0 -1,-0.5 -1,-1 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.57,-3.5 -3.5,-3.5 z m 0,1 c 1.37,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,0.9 0.67,1.5 1.5,1.8 l 0,1 c -1.38,-0.3 -2.5,-1.4 -2.5,-2.8 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.12,-2.5 2.5,-2.5 z"
                  id="path4297" />
               <path
@@ -54,7 +54,7 @@
                  style="" />
             </g>
             <path
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
                d="m -69.84,116.3 c -2.19,0 -4,1.7 -4,4 l 0,2.6 c -1.14,0.6 -1.99,1.6 -1.99,3 0,2 1.6,3.5 3.51,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-0.5 0.45,-1 1,-1 l 5.01,0 -3.34,-3 z m 0,1 2.02,0 2.01,1 -4.01,0 c -1.11,0 -2,0.9 -2,2 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.51,-1.1 -2.51,-2.5 0,-1.1 0.7,-2 1.66,-2.3 l 0.33,-0.1 0,-0.4 0,-2.8 c 0,-1.7 1.33,-3 3,-3 z"
                id="path4301" />
           </g>
@@ -63,7 +63,7 @@
       <path
          id="path4173"
          d="m 12,8.764 c -0.84,0 -1.67,0.336 -2.264,0.931 a 0.6001,0.6001 0 0 0 -0,0 C 9.138,10.29 8.802,11.11 8.801,11.96 c 0,0.85 0.337,1.67 0.933,2.26 a 0.6001,0.6001 0 0 0 0,0 c 0.594,0.6 1.424,0.94 2.264,0.94 0.84,0 1.67,-0.34 2.26,-0.94 0.6,-0.59 0.94,-1.41 0.94,-2.26 0,-0.84 -0.34,-1.67 -0.94,-2.265 C 13.67,9.1 12.84,8.764 12,8.764 Z"
-         style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+         style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
     </g>
   </g>
 </svg>
diff -r -u ./wavi/src/qt/res/src/connect-2.svg ./pptp/src/qt/res/src/connect-2.svg
--- ./wavi/src/qt/res/src/connect-2.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/connect-2.svg	Sun Mar 25 19:57:55 2018
@@ -33,13 +33,13 @@
       <g
          id="g4291">
         <path
-           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
            d="m -65.35,116.3 0,3 0.5,0 c 0.54,0 1,0.5 1,1 l 0,2.6 c -1.15,0.5 -2,1.6 -2,3 0,2 1.59,3.5 3.5,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-2.3 -1.81,-4 -4,-4 z m 1,1.2 c 1.39,0.3 2.5,1.3 2.5,2.8 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.5,-1.1 -2.5,-2.5 0,-1.1 0.69,-2 1.66,-2.3 l 0.34,-0.1 0,-3.2 c 0,-0.9 -0.67,-1.5 -1.5,-1.8 z"
            id="path4293" />
         <g
            id="g4295">
           <path
-             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
              d="m -67.35,106.1 c -1.94,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,2.2 1.79,4 4,4 l 0.5,0 0,-0.5 0,-2.5 -0.5,0 c -0.55,0 -1,-0.5 -1,-1 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.57,-3.5 -3.5,-3.5 z m 0,1 c 1.37,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,0.9 0.67,1.5 1.5,1.8 l 0,1 c -1.38,-0.3 -2.5,-1.4 -2.5,-2.8 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.12,-2.5 2.5,-2.5 z"
              id="path4297" />
           <path
@@ -54,6 +54,6 @@
     <path
        id="path4170"
        d="m 47.86,115.4 c -0.84,0 -1.65,0.4 -2.24,1 -0.64,0.5 -0.96,1.3 -0.96,2.2 0,0.9 0.32,1.7 0.96,2.2 0.59,0.6 1.4,1 2.24,1 0.84,0 1.65,-0.4 2.24,-1 0.64,-0.5 0.96,-1.3 0.96,-2.2 0,-0.9 -0.32,-1.7 -0.96,-2.2 -0.59,-0.6 -1.4,-1 -2.24,-1 z"
-       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
   </g>
 </svg>
diff -r -u ./wavi/src/qt/res/src/connect-3.svg ./pptp/src/qt/res/src/connect-3.svg
--- ./wavi/src/qt/res/src/connect-3.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/connect-3.svg	Sun Mar 25 19:57:55 2018
@@ -42,7 +42,7 @@
           <g
              id="g4295">
             <path
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"
                d="m -67.35,106.1 c -1.94,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,2.2 1.79,4 4,4 l 0.5,0 0,-0.5 0,-2.5 -0.5,0 c -0.55,0 -1,-0.5 -1,-1 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.57,-3.5 -3.5,-3.5 z m 0,1 c 1.37,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,0.9 0.67,1.5 1.5,1.8 l 0,1 c -1.38,-0.3 -2.5,-1.4 -2.5,-2.8 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.12,-2.5 2.5,-2.5 z"
                id="path4297" />
             <path
@@ -68,5 +68,5 @@
   <path
      id="path4170"
      d="m 15.2,12 c 0,-0.84 -0.4,-1.65 -1,-2.242 -0.5,-0.64 -1.3,-0.96 -2.2,-0.96 -0.9,0 -1.7,0.32 -2.2,0.96 -0.6,0.592 -1,1.402 -1,2.242 0,0.84 0.4,1.65 1,2.24 0.5,0.64 1.3,0.96 2.2,0.96 0.9,0 1.7,-0.32 2.2,-0.96 0.6,-0.59 1,-1.4 1,-2.24 z"
-     style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+     style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
 </svg>
diff -r -u ./wavi/src/qt/res/src/connect-4.svg ./pptp/src/qt/res/src/connect-4.svg
--- ./wavi/src/qt/res/src/connect-4.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/connect-4.svg	Sun Mar 25 19:57:55 2018
@@ -61,5 +61,5 @@
   <path
      id="path4170"
      d="m 15.2,12 c 0,-0.84 -0.4,-1.65 -1,-2.24 C 13.7,9.12 12.9,8.8 12,8.8 c -0.9,0 -1.7,0.32 -2.2,0.96 -0.6,0.59 -1,1.4 -1,2.24 0,0.84 0.4,1.65 1,2.24 0.5,0.64 1.3,0.96 2.2,0.96 0.9,0 1.7,-0.32 2.2,-0.96 0.6,-0.59 1,-1.4 1,-2.24 z"
-     style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+     style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
 </svg>
diff -r -u ./wavi/src/qt/res/src/network_disabled.svg ./pptp/src/qt/res/src/network_disabled.svg
--- ./wavi/src/qt/res/src/network_disabled.svg	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/res/src/network_disabled.svg	Sun Mar 25 19:57:55 2018
@@ -38,30 +38,30 @@
           <path
              id="path4293"
              d="m -65.35,116.3 0,3 0.5,0 c 0.54,0 1,0.5 1,1 l 0,2.6 c -1.15,0.5 -2,1.6 -2,3 0,2 1.59,3.5 3.5,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-2.3 -1.81,-4 -4,-4 z m 1,1.2 c 1.39,0.3 2.5,1.3 2.5,2.8 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.5,-1.1 -2.5,-2.5 0,-1.1 0.69,-2 1.66,-2.3 l 0.34,-0.1 0,-3.2 c 0,-0.9 -0.67,-1.5 -1.5,-1.8 z"
-             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
           <g
              style="fill:#969696;fill-opacity:1"
              id="g4295">
             <path
                id="path4297"
                d="m -67.35,106.1 c -1.94,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,2.2 1.79,4 4,4 l 0.5,0 0,-0.5 0,-2.5 -0.5,0 c -0.55,0 -1,-0.5 -1,-1 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.57,-3.5 -3.5,-3.5 z m 0,1 c 1.37,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,0.9 0.67,1.5 1.5,1.8 l 0,1 c -1.38,-0.3 -2.5,-1.4 -2.5,-2.8 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.12,-2.5 2.5,-2.5 z"
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
             <path
                id="path4299"
                d="m -57.35,106.1 c -1.93,0 -3.5,1.6 -3.5,3.5 0,1.4 0.85,2.5 2,3 l 0,2.7 c 0,0.5 -0.45,1 -1,1 l -4.85,0 3.17,3 1.68,0 c 2.21,0 4,-1.8 4,-4 l 0,-2.7 c 1.15,-0.5 2,-1.6 2,-3 0,-1.9 -1.56,-3.5 -3.5,-3.5 z m 0,1 c 1.38,0 2.5,1.2 2.5,2.5 0,1.1 -0.7,2 -1.66,2.3 l -0.34,0.1 0,3.3 c 0,1.6 -1.35,3 -3,3 l -1.81,0 -2.04,-1 3.85,0 c 1.11,0 2,-0.9 2,-2 l 0,-3.3 -0.34,-0.1 c -0.96,-0.3 -1.66,-1.2 -1.66,-2.3 0,-1.3 1.13,-2.5 2.5,-2.5 z"
-               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+               style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
           </g>
           <path
              id="path4301"
              d="m -69.84,116.3 c -2.19,0 -4,1.7 -4,4 l 0,2.6 c -1.14,0.6 -1.99,1.6 -1.99,3 0,2 1.6,3.5 3.51,3.5 1.91,0 3.5,-1.5 3.5,-3.5 0,-1.4 -0.85,-2.5 -2,-3 l 0,-2.6 c 0,-0.5 0.45,-1 1,-1 l 5.01,0 -3.36,-3 z m 0,1 1.84,0 2.19,1 -4.01,0 c -1.11,0 -2,0.9 -2,2 l 0,3.2 0.34,0.1 c 0.96,0.3 1.66,1.2 1.66,2.3 0,1.4 -1.11,2.5 -2.5,2.5 -1.39,0 -2.51,-1.1 -2.51,-2.5 0,-1.1 0.7,-2 1.66,-2.3 l 0.33,-0.1 0,-0.4 0,-2.8 c 0,-1.7 1.33,-3 3,-3 z"
-             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-waviarray:none;stroke-wavioffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
+             style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-pptparray:none;stroke-pptpoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />
         </g>
       </g>
     </g>
     <path
        id="path4165"
        d="m 12,8.77 c -0.84,0 -1.66,0.341 -2.254,0.937 -0.599,0.593 -0.942,1.403 -0.945,2.253 0,0.85 0.337,1.67 0.933,2.26 a 0.6001,0.6001 0 0 0 0,0 c 0.594,0.6 1.424,0.94 2.264,0.94 0.84,0 1.67,-0.34 2.26,-0.94 0.6,-0.59 0.94,-1.41 0.94,-2.26 0,-0.84 -0.34,-1.66 -0.95,-2.253 C 13.66,9.111 12.84,8.77 12,8.77 Z"
-       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-waviarray:none;stroke-opacity:1" />
+       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-miterlimit:4;stroke-pptparray:none;stroke-opacity:1" />
   </g>
   <path d="M 3,3 l 18,18" style="stroke-width: 3; stroke: #000000; stroke-linecap: round;" />
   <path d="M 21,3 l -18,18" style="stroke-width: 3; stroke: #000000; stroke-linecap: round;" />
Only in ./wavi/src/qt/res: wavi-qt-res.rc
diff -r -u ./wavi/src/qt/rpcconsole.cpp ./pptp/src/qt/rpcconsole.cpp
--- ./wavi/src/qt/rpcconsole.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/rpcconsole.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -641,7 +641,7 @@
             ).arg(fixedFontInfo.family(), QString("%1pt").arg(consoleFontSize))
         );
 
-    message(CMD_REPLY, (tr("Welcome to the Wavi Core RPC console.") + "<br>" +
+    message(CMD_REPLY, (tr("Welcome to the Pptp Core RPC console.") + "<br>" +
                         tr("Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.") + "<br>" +
                         tr("Type <b>help</b> for an overview of available commands.")), true);
 }
diff -r -u ./wavi/src/qt/sendcoinsdialog.cpp ./pptp/src/qt/sendcoinsdialog.cpp
--- ./wavi/src/qt/sendcoinsdialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/sendcoinsdialog.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -64,7 +64,7 @@
     connect(ui->checkBoxCoinControlChange, SIGNAL(stateChanged(int)), this, SLOT(coinControlChangeChecked(int)));
     connect(ui->lineEditCoinControlChange, SIGNAL(textEdited(const QString &)), this, SLOT(coinControlChangeEdited(const QString &)));
 
-    // Wavi specific
+    // Pptp specific
     QSettings settings;
     if (!settings.contains("bUseDarkSend"))
         settings.setValue("bUseDarkSend", false);
@@ -863,7 +863,7 @@
         }
         else if (!addr.IsValid()) // Invalid address
         {
-            ui->labelCoinControlChangeLabel->setText(tr("Warning: Invalid Wavi address"));
+            ui->labelCoinControlChangeLabel->setText(tr("Warning: Invalid Pptp address"));
         }
         else // Valid address
         {
diff -r -u ./wavi/src/qt/sendcoinsentry.cpp ./pptp/src/qt/sendcoinsentry.cpp
--- ./wavi/src/qt/sendcoinsentry.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/sendcoinsentry.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -41,9 +41,9 @@
     ui->deleteButton_is->setIcon(QIcon(":/icons/" + theme + "/remove"));
     ui->deleteButton_s->setIcon(QIcon(":/icons/" + theme + "/remove"));
       
-    // normal wavi address field
+    // normal pptp address field
     GUIUtil::setupAddressWidget(ui->payTo, this);
-    // just a label for displaying wavi address(es)
+    // just a label for displaying pptp address(es)
     ui->payTo_is->setFont(GUIUtil::fixedPitchFont());
 
     // Connect signals
diff -r -u ./wavi/src/qt/signverifymessagedialog.cpp ./pptp/src/qt/signverifymessagedialog.cpp
--- ./wavi/src/qt/signverifymessagedialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/signverifymessagedialog.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/qt/splashscreen.cpp ./pptp/src/qt/splashscreen.cpp
--- ./wavi/src/qt/splashscreen.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/splashscreen.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -42,10 +42,10 @@
     float fontFactor            = 1.0;
 
     // define text to place
-    QString titleText       = tr("Wavi Core");
+    QString titleText       = tr("Pptp Core");
     QString versionText     = QString(tr("Version %1")).arg(QString::fromStdString(FormatFullVersion()));
     QString copyrightTextBtc   = QChar(0xA9)+QString(" 2009-%1 ").arg(COPYRIGHT_YEAR) + QString(tr("The Bitcoin Core developers"));
-    QString copyrightTextWavi   = QChar(0xA9)+QString(" 2014-%1 ").arg(COPYRIGHT_YEAR) + QString(tr("The Wavi Core developers"));
+    QString copyrightTextPptp   = QChar(0xA9)+QString(" 2014-%1 ").arg(COPYRIGHT_YEAR) + QString(tr("The Pptp Core developers"));
     QString titleAddText    = networkStyle->getTitleAddText();
     // networkstyle.cpp can't (yet) read themes, so we do it here to get the correct Splash-screen
     QString splashScreenPath = ":/images/" + GUIUtil::getThemeName() + "/splash";
@@ -82,7 +82,7 @@
     // draw copyright stuff
     pixPaint.setFont(QFont(font, 10*fontFactor));
     pixPaint.drawText(paddingLeft,paddingTop+titleCopyrightVSpace,copyrightTextBtc);
-    pixPaint.drawText(paddingLeft,paddingTop+titleCopyrightVSpace+12,copyrightTextWavi);
+    pixPaint.drawText(paddingLeft,paddingTop+titleCopyrightVSpace+12,copyrightTextPptp);
 
     // draw additional text if special network
     if(!titleAddText.isEmpty()) {
diff -r -u ./wavi/src/qt/test/test_main.cpp ./pptp/src/qt/test/test_main.cpp
--- ./wavi/src/qt/test/test_main.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/test/test_main.cpp	Sun Mar 25 20:14:31 2018
@@ -1,10 +1,10 @@
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "util.h"
@@ -39,7 +39,7 @@
     // Don't remove this, it's needed to access
     // QCoreApplication:: in the tests
     QCoreApplication app(argc, argv);
-    app.setApplicationName("Wavi-Qt-test");
+    app.setApplicationName("Pptp-Qt-test");
 
     SSL_library_init();
 
diff -r -u ./wavi/src/qt/test/uritests.cpp ./pptp/src/qt/test/uritests.cpp
--- ./wavi/src/qt/test/uritests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/test/uritests.cpp	Sun Mar 25 19:57:55 2018
@@ -13,58 +13,58 @@
 {
     SendCoinsRecipient rv;
     QUrl uri;
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-dontexist="));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-dontexist="));
     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?dontexist="));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?dontexist="));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString());
     QVERIFY(rv.amount == 0);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?label=Some Example Address"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?label=Some Example Address"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString("Some Example Address"));
     QVERIFY(rv.amount == 0);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=0.001"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=0.001"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString());
     QVERIFY(rv.amount == 100000);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1.001"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1.001"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString());
     QVERIFY(rv.amount == 100100000);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.amount == 10000000000LL);
     QVERIFY(rv.label == QString("Some Example"));
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString());
 
-    QVERIFY(GUIUtil::parseBitcoinURI("wavi://XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address", &rv));
+    QVERIFY(GUIUtil::parseBitcoinURI("pptp://XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address", &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.label == QString());
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-message=Some Example Address"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-message=Some Example Address"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000&label=Some Example"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000&label=Some Example"));
     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000.0&label=Some Example"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000.0&label=Some Example"));
     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=1"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=1"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.amount == 10000000000LL);
@@ -72,7 +72,7 @@
     QVERIFY(rv.message == QString("Some Example Message"));
     QVERIFY(rv.fUseInstantSend == 1);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=Something Invalid"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=Something Invalid"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.address == QString("XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(rv.amount == 10000000000LL);
@@ -80,15 +80,15 @@
     QVERIFY(rv.message == QString("Some Example Message"));
     QVERIFY(rv.fUseInstantSend != 1);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=1"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=1"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.fUseInstantSend == 1);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=0"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=0"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.fUseInstantSend != 1);
 
-    uri.setUrl(QString("wavi:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
+    uri.setUrl(QString("pptp:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg"));
     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));
     QVERIFY(rv.fUseInstantSend != 1);
 }
diff -r -u ./wavi/src/qt/transactiondesc.cpp ./pptp/src/qt/transactiondesc.cpp
--- ./wavi/src/qt/transactiondesc.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/transactiondesc.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -267,7 +267,7 @@
     strHTML += "<b>" + tr("Transaction ID") + ":</b> " + TransactionRecord::formatSubTxId(wtx.GetHash(), rec->idx) + "<br>";
     strHTML += "<b>" + tr("Transaction total size") + ":</b> " + QString::number(wtx.GetTotalSize()) + " bytes<br>";
 
-    // Message from normal wavi:URI (wavi:XyZ...?message=example)
+    // Message from normal pptp:URI (pptp:XyZ...?message=example)
     Q_FOREACH (const PAIRTYPE(std::string, std::string)& r, wtx.vOrderForm)
         if (r.first == "Message")
             strHTML += "<br><b>" + tr("Message") + ":</b><br>" + GUIUtil::HtmlEscape(r.second, true) + "<br>";
diff -r -u ./wavi/src/qt/transactionrecord.cpp ./pptp/src/qt/transactionrecord.cpp
--- ./wavi/src/qt/transactionrecord.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/transactionrecord.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -63,7 +63,7 @@
                 sub.involvesWatchAddress = mine & ISMINE_WATCH_ONLY;
                 if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))
                 {
-                    // Received by Wavi Address
+                    // Received by Pptp Address
                     sub.type = TransactionRecord::RecvWithAddress;
                     sub.address = CBitcoinAddress(address).ToString();
                 }
@@ -134,7 +134,7 @@
                 CTxDestination address;
                 if (ExtractDestination(wtx.vout[0].scriptPubKey, address))
                 {
-                    // Sent to Wavi Address
+                    // Sent to Pptp Address
                     sub.address = CBitcoinAddress(address).ToString();
                 }
                 else
@@ -187,7 +187,7 @@
                 CTxDestination address;
                 if (ExtractDestination(txout.scriptPubKey, address))
                 {
-                    // Sent to Wavi Address
+                    // Sent to Pptp Address
                     sub.type = TransactionRecord::SendToAddress;
                     sub.address = CBitcoinAddress(address).ToString();
                 }
diff -r -u ./wavi/src/qt/utilitydialog.cpp ./pptp/src/qt/utilitydialog.cpp
--- ./wavi/src/qt/utilitydialog.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/utilitydialog.cpp	Sat Mar 31 23:10:52 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -34,7 +34,7 @@
 {
     ui->setupUi(this);
 
-    QString version = tr("Wavi Core") + " " + tr("version") + " " + QString::fromStdString(FormatFullVersion());
+    QString version = tr("Pptp Core") + " " + tr("version") + " " + QString::fromStdString(FormatFullVersion());
     /* On x86 add a bit specifier to the version so that users can distinguish between
      * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.
      */
@@ -46,7 +46,7 @@
 
     if (helpMode == about)
     {
-        setWindowTitle(tr("About Wavi Core"));
+        setWindowTitle(tr("About Pptp Core"));
 
         /// HTML-format the license message from the core
         QString licenseInfo = QString::fromStdString(LicenseInfo());
@@ -68,7 +68,7 @@
     } else if (helpMode == cmdline) {
         setWindowTitle(tr("Command-line options"));
         QString header = tr("Usage:") + "\n" +
-            "  wavi-qt [" + tr("command-line options") + "]                     " + "\n";
+            "  pptp-qt [" + tr("command-line options") + "]                     " + "\n";
         QTextCursor cursor(ui->helpMessage->document());
         cursor.insertText(version);
         cursor.insertBlock();
@@ -135,13 +135,13 @@
         ui->aboutMessage->setText(tr("\
 <h3>PrivateSend Basics</h3> \
 PrivateSend gives you true financial privacy by obscuring the origins of your funds. \
-All the Wavi in your wallet is comprised of different \"inputs\" which you can think of as separate, discrete coins.<br> \
+All the Pptp in your wallet is comprised of different \"inputs\" which you can think of as separate, discrete coins.<br> \
 PrivateSend uses an innovative process to mix your inputs with the inputs of two other people, without having your coins ever leave your wallet. \
 You retain control of your money at all times..<hr> \
 <b>The PrivateSend process works like this:</b>\
 <ol type=\"1\"> \
 <li>PrivateSend begins by breaking your transaction inputs down into standard denominations. \
-These denominations are 0.01 WAVI, 0.1 WAVI, 1 WAVI and 10 WAVI -- sort of like the paper money you use every day.</li> \
+These denominations are 0.01 PPTP, 0.1 PPTP, 1 PPTP and 10 PPTP -- sort of like the paper money you use every day.</li> \
 <li>Your wallet then sends requests to specially configured software nodes on the network, called \"masternodes.\" \
 These masternodes are informed then that you are interested in mixing a certain denomination. \
 No identifiable information is sent to the masternodes, so they never know \"who\" you are.</li> \
@@ -157,7 +157,7 @@
 This means those 1000 addresses last for about 100 mixing events. When 900 of them are used, your wallet must create more addresses. \
 It can only do this, however, if you have automatic backups enabled.<br> \
 Consequently, users who have backups disabled will also have PrivateSend disabled. <hr>\
-For more info see <a href=\"https://wavipay.atlassian.net/wiki/display/DOC/PrivateSend\">https://wavipay.atlassian.net/wiki/display/DOC/PrivateSend</a> \
+For more info see <a href=\"https://github.com/conan-equal-newone/pptp/blob/master/doc/privatesend.md\">https://github.com/conan-equal-newone/pptp/blob/master/doc/privatesend.md</a> \
         "));
         ui->aboutMessage->setWordWrap(true);
         ui->helpMessage->setVisible(false);
@@ -203,7 +203,7 @@
 {
     QVBoxLayout *layout = new QVBoxLayout();
     layout->addWidget(new QLabel(
-        tr("Wavi Core is shutting down...") + "<br /><br />" +
+        tr("Pptp Core is shutting down...") + "<br /><br />" +
         tr("Do not shut down the computer until this window disappears.")));
     setLayout(layout);
 }
diff -r -u ./wavi/src/qt/walletmodel.cpp ./pptp/src/qt/walletmodel.cpp
--- ./wavi/src/qt/walletmodel.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/walletmodel.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2011-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -263,7 +263,7 @@
             total += subtotal;
         }
         else
-        {   // User-entered wavi address / amount:
+        {   // User-entered pptp address / amount:
             if(!validateAddress(rcp.address))
             {
                 return InvalidAddress;
@@ -307,7 +307,7 @@
         CReserveKey *keyChange = transaction.getPossibleKeyChange();
 
         if(recipients[0].fUseInstantSend && total > sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)*COIN){
-            Q_EMIT message(tr("Send Coins"), tr("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 WAVI.").arg(sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)),
+            Q_EMIT message(tr("Send Coins"), tr("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 PPTP.").arg(sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)),
                          CClientUIInterface::MSG_ERROR);
             return TransactionCreationFailed;
         }
@@ -319,7 +319,7 @@
 
         if(recipients[0].fUseInstantSend) {
             if(newTx->GetValueOut() > sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)*COIN) {
-                Q_EMIT message(tr("Send Coins"), tr("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 WAVI.").arg(sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)),
+                Q_EMIT message(tr("Send Coins"), tr("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 PPTP.").arg(sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)),
                              CClientUIInterface::MSG_ERROR);
                 return TransactionCreationFailed;
             }
@@ -374,7 +374,7 @@
                 rcp.paymentRequest.SerializeToString(&value);
                 newTx->vOrderForm.push_back(make_pair(key, value));
             }
-            else if (!rcp.message.isEmpty()) // Message from normal wavi:URI (wavi:XyZ...?message=example)
+            else if (!rcp.message.isEmpty()) // Message from normal pptp:URI (pptp:XyZ...?message=example)
             {
                 newTx->vOrderForm.push_back(make_pair("Message", rcp.message.toStdString()));
             }
diff -r -u ./wavi/src/qt/walletview.h ./pptp/src/qt/walletview.h
--- ./wavi/src/qt/walletview.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/qt/walletview.h	Sun Mar 25 19:46:14 2018
@@ -122,7 +122,7 @@
     void requestedSyncWarningInfo();
 
 
-    /** Update selected WAVI amount from transactionview */
+    /** Update selected PPTP amount from transactionview */
     void trxAmount(QString amount);
 Q_SIGNALS:
     /** Signal that we want to show the main window */
Only in ./wavi/src/qt: wavi.cpp
Only in ./wavi/src/qt: wavi.qrc
Only in ./wavi/src/qt: wavi_locale.qrc
Only in ./wavi/src/qt: wavistrings.cpp
diff -r -u ./wavi/src/rpc/blockchain.cpp ./pptp/src/rpc/blockchain.cpp
--- ./wavi/src/rpc/blockchain.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/blockchain.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -679,8 +679,8 @@
             "     \"hex\" : \"hex\",        (string) \n"
             "     \"reqSigs\" : n,          (numeric) Number of required signatures\n"
             "     \"type\" : \"pubkeyhash\", (string) The type, eg pubkeyhash\n"
-            "     \"addresses\" : [          (array of string) array of wavi addresses\n"
-            "        \"waviaddress\"     (string) wavi address\n"
+            "     \"addresses\" : [          (array of string) array of pptp addresses\n"
+            "        \"pptpaddress\"     (string) pptp address\n"
             "        ,...\n"
             "     ]\n"
             "  },\n"
diff -r -u ./wavi/src/rpc/client.cpp ./pptp/src/rpc/client.cpp
--- ./wavi/src/rpc/client.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/client.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/rpc/governance.cpp ./pptp/src/rpc/governance.cpp
--- ./wavi/src/rpc/governance.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/governance.cpp	Sun Mar 25 20:14:31 2018
@@ -1,8 +1,8 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
-//#define ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
 
 #include "activemasternode.h"
 #include "governance.h"
@@ -56,7 +56,7 @@
                 "  list               - List governance objects (can be filtered by signal and/or object type)\n"
                 "  diff               - List differences since last diff\n"
                 "  vote-alias         - Vote on a governance object by masternode alias (using masternode.conf setup)\n"
-                "  vote-conf          - Vote on a governance object by masternode configured in wavi.conf\n"
+                "  vote-conf          - Vote on a governance object by masternode configured in pptp.conf\n"
                 "  vote-many          - Vote on a governance object by all masternodes (using masternode.conf setup)\n"
                 );
 
@@ -338,7 +338,7 @@
             nFailed++;
             statusObj.push_back(Pair("result", "failed"));
             statusObj.push_back(Pair("errorMessage", "Can't find masternode by collateral output"));
-            resultsObj.push_back(Pair("wavi.conf", statusObj));
+            resultsObj.push_back(Pair("pptp.conf", statusObj));
             returnObj.push_back(Pair("overall", strprintf("Voted successfully %d time(s) and failed %d time(s).", nSuccessful, nFailed)));
             returnObj.push_back(Pair("detail", resultsObj));
             return returnObj;
@@ -349,7 +349,7 @@
             nFailed++;
             statusObj.push_back(Pair("result", "failed"));
             statusObj.push_back(Pair("errorMessage", "Failure to sign."));
-            resultsObj.push_back(Pair("wavi.conf", statusObj));
+            resultsObj.push_back(Pair("pptp.conf", statusObj));
             returnObj.push_back(Pair("overall", strprintf("Voted successfully %d time(s) and failed %d time(s).", nSuccessful, nFailed)));
             returnObj.push_back(Pair("detail", resultsObj));
             return returnObj;
@@ -366,7 +366,7 @@
             statusObj.push_back(Pair("errorMessage", exception.GetMessage()));
         }
 
-        resultsObj.push_back(Pair("wavi.conf", statusObj));
+        resultsObj.push_back(Pair("pptp.conf", statusObj));
 
         returnObj.push_back(Pair("overall", strprintf("Voted successfully %d time(s) and failed %d time(s).", nSuccessful, nFailed)));
         returnObj.push_back(Pair("detail", resultsObj));
diff -r -u ./wavi/src/rpc/masternode.cpp ./pptp/src/rpc/masternode.cpp
--- ./wavi/src/rpc/masternode.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/masternode.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -472,7 +472,7 @@
                 "  lastpaidblock  - Print the last block height a node was paid on the network\n"
                 "  lastpaidtime   - Print the last time a node was paid on the network\n"
                 "  lastseen       - Print timestamp of when a masternode was last seen on the network\n"
-                "  payee          - Print Wavi address associated with a masternode (can be additionally filtered,\n"
+                "  payee          - Print Pptp address associated with a masternode (can be additionally filtered,\n"
                 "                   partial match)\n"
                 "  protocol       - Print protocol of a masternode (can be additionally filtered, exact match)\n"
                 "  pubkey         - Print the masternode (not collateral) public key\n"
diff -r -u ./wavi/src/rpc/mining.cpp ./pptp/src/rpc/mining.cpp
--- ./wavi/src/rpc/mining.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/mining.cpp	Sun Mar 25 20:38:17 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -297,8 +297,8 @@
             "1. \"txid\"       (string, required) The transaction id.\n"
             "2. priority delta (numeric, required) The priority to add or subtract.\n"
             "                  The transaction selection algorithm considers the tx as it would have a higher priority.\n"
-            "                  (priority of a transaction is calculated: coinage * value_in_puffs / txsize) \n"
-            "3. fee delta      (numeric, required) The fee value (in puffs) to add (or subtract, if negative).\n"
+            "                  (priority of a transaction is calculated: coinage * value_in_pteps / txsize) \n"
+            "3. fee delta      (numeric, required) The fee value (in pteps) to add (or subtract, if negative).\n"
             "                  The fee is not actually paid, only the algorithm for selecting transactions into a block\n"
             "                  considers the transaction as it would have paid a higher (or lower) fee.\n"
             "\nResult\n"
@@ -386,7 +386,7 @@
             "             n                        (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n"
             "             ,...\n"
             "         ],\n"
-            "         \"fee\": n,                   (numeric) difference in value between transaction inputs and outputs (in puffs); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n"
+            "         \"fee\": n,                   (numeric) difference in value between transaction inputs and outputs (in pteps); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n"
             "         \"sigops\" : n,               (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n"
             "         \"required\" : true|false     (boolean) if provided and true, this transaction must be in the final block\n"
             "      }\n"
@@ -395,7 +395,7 @@
             "  \"coinbaseaux\" : {                  (json object) data that should be included in the coinbase's scriptSig content\n"
             "      \"flags\" : \"flags\"            (string) \n"
             "  },\n"
-            "  \"coinbasevalue\" : n,               (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in puffs)\n"
+            "  \"coinbasevalue\" : n,               (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in pteps)\n"
             "  \"coinbasetxn\" : { ... },           (json object) information for coinbase transaction\n"
             "  \"target\" : \"xxxx\",               (string) The hash target\n"
             "  \"mintime\" : xxx,                   (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n"
@@ -505,23 +505,23 @@
         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, "Error: Peer-to-peer functionality missing or disabled");
 
     if (g_connman->GetNodeCount(CConnman::CONNECTIONS_ALL) == 0)
-        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, "Wavi Core is not connected!");
+        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, "Pptp Core is not connected!");
 
     if (IsInitialBlockDownload())
-        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Wavi Core is downloading blocks...");
+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Pptp Core is downloading blocks...");
 
     // when enforcement is on we need information about a masternode payee or otherwise our block is going to be orphaned by the network
     CScript payee;
     if (sporkManager.IsSporkActive(SPORK_8_MASTERNODE_PAYMENT_ENFORCEMENT)
         && !masternodeSync.IsWinnersListSynced()
         && !mnpayments.GetBlockPayee(chainActive.Height() + 1, payee))
-            throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Wavi Core is downloading masternode winners...");
+            throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Pptp Core is downloading masternode winners...");
 
     // next bock is a superblock and we need governance info to correctly construct it
     if (sporkManager.IsSporkActive(SPORK_9_SUPERBLOCKS_ENABLED)
         && !masternodeSync.IsSynced()
         && CSuperblock::IsValidBlockHeight(chainActive.Height() + 1))
-            throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Wavi Core is syncing with network...");
+            throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Pptp Core is syncing with network...");
 
     static unsigned int nTransactionsUpdatedLast;
 
diff -r -u ./wavi/src/rpc/misc.cpp ./pptp/src/rpc/misc.cpp
--- ./wavi/src/rpc/misc.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/misc.cpp	Sun Mar 25 20:38:17 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -56,8 +56,8 @@
             "  \"version\": xxxxx,           (numeric) the server version\n"
             "  \"protocolversion\": xxxxx,   (numeric) the protocol version\n"
             "  \"walletversion\": xxxxx,     (numeric) the wallet version\n"
-            "  \"balance\": xxxxxxx,         (numeric) the total wavi balance of the wallet\n"
-            "  \"privatesend_balance\": xxxxxx, (numeric) the anonymized wavi balance of the wallet\n"
+            "  \"balance\": xxxxxxx,         (numeric) the total pptp balance of the wallet\n"
+            "  \"privatesend_balance\": xxxxxx, (numeric) the anonymized pptp balance of the wallet\n"
             "  \"blocks\": xxxxxx,           (numeric) the current number of blocks processed in the server\n"
             "  \"timeoffset\": xxxxx,        (numeric) the time offset\n"
             "  \"connections\": xxxxx,       (numeric) the number of connections\n"
@@ -123,11 +123,11 @@
         throw runtime_error(
             "debug ( 0|1|addrman|alert|bench|coindb|db|lock|rand|rpc|selectcoins|mempool"
             "|mempoolrej|net|proxy|prune|http|libevent|tor|zmq|"
-            "wavi|privatesend|instantsend|masternode|spork|keepass|mnpayments|gobject )\n"
+            "pptp|privatesend|instantsend|masternode|spork|keepass|mnpayments|gobject )\n"
             "Change debug category on the fly. Specify single category or use comma to specify many.\n"
             "\nExamples:\n"
-            + HelpExampleCli("debug", "wavi")
-            + HelpExampleRpc("debug", "wavi,net")
+            + HelpExampleCli("debug", "pptp")
+            + HelpExampleRpc("debug", "pptp,net")
         );
 
     std::string strMode = params[0].get_str();
@@ -280,14 +280,14 @@
 {
     if (fHelp || params.size() != 1)
         throw runtime_error(
-            "validateaddress \"waviaddress\"\n"
-            "\nReturn information about the given wavi address.\n"
+            "validateaddress \"pptpaddress\"\n"
+            "\nReturn information about the given pptp address.\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"     (string, required) The wavi address to validate\n"
+            "1. \"pptpaddress\"     (string, required) The pptp address to validate\n"
             "\nResult:\n"
             "{\n"
             "  \"isvalid\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\n"
-            "  \"address\" : \"waviaddress\", (string) The wavi address validated\n"
+            "  \"address\" : \"pptpaddress\", (string) The pptp address validated\n"
             "  \"scriptPubKey\" : \"hex\",       (string) The hex encoded scriptPubKey generated by the address\n"
             "  \"ismine\" : true|false,        (boolean) If the address is yours or not\n"
             "  \"iswatchonly\" : true|false,   (boolean) If the address is watchonly\n"
@@ -366,7 +366,7 @@
     {
         const std::string& ks = keys[i].get_str();
 #ifdef ENABLE_WALLET
-        // Case 1: Wavi address and we have full public key:
+        // Case 1: Pptp address and we have full public key:
         CBitcoinAddress address(ks);
         if (pwalletMain && address.IsValid())
         {
@@ -417,9 +417,9 @@
 
             "\nArguments:\n"
             "1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\n"
-            "2. \"keys\"       (string, required) A json array of keys which are wavi addresses or hex-encoded public keys\n"
+            "2. \"keys\"       (string, required) A json array of keys which are pptp addresses or hex-encoded public keys\n"
             "     [\n"
-            "       \"key\"    (string) wavi address or hex-encoded public key\n"
+            "       \"key\"    (string) pptp address or hex-encoded public key\n"
             "       ,...\n"
             "     ]\n"
 
@@ -454,10 +454,10 @@
 {
     if (fHelp || params.size() != 3)
         throw runtime_error(
-            "verifymessage \"waviaddress\" \"signature\" \"message\"\n"
+            "verifymessage \"pptpaddress\" \"signature\" \"message\"\n"
             "\nVerify a signed message\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address to use for the signature.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address to use for the signature.\n"
             "2. \"signature\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\n"
             "3. \"message\"         (string, required) The message that was signed.\n"
             "\nResult:\n"
@@ -609,7 +609,7 @@
             "    \"address\"  (string) The base58check encoded address\n"
             "    \"txid\"  (string) The related txid\n"
             "    \"index\"  (number) The related input or output index\n"
-            "    \"satoshis\"  (number) The difference of puffs\n"
+            "    \"satoshis\"  (number) The difference of pteps\n"
             "    \"timestamp\"  (number) The time the transaction entered the mempool (seconds)\n"
             "    \"prevtxid\"  (string) The previous txid (if spending)\n"
             "    \"prevout\"  (string) The previous transaction output index (if spending)\n"
@@ -681,7 +681,7 @@
             "    \"txid\"  (string) The output txid\n"
             "    \"outputIndex\"  (number) The output index\n"
             "    \"script\"  (string) The script hex encoded\n"
-            "    \"satoshis\"  (number) The number of puffs of the output\n"
+            "    \"satoshis\"  (number) The number of pteps of the output\n"
             "    \"height\"  (number) The block height\n"
             "  }\n"
             "]\n"
@@ -746,7 +746,7 @@
             "\nResult:\n"
             "[\n"
             "  {\n"
-            "    \"satoshis\"  (number) The difference of puffs\n"
+            "    \"satoshis\"  (number) The difference of pteps\n"
             "    \"txid\"  (string) The related txid\n"
             "    \"index\"  (number) The related input or output index\n"
             "    \"blockindex\"  (number) The related block index\n"
@@ -831,8 +831,8 @@
             "}\n"
             "\nResult:\n"
             "{\n"
-            "  \"balance\"  (string) The current balance in puffs\n"
-            "  \"received\"  (string) The total number of puffs received (including change)\n"
+            "  \"balance\"  (string) The current balance in pteps\n"
+            "  \"received\"  (string) The total number of pteps received (including change)\n"
             "}\n"
             "\nExamples:\n"
             + HelpExampleCli("getaddressbalance", "'{\"addresses\": [\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"]}'")
diff -r -u ./wavi/src/rpc/net.cpp ./pptp/src/rpc/net.cpp
--- ./wavi/src/rpc/net.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/net.cpp	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -91,7 +91,7 @@
             "    \"minping\": n,              (numeric) minimum observed ping time (if any at all)\n"
             "    \"pingwait\": n,             (numeric) ping wait (if non-zero)\n"
             "    \"version\": v,              (numeric) The peer version, such as 7001\n"
-            "    \"subver\": \"/Wavi Core:x.x.x/\",  (string) The string version\n"
+            "    \"subver\": \"/Pptp Core:x.x.x/\",  (string) The string version\n"
             "    \"inbound\": true|false,     (boolean) Inbound (true) or Outbound (false)\n"
             "    \"startingheight\": n,       (numeric) The starting height (block) of the peer\n"
             "    \"banscore\": n,             (numeric) The ban score\n"
@@ -271,7 +271,7 @@
             "    \"connected\" : true|false,          (boolean) If connected\n"
             "    \"addresses\" : [                    (list of objects) Only when connected = true\n"
             "       {\n"
-            "         \"address\" : \"192.168.0.201:9999\",  (string) The wavi server IP and port we're connected to\n"
+            "         \"address\" : \"192.168.0.201:9999\",  (string) The pptp server IP and port we're connected to\n"
             "         \"connected\" : \"outbound\"           (string) connection, inbound or outbound\n"
             "       }\n"
             "     ]\n"
@@ -398,7 +398,7 @@
             "\nResult:\n"
             "{\n"
             "  \"version\": xxxxx,                      (numeric) the server version\n"
-            "  \"subversion\": \"/Wavi Core:x.x.x/\",     (string) the server subversion string\n"
+            "  \"subversion\": \"/Pptp Core:x.x.x/\",     (string) the server subversion string\n"
             "  \"protocolversion\": xxxxx,              (numeric) the protocol version\n"
             "  \"localservices\": \"xxxxxxxxxxxxxxxx\", (string) the services we offer to the network\n"
             "  \"localrelay\": true|false,              (bool) true if transaction relay is requested from peers\n"
diff -r -u ./wavi/src/rpc/protocol.cpp ./pptp/src/rpc/protocol.cpp
--- ./wavi/src/rpc/protocol.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/protocol.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/rpc/protocol.h ./pptp/src/rpc/protocol.h
--- ./wavi/src/rpc/protocol.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/protocol.h	Sun Mar 25 19:51:37 2018
@@ -27,7 +27,7 @@
     HTTP_SERVICE_UNAVAILABLE   = 503,
 };
 
-//! Wavi Core RPC error codes
+//! Pptp Core RPC error codes
 enum RPCErrorCode
 {
     //! Standard JSON-RPC 2.0 errors
@@ -57,7 +57,7 @@
     RPC_TRANSACTION_ALREADY_IN_CHAIN= RPC_VERIFY_ALREADY_IN_CHAIN,
 
     //! P2P client errors
-    RPC_CLIENT_NOT_CONNECTED        = -9,  //! Wavi Core is not connected
+    RPC_CLIENT_NOT_CONNECTED        = -9,  //! Pptp Core is not connected
     RPC_CLIENT_IN_INITIAL_DOWNLOAD  = -10, //! Still downloading initial blocks
     RPC_CLIENT_NODE_ALREADY_ADDED   = -23, //! Node is already added
     RPC_CLIENT_NODE_NOT_ADDED       = -24, //! Node has not been added before
diff -r -u ./wavi/src/rpc/rawtransaction.cpp ./pptp/src/rpc/rawtransaction.cpp
--- ./wavi/src/rpc/rawtransaction.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/rawtransaction.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -189,7 +189,7 @@
             "         \"reqSigs\" : n,            (numeric) The required sigs\n"
             "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
             "         \"addresses\" : [           (json array of string)\n"
-            "           \"waviaddress\"        (string) wavi address\n"
+            "           \"pptpaddress\"        (string) pptp address\n"
             "           ,...\n"
             "         ]\n"
             "       }\n"
@@ -378,7 +378,7 @@
             "     ]\n"
             "2. \"outputs\"             (string, required) a json object with outputs\n"
             "    {\n"
-            "      \"address\": x.xxx   (numeric or string, required) The key is the wavi address, the numeric value (can be string) is the " + CURRENCY_UNIT + " amount\n"
+            "      \"address\": x.xxx   (numeric or string, required) The key is the pptp address, the numeric value (can be string) is the " + CURRENCY_UNIT + " amount\n"
             "      \"data\": \"hex\",     (string, required) The key is \"data\", the value is hex encoded data\n"
             "      ...\n"
             "    }\n"
@@ -441,7 +441,7 @@
         } else {
             CBitcoinAddress address(name_);
             if (!address.IsValid())
-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Wavi address: ")+name_);
+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Pptp address: ")+name_);
 
             if (setAddress.count(address))
                 throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+name_);
@@ -496,7 +496,7 @@
             "         \"reqSigs\" : n,            (numeric) The required sigs\n"
             "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
             "         \"addresses\" : [           (json array of string)\n"
-            "           \"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"   (string) Wavi address\n"
+            "           \"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"   (string) Pptp address\n"
             "           ,...\n"
             "         ]\n"
             "       }\n"
@@ -539,7 +539,7 @@
             "  \"type\":\"type\", (string) The output type\n"
             "  \"reqSigs\": n,    (numeric) The required signatures\n"
             "  \"addresses\": [   (json array of string)\n"
-            "     \"address\"     (string) wavi address\n"
+            "     \"address\"     (string) pptp address\n"
             "     ,...\n"
             "  ],\n"
             "  \"p2sh\",\"address\" (string) address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH).\n"
diff -r -u ./wavi/src/rpc/server.cpp ./pptp/src/rpc/server.cpp
--- ./wavi/src/rpc/server.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/server.cpp	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -243,11 +243,11 @@
     if (fHelp || params.size() > 1)
         throw runtime_error(
             "stop\n"
-            "\nStop Wavi Core server.");
+            "\nStop Pptp Core server.");
     // Event loop will exit after current HTTP requests have been handled, so
     // this reply will get back to the client.
     StartShutdown();
-    return "Wavi Core server stopping";
+    return "Pptp Core server stopping";
 }
 
 /**
@@ -343,20 +343,20 @@
     { "hidden",             "resendwallettransactions", &resendwallettransactions, true},
 #endif
 
-    /* Wavi features */
-    { "wavi",               "masternode",             &masternode,             true  },
-    { "wavi",               "masternodelist",         &masternodelist,         true  },
-    { "wavi",               "masternodebroadcast",    &masternodebroadcast,    true  },
-    { "wavi",               "gobject",                &gobject,                true  },
-    { "wavi",               "getgovernanceinfo",      &getgovernanceinfo,      true  },
-    { "wavi",               "getsuperblockbudget",    &getsuperblockbudget,    true  },
-    { "wavi",               "voteraw",                &voteraw,                true  },
-    { "wavi",               "mnsync",                 &mnsync,                 true  },
-    { "wavi",               "spork",                  &spork,                  true  },
-    { "wavi",               "getpoolinfo",            &getpoolinfo,            true  },
-    { "wavi",               "sentinelping",           &sentinelping,           true  },
+    /* Pptp features */
+    { "pptp",               "masternode",             &masternode,             true  },
+    { "pptp",               "masternodelist",         &masternodelist,         true  },
+    { "pptp",               "masternodebroadcast",    &masternodebroadcast,    true  },
+    { "pptp",               "gobject",                &gobject,                true  },
+    { "pptp",               "getgovernanceinfo",      &getgovernanceinfo,      true  },
+    { "pptp",               "getsuperblockbudget",    &getsuperblockbudget,    true  },
+    { "pptp",               "voteraw",                &voteraw,                true  },
+    { "pptp",               "mnsync",                 &mnsync,                 true  },
+    { "pptp",               "spork",                  &spork,                  true  },
+    { "pptp",               "getpoolinfo",            &getpoolinfo,            true  },
+    { "pptp",               "sentinelping",           &sentinelping,           true  },
 #ifdef ENABLE_WALLET
-    { "wavi",               "privatesend",            &privatesend,            false },
+    { "pptp",               "privatesend",            &privatesend,            false },
 
     /* Wallet */
     { "wallet",             "keepass",                &keepass,                true },
@@ -580,7 +580,7 @@
 
 std::string HelpExampleCli(const std::string& methodname, const std::string& args)
 {
-    return "> wavi-cli " + methodname + " " + args + "\n";
+    return "> pptp-cli " + methodname + " " + args + "\n";
 }
 
 std::string HelpExampleRpc(const std::string& methodname, const std::string& args)
diff -r -u ./wavi/src/rpc/server.h ./pptp/src/rpc/server.h
--- ./wavi/src/rpc/server.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/rpc/server.h	Sun Mar 25 19:51:37 2018
@@ -123,7 +123,7 @@
 };
 
 /**
- * Wavi RPC command dispatcher.
+ * Pptp RPC command dispatcher.
  */
 class CRPCTable
 {
Only in ./pptp/src/script: pptpconsensus.cpp
Only in ./pptp/src/script: pptpconsensus.h
Only in ./wavi/src/script: waviconsensus.cpp
Only in ./wavi/src/script: waviconsensus.h
diff -r -u ./wavi/src/sendalert.cpp ./pptp/src/sendalert.cpp
--- ./wavi/src/sendalert.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/sendalert.cpp	Sun Mar 25 20:13:22 2018
@@ -12,8 +12,8 @@
 1. Modify alert parameters below, see alert.* and comments in the code
    for what does what.
 
-2. run wavid with -printalert or -sendalert like this:
-   /path/to/wavid -printalert
+2. run pptpd with -printalert or -sendalert like this:
+   /path/to/pptpd -printalert
 
 One minute after starting up the alert will be broadcast. It is then
 flooded through the network until the nRelayUntil time, and will be
@@ -57,10 +57,10 @@
     //  Higher numbers mean higher priority
     alert.nPriority     = 5000;
     alert.strComment    = "";
-    alert.strStatusBar  = "URGENT: Upgrade required: see Website";
+    alert.strStatusBar  = "URGENT: Upgrade required: see WebSite";
 
     // Set specific client version/versions here. If setSubVer is empty, no filtering on subver is done:
-    // alert.setSubVer.insert(std::string("/Wavi Core:0.12.0.58/"));
+    // alert.setSubVer.insert(std::string("/Pptp Core:0.12.0.58/"));
 
     // Sign
     if(!alert.Sign())
diff -r -u ./wavi/src/spork.cpp ./pptp/src/spork.cpp
--- ./wavi/src/spork.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/spork.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -19,7 +19,7 @@
 
 void CSporkManager::ProcessSpork(CNode* pfrom, std::string& strCommand, CDataStream& vRecv, CConnman& connman)
 {
-    if(fLiteMode) return; // disable all Wavi specific functionality
+    if(fLiteMode) return; // disable all Pptp specific functionality
 
     if (strCommand == NetMsgType::SPORK) {
 
diff -r -u ./wavi/src/spork.h ./pptp/src/spork.h
--- ./wavi/src/spork.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/spork.h	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT/X11 software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -31,7 +31,7 @@
 
 static const int64_t SPORK_2_INSTANTSEND_ENABLED_DEFAULT                = 0;            // ON
 static const int64_t SPORK_3_INSTANTSEND_BLOCK_FILTERING_DEFAULT        = 0;            // ON
-static const int64_t SPORK_5_INSTANTSEND_MAX_VALUE_DEFAULT              = 1000;         // 1000 WAVI
+static const int64_t SPORK_5_INSTANTSEND_MAX_VALUE_DEFAULT              = 1000;         // 1000 PPTP
 static const int64_t SPORK_8_MASTERNODE_PAYMENT_ENFORCEMENT_DEFAULT     = 1522508400ULL;// 2018-04-01 00:00:00
 static const int64_t SPORK_9_SUPERBLOCKS_ENABLED_DEFAULT                = 1522508400ULL;// 2018-04-01 00:00:00
 static const int64_t SPORK_10_MASTERNODE_PAY_UPDATED_NODES_DEFAULT      = 1522508400ULL;// 2018-04-01 00:00:00
diff -r -u ./wavi/src/support/pagelocker.cpp ./pptp/src/support/pagelocker.cpp
--- ./wavi/src/support/pagelocker.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/support/pagelocker.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "support/pagelocker.h"
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #ifdef WIN32
diff -r -u ./wavi/src/test/accounting_tests.cpp ./pptp/src/test/accounting_tests.cpp
--- ./wavi/src/test/accounting_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/accounting_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "wallet/wallet.h"
 #include "wallet/walletdb.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <stdint.h>
 
diff -r -u ./wavi/src/test/addrman_tests.cpp ./pptp/src/test/addrman_tests.cpp
--- ./wavi/src/test/addrman_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/addrman_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -2,7 +2,7 @@
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "addrman.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include <string>
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/alert_tests.cpp ./pptp/src/test/alert_tests.cpp
--- ./wavi/src/test/alert_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/alert_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -14,7 +14,7 @@
 #include "util.h"
 #include "utilstrencodings.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <fstream>
 
@@ -145,7 +145,7 @@
 // - update alerts in GenerateAlertTests() (optional)
 // - enable code below (#if 1)
 // - replace "fffffffffffffffffffffffffffffffffffffffffffffffffff" with the actual MAINNET privkey
-// - recompile and run "/path/to/test_wavi -t Alert_test"
+// - recompile and run "/path/to/test_pptp -t Alert_test"
 //
 // NOTE: make sure to disable code and remove alert privkey when you're done!
 //
diff -r -u ./wavi/src/test/allocator_tests.cpp ./pptp/src/test/allocator_tests.cpp
--- ./wavi/src/test/allocator_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/allocator_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "util.h"
 
 #include "support/allocators/secure.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/arith_uint256_tests.cpp ./pptp/src/test/arith_uint256_tests.cpp
--- ./wavi/src/test/arith_uint256_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/arith_uint256_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -12,7 +12,7 @@
 #include "arith_uint256.h"
 #include <string>
 #include "version.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 BOOST_FIXTURE_TEST_SUITE(arith_uint256_tests, BasicTestingSetup)
 
diff -r -u ./wavi/src/test/base32_tests.cpp ./pptp/src/test/base32_tests.cpp
--- ./wavi/src/test/base32_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/base32_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/base58_tests.cpp ./pptp/src/test/base58_tests.cpp
--- ./wavi/src/test/base58_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/base58_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -13,7 +13,7 @@
 #include "uint256.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/foreach.hpp>
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/base64_tests.cpp ./pptp/src/test/base64_tests.cpp
--- ./wavi/src/test/base64_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/base64_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/bip32_tests.cpp ./pptp/src/test/bip32_tests.cpp
--- ./wavi/src/test/bip32_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/bip32_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include "uint256.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <string>
 #include <vector>
diff -r -u ./wavi/src/test/bip39_tests.cpp ./pptp/src/test/bip39_tests.cpp
--- ./wavi/src/test/bip39_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/bip39_tests.cpp	Sun Mar 25 20:14:31 2018
@@ -1,4 +1,4 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -7,7 +7,7 @@
 #include "key.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "bip39.h"
 
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/bloom_tests.cpp ./pptp/src/test/bloom_tests.cpp
--- ./wavi/src/test/bloom_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/bloom_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -14,7 +14,7 @@
 #include "uint256.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
@@ -492,7 +492,7 @@
         if (rb1.contains(RandomData()))
             ++nHits;
     }
-    // Run test_wavi with --log_level=message to see BOOST_TEST_MESSAGEs:
+    // Run test_pptp with --log_level=message to see BOOST_TEST_MESSAGEs:
     BOOST_TEST_MESSAGE("RollingBloomFilter got " << nHits << " false positives (~100 expected)");
 
     // Insanely unlikely to get a fp count outside this range:
diff -r -u ./wavi/src/test/bswap_tests.cpp ./pptp/src/test/bswap_tests.cpp
--- ./wavi/src/test/bswap_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/bswap_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "compat/byteswap.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/cachemap_tests.cpp ./pptp/src/test/cachemap_tests.cpp
--- ./wavi/src/test/cachemap_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/cachemap_tests.cpp	Sun Mar 25 20:14:31 2018
@@ -1,8 +1,8 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 #include "cachemap.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/cachemultimap_tests.cpp ./pptp/src/test/cachemultimap_tests.cpp
--- ./wavi/src/test/cachemultimap_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/cachemultimap_tests.cpp	Sun Mar 25 20:14:31 2018
@@ -1,8 +1,8 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 #include "cachemultimap.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <algorithm>
 #include <iostream>
diff -r -u ./wavi/src/test/checkblock_tests.cpp ./pptp/src/test/checkblock_tests.cpp
--- ./wavi/src/test/checkblock_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/checkblock_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -6,7 +6,7 @@
 #include "consensus/validation.h"
 #include "validation.h" // For CheckBlock
 #include "primitives/block.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "utiltime.h"
 
 #include <cstdio>
diff -r -u ./wavi/src/test/coins_tests.cpp ./pptp/src/test/coins_tests.cpp
--- ./wavi/src/test/coins_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/coins_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -8,7 +8,7 @@
 #include "uint256.h"
 #include "undo.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "validation.h"
 #include "consensus/validation.h"
 
diff -r -u ./wavi/src/test/compress_tests.cpp ./pptp/src/test/compress_tests.cpp
--- ./wavi/src/test/compress_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/compress_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "compressor.h"
 #include "util.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <stdint.h>
 
diff -r -u ./wavi/src/test/crypto_tests.cpp ./pptp/src/test/crypto_tests.cpp
--- ./wavi/src/test/crypto_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/crypto_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -10,7 +10,7 @@
 #include "crypto/hmac_sha512.h"
 #include "random.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
diff -r -u ./wavi/src/test/data/bitcoin-util-test.json ./pptp/src/test/data/bitcoin-util-test.json
--- ./wavi/src/test/data/bitcoin-util-test.json	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/data/bitcoin-util-test.json	Sun Mar 25 19:44:24 2018
@@ -1,39 +1,39 @@
 [
-  { "exec": "././wavi-tx",
+  { "exec": "././pptp-tx",
     "args": ["-create"],
     "output_cmp": "blanktx.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-"],
     "input": "blanktx.hex",
     "output_cmp": "blanktx.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-", "delin=1"],
     "input": "tx394b54bb.hex",
     "output_cmp": "tt-delin1-out.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-", "delin=31"],
     "input": "tx394b54bb.hex",
     "return_code": 1
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-", "delout=1"],
     "input": "tx394b54bb.hex",
     "output_cmp": "tt-delout1-out.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-", "delout=2"],
     "input": "tx394b54bb.hex",
     "return_code": 1
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-", "locktime=317000"],
     "input": "tx394b54bb.hex",
     "output_cmp": "tt-locktime317000-out.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0",
@@ -43,11 +43,11 @@
      "outaddr=4:XxppMBDQ6SiJrKcBrAy4WkkNdrxDBfzFdZ"],
     "output_cmp": "txcreate1.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args": ["-create", "outscript=0:"],
     "output_cmp": "txcreate2.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=4d49a71ec9da436f71ec4ee231d04f292a29cd316f598bb7068feccabdc59485:0",
@@ -57,21 +57,21 @@
      "outaddr=0.001:XijDvbYpPmznwgpWD3DkdYNfGmRP2KoVSk"],
     "output_cmp": "txcreatesign.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0",
      "outdata=4:badhexdata"],
     "return_code": 1
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0",
      "outdata=badhexdata"],
     "return_code": 1
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0",
@@ -79,7 +79,7 @@
      "outdata=4:54686973204f505f52455455524e207472616e73616374696f6e206f7574707574207761732063726561746564206279206d6f646966696564206372656174657261777472616e73616374696f6e2e"],
     "output_cmp": "txcreatedata1.hex"
   },
-  { "exec": "./wavi-tx",
+  { "exec": "./pptp-tx",
     "args":
     ["-create",
      "in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0",
diff -r -u ./wavi/src/test/data/proposals-invalid.json ./pptp/src/test/data/proposals-invalid.json
--- ./wavi/src/test/data/proposals-invalid.json	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/data/proposals-invalid.json	Sun Mar 25 19:57:56 2018
@@ -1,9 +1,9 @@
 [
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "yYe8KwyaUu5YswSYmB3q3ryx8XTUu9y7Ui", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": " XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "yYe8KwyaUu5YswSYmB3q3ryx8XTUu9y7Ui", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": " XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
 {"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://[::1/foo/bad]/bad"},
 {"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://::12.34.56.78]/"},
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": "25.75", "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
-{"end_epoch": "1491368400", "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": "1474261086", "type": 1, "url": "http://wavicentral.org/dean-miller-5493"}
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": "25.75", "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
+{"end_epoch": "1491368400", "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": "1474261086", "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"}
 ]
diff -r -u ./wavi/src/test/data/proposals-valid.json ./pptp/src/test/data/proposals-valid.json
--- ./wavi/src/test/data/proposals-valid.json	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/data/proposals-valid.json	Sun Mar 25 19:57:56 2018
@@ -1,5 +1,5 @@
 [
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
-{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.12345678, "start_epoch": 1474261086, "type": 1, "url": "http://wavicentral.org/dean-miller-5493"},
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
+{"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.12345678, "start_epoch": 1474261086, "type": 1, "url": "http://pptpcentral.org/dean-miller-5493"},
 {"end_epoch": 1491368400, "name": "dean-miller-5493", "payment_address": "XpG61qAVhdyN7AqVZQsHfJL7AEk4dPVinc", "payment_amount": 25.75, "start_epoch": 1474261086, "type": 1, "url": "http://[dead:beef:cafe:5417:affe:8FA3:deaf:feed]:/foo/"}
 ]
diff -r -u ./wavi/src/test/data/README.md ./pptp/src/test/data/README.md
--- ./wavi/src/test/data/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/data/README.md	Sun Mar 25 19:51:37 2018
@@ -1,7 +1,7 @@
 Description
 ------------
 
-This directory contains data-driven tests for various aspects of Wavi.
+This directory contains data-driven tests for various aspects of Pptp.
 
 License
 --------
diff -r -u ./wavi/src/test/dbwrapper_tests.cpp ./pptp/src/test/dbwrapper_tests.cpp
--- ./wavi/src/test/dbwrapper_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/dbwrapper_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "dbwrapper.h"
 #include "uint256.h"
 #include "random.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/assign/std/vector.hpp> // for 'operator+=()'
 #include <boost/assert.hpp>
diff -r -u ./wavi/src/test/DoS_tests.cpp ./pptp/src/test/DoS_tests.cpp
--- ./wavi/src/test/DoS_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/DoS_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -13,7 +13,7 @@
 #include "serialize.h"
 #include "util.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <stdint.h>
 
diff -r -u ./wavi/src/test/getarg_tests.cpp ./pptp/src/test/getarg_tests.cpp
--- ./wavi/src/test/getarg_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/getarg_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "util.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <string>
 #include <vector>
@@ -21,7 +21,7 @@
       boost::split(vecArg, strArg, boost::is_space(), boost::token_compress_on);
 
     // Insert dummy executable name:
-    vecArg.insert(vecArg.begin(), "testwavi");
+    vecArg.insert(vecArg.begin(), "testpptp");
 
     // Convert to char*:
     std::vector<const char*> vecChar;
@@ -126,7 +126,7 @@
     BOOST_CHECK_EQUAL(GetArg("-bar", 11), 0);
 }
 
-BOOST_AUTO_TEST_CASE(doublewavi)
+BOOST_AUTO_TEST_CASE(doublepptp)
 {
     ResetArgs("--foo");
     BOOST_CHECK_EQUAL(GetBoolArg("-foo", false), true);
diff -r -u ./wavi/src/test/governance_validators_tests.cpp ./pptp/src/test/governance_validators_tests.cpp
--- ./wavi/src/test/governance_validators_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/governance_validators_tests.cpp	Sun Mar 25 20:14:31 2018
@@ -1,10 +1,10 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 #include "governance-validators.h"
 #include "univalue.h"
 #include "utilstrencodings.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/hash_tests.cpp ./pptp/src/test/hash_tests.cpp
--- ./wavi/src/test/hash_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/hash_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "hash.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
diff -r -u ./wavi/src/test/key_tests.cpp ./pptp/src/test/key_tests.cpp
--- ./wavi/src/test/key_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/key_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include "uint256.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <string>
 #include <vector>
diff -r -u ./wavi/src/test/limitedmap_tests.cpp ./pptp/src/test/limitedmap_tests.cpp
--- ./wavi/src/test/limitedmap_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/limitedmap_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "limitedmap.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/main_tests.cpp ./pptp/src/test/main_tests.cpp
--- ./wavi/src/test/main_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/main_tests.cpp	Sun Mar 25 20:14:32 2018
@@ -1,13 +1,13 @@
 // Copyright (c) 2014-2015 The Bitcoin Core developers
 // Distributed under the MIT software license, see the accompanying
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "chainparams.h"
 #include "validation.h"
 #include "net.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/signals2/signal.hpp>
 #include <boost/test/unit_test.hpp>
@@ -16,7 +16,7 @@
 
 static void TestBlockSubsidyHalvings(const Consensus::Params& consensusParams)
 {
-    // tested in wavi_tests.cpp
+    // tested in pptp_tests.cpp
     //int maxHalvings = 64;
     //CAmount nInitialSubsidy = 50 * COIN;
 
@@ -34,7 +34,7 @@
 
 static void TestBlockSubsidyHalvings(int nSubsidyHalvingInterval)
 {
-    // tested in wavi_tests.cpp
+    // tested in pptp_tests.cpp
     //Consensus::Params consensusParams;
     //consensusParams.nSubsidyHalvingInterval = nSubsidyHalvingInterval;
     //TestBlockSubsidyHalvings(consensusParams);
@@ -42,7 +42,7 @@
 
 BOOST_AUTO_TEST_CASE(block_subsidy_test)
 {
-    // tested in wavi_tests.cpp
+    // tested in pptp_tests.cpp
     //TestBlockSubsidyHalvings(Params(CBaseChainParams::MAIN).GetConsensus()); // As in main
     //TestBlockSubsidyHalvings(150); // As in regtest
     //TestBlockSubsidyHalvings(1000); // Just another interval
@@ -50,7 +50,7 @@
 
 BOOST_AUTO_TEST_CASE(subsidy_limit_test)
 {
-    // tested in wavi_tests.cpp
+    // tested in pptp_tests.cpp
     //const Consensus::Params& consensusParams = Params(CBaseChainParams::MAIN).GetConsensus();
     //CAmount nSum = 0;
     //for (int nHeight = 0; nHeight < 14000000; nHeight += 1000) {
diff -r -u ./wavi/src/test/mempool_tests.cpp ./pptp/src/test/mempool_tests.cpp
--- ./wavi/src/test/mempool_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/mempool_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "txmempool.h"
 #include "util.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 #include <list>
diff -r -u ./wavi/src/test/merkle_tests.cpp ./pptp/src/test/merkle_tests.cpp
--- ./wavi/src/test/merkle_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/merkle_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "consensus/merkle.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "random.h"
 
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/miner_tests.cpp ./pptp/src/test/miner_tests.cpp
--- ./wavi/src/test/miner_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/miner_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -17,7 +17,7 @@
 #include "util.h"
 #include "utilstrencodings.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/multisig_tests.cpp ./pptp/src/test/multisig_tests.cpp
--- ./wavi/src/test/multisig_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/multisig_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -10,7 +10,7 @@
 #include "script/interpreter.h"
 #include "script/sign.h"
 #include "uint256.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #ifdef ENABLE_WALLET
 #include "wallet/wallet_ismine.h"
diff -r -u ./wavi/src/test/net_tests.cpp ./pptp/src/test/net_tests.cpp
--- ./wavi/src/test/net_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/net_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -2,7 +2,7 @@
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 #include "addrman.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include <string>
 #include <boost/test/unit_test.hpp>
 #include "hash.h"
diff -r -u ./wavi/src/test/netbase_tests.cpp ./pptp/src/test/netbase_tests.cpp
--- ./wavi/src/test/netbase_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/netbase_tests.cpp	Sun Mar 25 20:14:32 2018
@@ -1,10 +1,10 @@
 // Copyright (c) 2012-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "netbase.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <string>
 
diff -r -u ./wavi/src/test/pmt_tests.cpp ./pptp/src/test/pmt_tests.cpp
--- ./wavi/src/test/pmt_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/pmt_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -10,7 +10,7 @@
 #include "arith_uint256.h"
 #include "version.h"
 #include "random.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
diff -r -u ./wavi/src/test/policyestimator_tests.cpp ./pptp/src/test/policyestimator_tests.cpp
--- ./wavi/src/test/policyestimator_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/policyestimator_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -7,7 +7,7 @@
 #include "uint256.h"
 #include "util.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/pow_tests.cpp ./pptp/src/test/pow_tests.cpp
--- ./wavi/src/test/pow_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/pow_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -7,7 +7,7 @@
 #include "pow.h"
 #include "random.h"
 #include "util.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/prevector_tests.cpp ./pptp/src/test/prevector_tests.cpp
--- ./wavi/src/test/prevector_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/prevector_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include "serialize.h"
 #include "streams.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/ratecheck_tests.cpp ./pptp/src/test/ratecheck_tests.cpp
--- ./wavi/src/test/ratecheck_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/ratecheck_tests.cpp	Sun Mar 25 20:14:32 2018
@@ -1,8 +1,8 @@
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 
 #include "governance.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/README.md ./pptp/src/test/README.md
--- ./wavi/src/test/README.md	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/README.md	Sun Mar 25 19:57:56 2018
@@ -1,13 +1,13 @@
 # Notes
 The sources in this directory are unit test cases.  Boost includes a
-unit testing framework, and since Wavi Core already uses boost, it makes
+unit testing framework, and since Pptp Core already uses boost, it makes
 sense to simply use this framework rather than require developers to
 configure some other framework (we want as few impediments to creating
 unit tests as possible).
 
-The build system is setup to compile an executable called "test_wavi"
+The build system is setup to compile an executable called "test_pptp"
 that runs all of the unit tests.  The main source file is called
-test_wavi.cpp, which simply includes other files that contain the
+test_pptp.cpp, which simply includes other files that contain the
 actual unit tests (outside of a couple required preprocessor
 directives).  The pattern is to create one test file for each class or
 source file for which you want to create unit tests.  The file naming
@@ -22,14 +22,14 @@
 explaining how the boost unit test framework works:
 [http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/](http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/).
 
-test_wavi has some built-in command-line arguments; for
+test_pptp has some built-in command-line arguments; for
 example, to run just the getarg_tests verbosely:
 
-    test_wavi --log_level=all --run_test=getarg_tests
+    test_pptp --log_level=all --run_test=getarg_tests
 
-... or to run just the doublewavi test:
+... or to run just the doublepptp test:
 
-    test_wavi --run_test=getarg_tests/doublewavi
+    test_pptp --run_test=getarg_tests/doublepptp
 
-Run  test_wavi --help   for the full list.
+Run  test_pptp --help   for the full list.
 
diff -r -u ./wavi/src/test/reverselock_tests.cpp ./pptp/src/test/reverselock_tests.cpp
--- ./wavi/src/test/reverselock_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/reverselock_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "reverselock.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/rpc_tests.cpp ./pptp/src/test/rpc_tests.cpp
--- ./wavi/src/test/rpc_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/rpc_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -8,7 +8,7 @@
 #include "base58.h"
 #include "netbase.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/algorithm/string.hpp>
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/rpc_wallet_tests.cpp ./pptp/src/test/rpc_wallet_tests.cpp
--- ./wavi/src/test/rpc_wallet_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/rpc_wallet_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include "validation.h"
 #include "wallet/wallet.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/algorithm/string.hpp>
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/sanity_tests.cpp ./pptp/src/test/sanity_tests.cpp
--- ./wavi/src/test/sanity_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/sanity_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "compat/sanity.h"
 #include "key.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/scheduler_tests.cpp ./pptp/src/test/scheduler_tests.cpp
--- ./wavi/src/test/scheduler_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/scheduler_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "random.h"
 #include "scheduler.h"
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/bind.hpp>
 #include <boost/random/mersenne_twister.hpp>
diff -r -u ./wavi/src/test/script_P2PKH_tests.cpp ./pptp/src/test/script_P2PKH_tests.cpp
--- ./wavi/src/test/script_P2PKH_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/script_P2PKH_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #include "script/script.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/script_P2SH_tests.cpp ./pptp/src/test/script_P2SH_tests.cpp
--- ./wavi/src/test/script_P2SH_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/script_P2SH_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include "script/script.h"
 #include "script/script_error.h"
 #include "script/sign.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #ifdef ENABLE_WALLET
 #include "wallet/wallet_ismine.h"
diff -r -u ./wavi/src/test/script_tests.cpp ./pptp/src/test/script_tests.cpp
--- ./wavi/src/test/script_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/script_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -12,10 +12,10 @@
 #include "script/sign.h"
 #include "util.h"
 #include "utilstrencodings.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #if defined(HAVE_CONSENSUS_LIB)
-#include "script/waviconsensus.h"
+#include "script/pptpconsensus.h"
 #endif
 
 #include <fstream>
@@ -155,7 +155,7 @@
 #if defined(HAVE_CONSENSUS_LIB)
     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);
     stream << tx2;
-    BOOST_CHECK_MESSAGE(waviconsensus_verify_script(begin_ptr(scriptPubKey), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect,message);
+    BOOST_CHECK_MESSAGE(pptpconsensus_verify_script(begin_ptr(scriptPubKey), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect,message);
 #endif
 }
 
diff -r -u ./wavi/src/test/scriptnum_tests.cpp ./pptp/src/test/scriptnum_tests.cpp
--- ./wavi/src/test/scriptnum_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/scriptnum_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "scriptnum10.h"
 #include "script/script.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 #include <limits.h>
diff -r -u ./wavi/src/test/serialize_tests.cpp ./pptp/src/test/serialize_tests.cpp
--- ./wavi/src/test/serialize_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/serialize_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "serialize.h"
 #include "streams.h"
 #include "hash.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <stdint.h>
 
diff -r -u ./wavi/src/test/sighash_tests.cpp ./pptp/src/test/sighash_tests.cpp
--- ./wavi/src/test/sighash_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/sighash_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -11,7 +11,7 @@
 #include "script/script.h"
 #include "serialize.h"
 #include "streams.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "util.h"
 #include "utilstrencodings.h"
 #include "version.h"
diff -r -u ./wavi/src/test/sigopcount_tests.cpp ./pptp/src/test/sigopcount_tests.cpp
--- ./wavi/src/test/sigopcount_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/sigopcount_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -7,7 +7,7 @@
 #include "script/script.h"
 #include "script/standard.h"
 #include "uint256.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
diff -r -u ./wavi/src/test/skiplist_tests.cpp ./pptp/src/test/skiplist_tests.cpp
--- ./wavi/src/test/skiplist_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/skiplist_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "chain.h"
 #include "random.h"
 #include "util.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <vector>
 
diff -r -u ./wavi/src/test/streams_tests.cpp ./pptp/src/test/streams_tests.cpp
--- ./wavi/src/test/streams_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/streams_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "streams.h"
 #include "support/allocators/zeroafterfree.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/assign/std/vector.hpp> // for 'operator+=()'
 #include <boost/assert.hpp>
Only in ./pptp/src/test: test_pptp.cpp
Only in ./pptp/src/test: test_pptp.h
Only in ./wavi/src/test: test_wavi.cpp
Only in ./wavi/src/test: test_wavi.h
diff -r -u ./wavi/src/test/timedata_tests.cpp ./pptp/src/test/timedata_tests.cpp
--- ./wavi/src/test/timedata_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/timedata_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -3,7 +3,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 //
 #include "timedata.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/transaction_tests.cpp ./pptp/src/test/transaction_tests.cpp
--- ./wavi/src/test/transaction_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/transaction_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 
 #include "data/tx_invalid.json.h"
 #include "data/tx_valid.json.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include "clientversion.h"
 #include "consensus/validation.h"
diff -r -u ./wavi/src/test/txvalidationcache_tests.cpp ./pptp/src/test/txvalidationcache_tests.cpp
--- ./wavi/src/test/txvalidationcache_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/txvalidationcache_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -10,7 +10,7 @@
 #include "txmempool.h"
 #include "random.h"
 #include "script/standard.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "utiltime.h"
 
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/test/uint256_tests.cpp ./pptp/src/test/uint256_tests.cpp
--- ./wavi/src/test/uint256_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/uint256_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -4,7 +4,7 @@
 #include "arith_uint256.h"
 #include "uint256.h"
 #include "version.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 #include <stdint.h>
diff -r -u ./wavi/src/test/univalue_tests.cpp ./pptp/src/test/univalue_tests.cpp
--- ./wavi/src/test/univalue_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/univalue_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -7,7 +7,7 @@
 #include <string>
 #include <map>
 #include <univalue.h>
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/test/unit_test.hpp>
 
diff -r -u ./wavi/src/test/util_tests.cpp ./pptp/src/test/util_tests.cpp
--- ./wavi/src/test/util_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/util_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -10,7 +10,7 @@
 #include "sync.h"
 #include "utilstrencodings.h"
 #include "utilmoneystr.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <stdint.h>
 #include <vector>
diff -r -u ./wavi/src/test/versionbits_tests.cpp ./pptp/src/test/versionbits_tests.cpp
--- ./wavi/src/test/versionbits_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/test/versionbits_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -5,7 +5,7 @@
 #include "chain.h"
 #include "random.h"
 #include "versionbits.h"
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 #include "chainparams.h"
 #include "validation.h"
 #include "consensus/params.h"
diff -r -u ./wavi/src/timedata.cpp ./pptp/src/timedata.cpp
--- ./wavi/src/timedata.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/timedata.cpp	Sun Mar 25 19:51:36 2018
@@ -99,7 +99,7 @@
                 if (!fMatch)
                 {
                     fDone = true;
-                    string strMessage = _("Please check that your computer's date and time are correct! If your clock is wrong Wavi Core will not work properly.");
+                    string strMessage = _("Please check that your computer's date and time are correct! If your clock is wrong Pptp Core will not work properly.");
                     strMiscWarning = strMessage;
                     uiInterface.ThreadSafeMessageBox(strMessage, "", CClientUIInterface::MSG_WARNING);
                 }
diff -r -u ./wavi/src/uint256.h ./pptp/src/uint256.h
--- ./wavi/src/uint256.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/uint256.h	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/util.cpp ./pptp/src/util.cpp
--- ./wavi/src/util.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/util.cpp	Sun Mar 25 20:14:31 2018
@@ -1,11 +1,11 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "util.h"
@@ -104,7 +104,7 @@
 
 using namespace std;
 
-//Wavi only features
+//Pptp only features
 bool fMasterNode = false;
 bool fLiteMode = false;
 /**
@@ -116,8 +116,8 @@
 */
 int nWalletBackups = 10;
 
-const char * const BITCOIN_CONF_FILENAME = "wavi.conf";
-const char * const BITCOIN_PID_FILENAME = "wavid.pid";
+const char * const BITCOIN_CONF_FILENAME = "pptp.conf";
+const char * const BITCOIN_PID_FILENAME = "pptpd.pid";
 
 map<string, string> mapArgs;
 map<string, vector<string> > mapMultiArgs;
@@ -271,8 +271,8 @@
             const vector<string>& categories = mapMultiArgs["-debug"];
             ptrCategory.reset(new set<string>(categories.begin(), categories.end()));
             // thread_specific_ptr automatically deletes the set when the thread ends.
-            // "wavi" is a composite category enabling all Wavi-related debug output
-            if(ptrCategory->count(string("wavi"))) {
+            // "pptp" is a composite category enabling all Pptp-related debug output
+            if(ptrCategory->count(string("pptp"))) {
                 ptrCategory->insert(string("privatesend"));
                 ptrCategory->insert(string("instantsend"));
                 ptrCategory->insert(string("masternode"));
@@ -496,7 +496,7 @@
     char pszModule[MAX_PATH] = "";
     GetModuleFileNameA(NULL, pszModule, sizeof(pszModule));
 #else
-    const char* pszModule = "wavi";
+    const char* pszModule = "pptp";
 #endif
     if (pex)
         return strprintf(
@@ -516,13 +516,13 @@
 boost::filesystem::path GetDefaultDataDir()
 {
     namespace fs = boost::filesystem;
-    // Windows < Vista: C:\Documents and Settings\Username\Application Data\WaviCore
-    // Windows >= Vista: C:\Users\Username\AppData\Roaming\WaviCore
-    // Mac: ~/Library/Application Support/WaviCore
-    // Unix: ~/.wavicore
+    // Windows < Vista: C:\Documents and Settings\Username\Application Data\PptpCore
+    // Windows >= Vista: C:\Users\Username\AppData\Roaming\PptpCore
+    // Mac: ~/Library/Application Support/PptpCore
+    // Unix: ~/.pptpcore
 #ifdef WIN32
     // Windows
-    return GetSpecialFolderPath(CSIDL_APPDATA) / "WaviCore";
+    return GetSpecialFolderPath(CSIDL_APPDATA) / "PptpCore";
 #else
     fs::path pathRet;
     char* pszHome = getenv("HOME");
@@ -532,10 +532,10 @@
         pathRet = fs::path(pszHome);
 #ifdef MAC_OSX
     // Mac
-    return pathRet / "Library/Application Support/WaviCore";
+    return pathRet / "Library/Application Support/PptpCore";
 #else
     // Unix
-    return pathRet / ".wavicore";
+    return pathRet / ".pptpcore";
 #endif
 #endif
 }
@@ -629,7 +629,7 @@
 {
     boost::filesystem::ifstream streamConfig(GetConfigFile());
     if (!streamConfig.good()){
-        // Create empty wavi.conf if it does not excist
+        // Create empty pptp.conf if it does not excist
         FILE* configFile = fopen(GetConfigFile().string().c_str(), "a");
         if (configFile != NULL)
             fclose(configFile);
@@ -641,7 +641,7 @@
 
     for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)
     {
-        // Don't overwrite existing settings so command line settings override wavi.conf
+        // Don't overwrite existing settings so command line settings override pptp.conf
         string strKey = string("-") + it->string_key;
         string strValue = it->value[0];
         InterpretNegativeSetting(strKey, strValue);
diff -r -u ./wavi/src/util.h ./pptp/src/util.h
--- ./wavi/src/util.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/util.h	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -12,7 +12,7 @@
 #define BITCOIN_UTIL_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "compat.h"
@@ -34,14 +34,14 @@
 
 // Uncomment the following line to enable debugging messages
 // or enable on a per file basis prior to inclusion of util.h
-//#define ENABLE_WAVI_DEBUG
-#ifdef ENABLE_WAVI_DEBUG
+//#define ENABLE_PPTP_DEBUG
+#ifdef ENABLE_PPTP_DEBUG
 #define DBG( x ) x
 #else
 #define DBG( x ) 
 #endif
 
-//Wavi only features
+//Pptp only features
 
 extern bool fMasterNode;
 extern bool fLiteMode;
@@ -248,7 +248,7 @@
  */
 template <typename Callable> void TraceThread(const char* name,  Callable func)
 {
-    std::string s = strprintf("wavi-%s", name);
+    std::string s = strprintf("pptp-%s", name);
     RenameThread(s.c_str());
     try
     {
diff -r -u ./wavi/src/utiltime.cpp ./pptp/src/utiltime.cpp
--- ./wavi/src/utiltime.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/utiltime.cpp	Sun Mar 25 19:57:55 2018
@@ -4,7 +4,7 @@
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "tinyformat.h"
diff -r -u ./wavi/src/validation.cpp ./pptp/src/validation.cpp
--- ./wavi/src/validation.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/validation.cpp	Sun Mar 25 20:38:15 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -53,7 +53,7 @@
 using namespace std;
 
 #if defined(NDEBUG)
-# error "Wavi Core cannot be compiled without assertions."
+# error "Pptp Core cannot be compiled without assertions."
 #endif
 
 /**
@@ -91,7 +91,7 @@
 
 uint256 hashAssumeValid;
 
-/** Fees smaller than this (in puffs) are considered zero fee (for relaying, mining and transaction creation) */
+/** Fees smaller than this (in pteps) are considered zero fee (for relaying, mining and transaction creation) */
 CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);
 
 CTxMemPool mempool(::minRelayTxFee);
@@ -1864,7 +1864,7 @@
 static CCheckQueue<CScriptCheck> scriptcheckqueue(128);
 
 void ThreadScriptCheck() {
-    RenameThread("wavi-scriptch");
+    RenameThread("pptp-scriptch");
     scriptcheckqueue.Thread();
 }
 
@@ -2216,7 +2216,7 @@
     int64_t nTime3 = GetTimeMicros(); nTimeConnect += nTime3 - nTime2;
     LogPrint("bench", "      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\n", (unsigned)block.vtx.size(), 0.001 * (nTime3 - nTime2), 0.001 * (nTime3 - nTime2) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime3 - nTime2) / (nInputs-1), nTimeConnect * 0.000001);
 
-    // WAVI : MODIFIED TO CHECK MASTERNODE PAYMENTS AND SUPERBLOCKS
+    // PPTP : MODIFIED TO CHECK MASTERNODE PAYMENTS AND SUPERBLOCKS
 
     // It's possible that we simply don't have enough data and this could fail
     // (i.e. block itself could be a correct one and we need to store it),
@@ -2227,15 +2227,15 @@
     CAmount blockReward = nFees + GetBlockSubsidy(pindex->pprev->nBits, pindex->pprev->nHeight, chainparams.GetConsensus());
     std::string strError = "";
     if (!IsBlockValueValid(block, pindex->nHeight, blockReward, strError)) {
-        return state.DoS(0, error("ConnectBlock(WAVI): %s", strError), REJECT_INVALID, "bad-cb-amount");
+        return state.DoS(0, error("ConnectBlock(PPTP): %s", strError), REJECT_INVALID, "bad-cb-amount");
     }
 
     if (!IsBlockPayeeValid(block.vtx[0], pindex->nHeight, blockReward)) {
         mapRejectedBlocks.insert(make_pair(phashdb->GetHash(block), GetTime()));
-        return state.DoS(0, error("ConnectBlock(WAVI): couldn't find masternode or superblock payments"),
+        return state.DoS(0, error("ConnectBlock(PPTP): couldn't find masternode or superblock payments"),
                                 REJECT_INVALID, "bad-cb-payee");
     }
-    // END WAVI
+    // END PPTP
 
     if (!control.Wait())
         return state.DoS(100, false);
@@ -3168,7 +3168,7 @@
                              REJECT_INVALID, "bad-cb-multiple");
 
 
-    // WAVI : CHECK TRANSACTIONS FOR INSTANTSEND
+    // PPTP : CHECK TRANSACTIONS FOR INSTANTSEND
 
     if(sporkManager.IsSporkActive(SPORK_3_INSTANTSEND_BLOCK_FILTERING)) {
         // We should never accept block which conflicts with completed transaction lock,
@@ -3185,17 +3185,17 @@
                     // relaying instantsend data won't help it.
                     LOCK(cs_main);
                     mapRejectedBlocks.insert(make_pair(phashdb->GetHash(block), GetTime()));
-                    return state.DoS(0, error("CheckBlock(WAVI): transaction %s conflicts with transaction lock %s",
+                    return state.DoS(0, error("CheckBlock(PPTP): transaction %s conflicts with transaction lock %s",
                                                 tx.GetHash().ToString(), hashLocked.ToString()),
                                      REJECT_INVALID, "conflict-tx-lock");
                 }
             }
         }
     } else {
-        LogPrintf("CheckBlock(WAVI): spork is off, skipping transaction locking checks\n");
+        LogPrintf("CheckBlock(PPTP): spork is off, skipping transaction locking checks\n");
     }
 
-    // END WAVI
+    // END PPTP
 
     // Check transactions
     BOOST_FOREACH(const CTransaction& tx, block.vtx)
diff -r -u ./wavi/src/validation.h ./pptp/src/validation.h
--- ./wavi/src/validation.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/validation.h	Sun Mar 25 20:14:31 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -8,7 +8,7 @@
 #define BITCOIN_VALIDATION_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include "amount.h"
diff -r -u ./wavi/src/version.h ./pptp/src/version.h
--- ./wavi/src/version.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/version.h	Sun Mar 25 20:14:31 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2012-2014 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
diff -r -u ./wavi/src/wallet/rpcdump.cpp ./pptp/src/wallet/rpcdump.cpp
--- ./wavi/src/wallet/rpcdump.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/rpcdump.cpp	Sun Mar 25 20:14:32 2018
@@ -1,5 +1,5 @@
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -80,10 +80,10 @@
     
     if (fHelp || params.size() < 1 || params.size() > 3)
         throw runtime_error(
-            "importprivkey \"waviprivkey\" ( \"label\" rescan )\n"
+            "importprivkey \"pptpprivkey\" ( \"label\" rescan )\n"
             "\nAdds a private key (as returned by dumpprivkey) to your wallet.\n"
             "\nArguments:\n"
-            "1. \"waviprivkey\"   (string, required) The private key (see dumpprivkey)\n"
+            "1. \"pptpprivkey\"   (string, required) The private key (see dumpprivkey)\n"
             "2. \"label\"            (string, optional, default=\"\") An optional label\n"
             "3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\n"
             "\nNote: This call can take minutes to complete if rescan is true.\n"
@@ -232,7 +232,7 @@
         std::vector<unsigned char> data(ParseHex(params[0].get_str()));
         ImportScript(CScript(data.begin(), data.end()), strLabel, fP2SH);
     } else {
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address or script");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address or script");
     }
 
     if (fRescan)
@@ -550,11 +550,11 @@
     
     if (fHelp || params.size() != 1)
         throw runtime_error(
-            "dumpprivkey \"waviaddress\"\n"
-            "\nReveals the private key corresponding to 'waviaddress'.\n"
+            "dumpprivkey \"pptpaddress\"\n"
+            "\nReveals the private key corresponding to 'pptpaddress'.\n"
             "Then the importprivkey can be used with this output\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"   (string, required) The wavi address for the private key\n"
+            "1. \"pptpaddress\"   (string, required) The pptp address for the private key\n"
             "\nResult:\n"
             "\"key\"                (string) The private key\n"
             "\nExamples:\n"
@@ -570,7 +570,7 @@
     string strAddress = params[0].get_str();
     CBitcoinAddress address;
     if (!address.SetString(strAddress))
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
     CKeyID keyID;
     if (!address.GetKeyID(keyID))
         throw JSONRPCError(RPC_TYPE_ERROR, "Address does not refer to a key");
@@ -665,7 +665,7 @@
     std::sort(vKeyBirth.begin(), vKeyBirth.end());
 
     // produce output
-    file << strprintf("# Wallet dump created by Wavi Core %s (%s)\n", CLIENT_BUILD, CLIENT_DATE);
+    file << strprintf("# Wallet dump created by Pptp Core %s (%s)\n", CLIENT_BUILD, CLIENT_DATE);
     file << strprintf("# * Created on %s\n", EncodeDumpTime(GetTime()));
     file << strprintf("# * Best block at time of backup was %i (%s),\n", chainActive.Height(), chainActive.Tip()->GetBlockHash().ToString());
     file << strprintf("#   mined on %s\n", EncodeDumpTime(chainActive.Tip()->GetBlockTime()));
diff -r -u ./wavi/src/wallet/rpcwallet.cpp ./pptp/src/wallet/rpcwallet.cpp
--- ./wavi/src/wallet/rpcwallet.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/rpcwallet.cpp	Sun Mar 25 20:14:32 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -118,13 +118,13 @@
     if (fHelp || params.size() > 1)
         throw runtime_error(
             "getnewaddress ( \"account\" )\n"
-            "\nReturns a new Wavi address for receiving payments.\n"
+            "\nReturns a new Pptp address for receiving payments.\n"
             "If 'account' is specified (DEPRECATED), it is added to the address book \n"
             "so payments received with the address will be credited to 'account'.\n"
             "\nArguments:\n"
             "1. \"account\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \"\" is used. It can also be set to the empty string \"\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\n"
             "\nResult:\n"
-            "\"waviaddress\"    (string) The new wavi address\n"
+            "\"pptpaddress\"    (string) The new pptp address\n"
             "\nExamples:\n"
             + HelpExampleCli("getnewaddress", "")
             + HelpExampleRpc("getnewaddress", "")
@@ -197,11 +197,11 @@
     if (fHelp || params.size() != 1)
         throw runtime_error(
             "getaccountaddress \"account\"\n"
-            "\nDEPRECATED. Returns the current Wavi address for receiving payments to this account.\n"
+            "\nDEPRECATED. Returns the current Pptp address for receiving payments to this account.\n"
             "\nArguments:\n"
             "1. \"account\"       (string, required) The account name for the address. It can also be set to the empty string \"\" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.\n"
             "\nResult:\n"
-            "\"waviaddress\"   (string) The account wavi address\n"
+            "\"pptpaddress\"   (string) The account pptp address\n"
             "\nExamples:\n"
             + HelpExampleCli("getaccountaddress", "")
             + HelpExampleCli("getaccountaddress", "\"\"")
@@ -229,7 +229,7 @@
     if (fHelp || params.size() > 1)
         throw runtime_error(
             "getrawchangeaddress\n"
-            "\nReturns a new Wavi address, for receiving change.\n"
+            "\nReturns a new Pptp address, for receiving change.\n"
             "This is for use with raw transactions, NOT normal use.\n"
             "\nResult:\n"
             "\"address\"    (string) The address\n"
@@ -263,10 +263,10 @@
 
     if (fHelp || params.size() < 1 || params.size() > 2)
         throw runtime_error(
-            "setaccount \"waviaddress\" \"account\"\n"
+            "setaccount \"pptpaddress\" \"account\"\n"
             "\nDEPRECATED. Sets the account associated with the given address.\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address to be associated with an account.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address to be associated with an account.\n"
             "2. \"account\"         (string, required) The account to assign the address to.\n"
             "\nExamples:\n"
             + HelpExampleCli("setaccount", "\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\" \"tabby\"")
@@ -277,7 +277,7 @@
 
     CBitcoinAddress address(params[0].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
 
     string strAccount;
     if (params.size() > 1)
@@ -309,10 +309,10 @@
 
     if (fHelp || params.size() != 1)
         throw runtime_error(
-            "getaccount \"waviaddress\"\n"
+            "getaccount \"pptpaddress\"\n"
             "\nDEPRECATED. Returns the account associated with the given address.\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address for account lookup.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address for account lookup.\n"
             "\nResult:\n"
             "\"accountname\"        (string) the account address\n"
             "\nExamples:\n"
@@ -324,7 +324,7 @@
 
     CBitcoinAddress address(params[0].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
 
     string strAccount;
     map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());
@@ -347,7 +347,7 @@
             "1. \"account\"  (string, required) The account name.\n"
             "\nResult:\n"
             "[                     (json array of string)\n"
-            "  \"waviaddress\"  (string) a wavi address associated with the given account\n"
+            "  \"pptpaddress\"  (string) a pptp address associated with the given account\n"
             "  ,...\n"
             "]\n"
             "\nExamples:\n"
@@ -385,7 +385,7 @@
     if (pwalletMain->GetBroadcastTransactions() && !g_connman)
         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, "Error: Peer-to-peer functionality missing or disabled");
 
-    // Parse Wavi address
+    // Parse Pptp address
     CScript scriptPubKey = GetScriptForDestination(address);
 
     // Create and send the transaction
@@ -413,11 +413,11 @@
 
     if (fHelp || params.size() < 2 || params.size() > 7)
         throw runtime_error(
-            "sendtoaddress \"waviaddress\" amount ( \"comment\" \"comment-to\" subtractfeefromamount use_is use_ps )\n"
+            "sendtoaddress \"pptpaddress\" amount ( \"comment\" \"comment-to\" subtractfeefromamount use_is use_ps )\n"
             "\nSend an amount to a given address.\n"
             + HelpRequiringPassphrase() +
             "\nArguments:\n"
-            "1. \"waviaddress\" (string, required) The wavi address to send to.\n"
+            "1. \"pptpaddress\" (string, required) The pptp address to send to.\n"
             "2. \"amount\"      (numeric or string, required) The amount in " + CURRENCY_UNIT + " to send. eg 0.1\n"
             "3. \"comment\"     (string, optional) A comment used to store what the transaction is for. \n"
             "                             This is not part of the transaction, just kept in your wallet.\n"
@@ -425,7 +425,7 @@
             "                             to which you're sending the transaction. This is not part of the \n"
             "                             transaction, just kept in your wallet.\n"
             "5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\n"
-            "                             The recipient will receive less amount of Wavi than you enter in the amount field.\n"
+            "                             The recipient will receive less amount of Pptp than you enter in the amount field.\n"
             "6. \"use_is\"      (bool, optional) Send this transaction as InstantSend (default: false)\n"
             "7. \"use_ps\"      (bool, optional) Use anonymized funds only (default: false)\n"
             "\nResult:\n"
@@ -441,7 +441,7 @@
 
     CBitcoinAddress address(params[0].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
 
     // Amount
     CAmount nAmount = AmountFromValue(params[1]);
@@ -480,11 +480,11 @@
 
     if (fHelp || params.size() < 2 || params.size() > 5)
         throw runtime_error(
-            "instantsendtoaddress \"waviaddress\" amount ( \"comment\" \"comment-to\" subtractfeefromamount )\n"
+            "instantsendtoaddress \"pptpaddress\" amount ( \"comment\" \"comment-to\" subtractfeefromamount )\n"
             "\nSend an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001\n"
             + HelpRequiringPassphrase() +
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address to send to.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address to send to.\n"
             "2. \"amount\"      (numeric, required) The amount in btc to send. eg 0.1\n"
             "3. \"comment\"     (string, optional) A comment used to store what the transaction is for. \n"
             "                             This is not part of the transaction, just kept in your wallet.\n"
@@ -492,7 +492,7 @@
             "                             to which you're sending the transaction. This is not part of the \n"
             "                             transaction, just kept in your wallet.\n"
             "5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\n"
-            "                             The recipient will receive less amount of Wavi than you enter in the amount field.\n"
+            "                             The recipient will receive less amount of Pptp than you enter in the amount field.\n"
             "\nResult:\n"
             "\"transactionid\"  (string) The transaction id.\n"
             "\nExamples:\n"
@@ -506,7 +506,7 @@
 
     CBitcoinAddress address(params[0].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
 
     // Amount
     CAmount nAmount = AmountFromValue(params[1]);
@@ -546,7 +546,7 @@
             "[\n"
             "  [\n"
             "    [\n"
-            "      \"waviaddress\",     (string) The wavi address\n"
+            "      \"pptpaddress\",     (string) The pptp address\n"
             "      amount,                 (numeric) The amount in " + CURRENCY_UNIT + "\n"
             "      \"account\"             (string, optional) The account (DEPRECATED)\n"
             "    ]\n"
@@ -589,11 +589,11 @@
 
     if (fHelp || params.size() != 2)
         throw runtime_error(
-            "signmessage \"waviaddress\" \"message\"\n"
+            "signmessage \"pptpaddress\" \"message\"\n"
             "\nSign a message with the private key of an address"
             + HelpRequiringPassphrase() + "\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address to use for the private key.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address to use for the private key.\n"
             "2. \"message\"         (string, required) The message to create a signature of.\n"
             "\nResult:\n"
             "\"signature\"          (string) The signature of the message encoded in base 64\n"
@@ -645,10 +645,10 @@
 
     if (fHelp || params.size() < 1 || params.size() > 3)
         throw runtime_error(
-            "getreceivedbyaddress \"waviaddress\" ( minconf addlockconf )\n"
-            "\nReturns the total amount received by the given waviaddress in transactions with specified minimum number of confirmations.\n"
+            "getreceivedbyaddress \"pptpaddress\" ( minconf addlockconf )\n"
+            "\nReturns the total amount received by the given pptpaddress in transactions with specified minimum number of confirmations.\n"
             "\nArguments:\n"
-            "1. \"waviaddress\"  (string, required) The wavi address for transactions.\n"
+            "1. \"pptpaddress\"  (string, required) The pptp address for transactions.\n"
             "2. minconf        (numeric, optional, default=1) Only include transactions confirmed at least this many times.\n"
             "3. addlockconf    (bool, optional, default=false) Whether to add " + std::to_string(nInstantSendDepth) + " confirmations to transactions locked via InstantSend.\n"
             "\nResult:\n"
@@ -666,10 +666,10 @@
 
     LOCK2(cs_main, pwalletMain->cs_wallet);
 
-    // Wavi address
+    // Pptp address
     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
     CScript scriptPubKey = GetScriptForDestination(address.Get());
     if (!IsMine(*pwalletMain, scriptPubKey))
         return ValueFromAmount(0);
@@ -962,12 +962,12 @@
 
     if (fHelp || params.size() < 3 || params.size() > 7)
         throw runtime_error(
-            "sendfrom \"fromaccount\" \"towaviaddress\" amount ( minconf addlockconf \"comment\" \"comment-to\" )\n"
-            "\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a wavi address."
+            "sendfrom \"fromaccount\" \"topptpaddress\" amount ( minconf addlockconf \"comment\" \"comment-to\" )\n"
+            "\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a pptp address."
             + HelpRequiringPassphrase() + "\n"
             "\nArguments:\n"
             "1. \"fromaccount\"    (string, required) The name of the account to send funds from. May be the default account using \"\".\n"
-            "2. \"towaviaddress\"  (string, required) The wavi address to send funds to.\n"
+            "2. \"topptpaddress\"  (string, required) The pptp address to send funds to.\n"
             "3. amount           (numeric or string, required) The amount in " + CURRENCY_UNIT + " (transaction fee is added on top).\n"
             "4. minconf          (numeric, optional, default=1) Only use funds with at least this many confirmations.\n"
             "5. addlockconf      (bool, optional, default=false) Whether to add " + std::to_string(nInstantSendDepth) + " confirmations to transactions locked via InstantSend.\n"
@@ -992,7 +992,7 @@
     string strAccount = AccountFromValue(params[0]);
     CBitcoinAddress address(params[1].get_str());
     if (!address.IsValid())
-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Wavi address");
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Pptp address");
     CAmount nAmount = AmountFromValue(params[2]);
     if (nAmount <= 0)
         throw JSONRPCError(RPC_TYPE_ERROR, "Invalid amount for send");
@@ -1035,7 +1035,7 @@
             "1. \"fromaccount\"           (string, required) DEPRECATED. The account to send the funds from. Should be \"\" for the default account\n"
             "2. \"amounts\"               (string, required) A json object with addresses and amounts\n"
             "    {\n"
-            "      \"address\":amount     (numeric or string) The wavi address is the key, the numeric amount (can be string) in " + CURRENCY_UNIT + " is the value\n"
+            "      \"address\":amount     (numeric or string) The pptp address is the key, the numeric amount (can be string) in " + CURRENCY_UNIT + " is the value\n"
             "      ,...\n"
             "    }\n"
             "3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\n"
@@ -1043,7 +1043,7 @@
             "5. \"comment\"               (string, optional) A comment\n"
             "6. subtractfeefromamount   (string, optional) A json array with addresses.\n"
             "                           The fee will be equally deducted from the amount of each selected address.\n"
-            "                           Those recipients will receive less wavis than you enter in their corresponding amount field.\n"
+            "                           Those recipients will receive less pptps than you enter in their corresponding amount field.\n"
             "                           If no addresses are specified here, the sender pays the fee.\n"
             "    [\n"
             "      \"address\"            (string) Subtract fee from this address\n"
@@ -1093,7 +1093,7 @@
     {
         CBitcoinAddress address(name_);
         if (!address.IsValid())
-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Wavi address: ")+name_);
+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Pptp address: ")+name_);
 
         if (setAddress.count(address))
             throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+name_);
@@ -1157,20 +1157,20 @@
     {
         string msg = "addmultisigaddress nrequired [\"key\",...] ( \"account\" )\n"
             "\nAdd a nrequired-to-sign multisignature address to the wallet.\n"
-            "Each key is a Wavi address or hex-encoded public key.\n"
+            "Each key is a Pptp address or hex-encoded public key.\n"
             "If 'account' is specified (DEPRECATED), assign address to that account.\n"
 
             "\nArguments:\n"
             "1. nrequired        (numeric, required) The number of required signatures out of the n keys or addresses.\n"
-            "2. \"keysobject\"   (string, required) A json array of wavi addresses or hex-encoded public keys\n"
+            "2. \"keysobject\"   (string, required) A json array of pptp addresses or hex-encoded public keys\n"
             "     [\n"
-            "       \"address\"  (string) wavi address or hex-encoded public key\n"
+            "       \"address\"  (string) pptp address or hex-encoded public key\n"
             "       ...,\n"
             "     ]\n"
             "3. \"account\"      (string, optional) DEPRECATED. An account to assign the addresses to.\n"
 
             "\nResult:\n"
-            "\"waviaddress\"  (string) A wavi address associated with the keys.\n"
+            "\"pptpaddress\"  (string) A pptp address associated with the keys.\n"
 
             "\nExamples:\n"
             "\nAdd a multisig address from 2 addresses\n"
@@ -1534,7 +1534,7 @@
             "  {\n"
             "    \"account\":\"accountname\",  (string) DEPRECATED. The account name associated with the transaction. \n"
             "                                                It will be \"\" for the default account.\n"
-            "    \"address\":\"waviaddress\",  (string) The wavi address of the transaction. Not present for \n"
+            "    \"address\":\"pptpaddress\",  (string) The pptp address of the transaction. Not present for \n"
             "                                                move transactions (category = move).\n"
             "    \"category\":\"send|receive|move\", (string) The transaction category. 'move' is a local (off blockchain)\n"
             "                                                transaction between accounts, and not associated with an address,\n"
@@ -1740,7 +1740,7 @@
             "{\n"
             "  \"transactions\": [\n"
             "    \"account\":\"accountname\",  (string) DEPRECATED. The account name associated with the transaction. Will be \"\" for the default account.\n"
-            "    \"address\":\"waviaddress\",  (string) The wavi address of the transaction. Not present for move transactions (category = move).\n"
+            "    \"address\":\"pptpaddress\",  (string) The pptp address of the transaction. Not present for move transactions (category = move).\n"
             "    \"category\":\"send|receive\",  (string) The transaction category. 'send' has negative amounts, 'receive' has positive amounts.\n"
             "    \"amount\": x.xxx,          (numeric) The amount in " + CURRENCY_UNIT + ". This is negative for the 'send' category, and for the 'move' category for moves \n"
             "                                          outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.\n"
@@ -1846,7 +1846,7 @@
             "  \"details\" : [\n"
             "    {\n"
             "      \"account\" : \"accountname\",      (string) DEPRECATED. The account name involved in the transaction, can be \"\" for the default account.\n"
-            "      \"address\" : \"waviaddress\",      (string) The wavi address involved in the transaction\n"
+            "      \"address\" : \"pptpaddress\",      (string) The pptp address involved in the transaction\n"
             "      \"category\" : \"send|receive\",    (string) The category, either 'send' or 'receive'\n"
             "      \"amount\" : x.xxx,               (numeric) The amount in " + CURRENCY_UNIT + "\n"
             "      \"label\" : \"label\",              (string) A comment for the address/transaction, if any\n"
@@ -2013,7 +2013,7 @@
         throw runtime_error(
             "walletpassphrase \"passphrase\" timeout ( mixingonly )\n"
             "\nStores the wallet decryption key in memory for 'timeout' seconds.\n"
-            "This is needed prior to performing transactions related to private keys such as sending wavis\n"
+            "This is needed prior to performing transactions related to private keys such as sending pptps\n"
             "\nArguments:\n"
             "1. \"passphrase\"        (string, required) The wallet passphrase\n"
             "2. timeout             (numeric, required) The time to keep the decryption key in seconds.\n"
@@ -2175,10 +2175,10 @@
             "\nExamples:\n"
             "\nEncrypt you wallet\n"
             + HelpExampleCli("encryptwallet", "\"my pass phrase\"") +
-            "\nNow set the passphrase to use the wallet, such as for signing or sending wavi\n"
+            "\nNow set the passphrase to use the wallet, such as for signing or sending pptp\n"
             + HelpExampleCli("walletpassphrase", "\"my pass phrase\"") +
             "\nNow we can so something like sign\n"
-            + HelpExampleCli("signmessage", "\"waviaddress\" \"test message\"") +
+            + HelpExampleCli("signmessage", "\"pptpaddress\" \"test message\"") +
             "\nNow lock the wallet again by removing the passphrase\n"
             + HelpExampleCli("walletlock", "") +
             "\nAs a json rpc call\n"
@@ -2210,7 +2210,7 @@
     // slack space in .dat files; that is bad if the old data is
     // unencrypted private keys. So:
     StartShutdown();
-    return "Wallet encrypted; Wavi Core server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.";
+    return "Wallet encrypted; Pptp Core server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.";
 }
 
 UniValue lockunspent(const UniValue& params, bool fHelp)
@@ -2223,7 +2223,7 @@
             "lockunspent unlock [{\"txid\":\"txid\",\"vout\":n},...]\n"
             "\nUpdates list of temporarily unspendable outputs.\n"
             "Temporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.\n"
-            "A locked transaction output will not be chosen by automatic coin selection, when spending wavis.\n"
+            "A locked transaction output will not be chosen by automatic coin selection, when spending pptps.\n"
             "Locks are stored in memory only. Nodes start with zero locked outputs, and the locked output list\n"
             "is always cleared (by virtue of process exit) when a node stops or fails.\n"
             "Also see the listunspent call\n"
@@ -2546,9 +2546,9 @@
             "\nArguments:\n"
             "1. minconf          (numeric, optional, default=1) The minimum confirmations to filter\n"
             "2. maxconf          (numeric, optional, default=9999999) The maximum confirmations to filter\n"
-            "3. \"addresses\"      (string) A json array of wavi addresses to filter\n"
+            "3. \"addresses\"      (string) A json array of pptp addresses to filter\n"
             "    [\n"
-            "      \"address\"     (string) wavi address\n"
+            "      \"address\"     (string) pptp address\n"
             "      ,...\n"
             "    ]\n"
             "\nResult\n"
@@ -2556,7 +2556,7 @@
             "  {\n"
             "    \"txid\" : \"txid\",          (string) the transaction id \n"
             "    \"vout\" : n,               (numeric) the vout value\n"
-            "    \"address\" : \"address\",    (string) the wavi address\n"
+            "    \"address\" : \"address\",    (string) the pptp address\n"
             "    \"account\" : \"account\",    (string) DEPRECATED. The associated account, or \"\" for the default account\n"
             "    \"scriptPubKey\" : \"key\",   (string) the script key\n"
             "    \"amount\" : x.xxx,         (numeric) the transaction amount in " + CURRENCY_UNIT + "\n"
@@ -2591,7 +2591,7 @@
             const UniValue& input = inputs[idx];
             CBitcoinAddress address(input.get_str());
             if (!address.IsValid())
-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Wavi address: ")+input.get_str());
+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Pptp address: ")+input.get_str());
             if (setAddress.count(address))
                 throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+input.get_str());
            setAddress.insert(address);
diff -r -u ./wavi/src/wallet/test/wallet_tests.cpp ./pptp/src/wallet/test/wallet_tests.cpp
--- ./wavi/src/wallet/test/wallet_tests.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/test/wallet_tests.cpp	Sun Mar 25 19:57:56 2018
@@ -9,7 +9,7 @@
 #include <utility>
 #include <vector>
 
-#include "test/test_wavi.h"
+#include "test/test_pptp.h"
 
 #include <boost/foreach.hpp>
 #include <boost/test/unit_test.hpp>
diff -r -u ./wavi/src/wallet/wallet.cpp ./pptp/src/wallet/wallet.cpp
--- ./wavi/src/wallet/wallet.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/wallet.cpp	Sun Mar 25 20:38:17 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -49,7 +49,7 @@
 bool fSendFreeTransactions = DEFAULT_SEND_FREE_TRANSACTIONS;
 
 /** 
- * Fees smaller than this (in puffs) are considered zero fee (for transaction creation)
+ * Fees smaller than this (in pteps) are considered zero fee (for transaction creation)
  * Override with -mintxfee
  */
 CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);
@@ -2760,10 +2760,10 @@
     std::random_shuffle(vCoins.rbegin(), vCoins.rend(), GetRandInt);
 
     // ( bit on if present )
-    // bit 0 - 100WAVI+1
-    // bit 1 - 10WAVI+1
-    // bit 2 - 1WAVI+1
-    // bit 3 - .1WAVI+1
+    // bit 0 - 100PPTP+1
+    // bit 1 - 10PPTP+1
+    // bit 2 - 1PPTP+1
+    // bit 3 - .1PPTP+1
 
     std::vector<int> vecBits;
     if (!CPrivateSend::GetDenominationsBits(nDenom, vecBits)) {
@@ -3282,7 +3282,7 @@
                     return false;
                 }
                 if (fUseInstantSend && nValueIn > sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE)*COIN) {
-                    strFailReason += " " + strprintf(_("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 WAVI."), sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE));
+                    strFailReason += " " + strprintf(_("InstantSend doesn't support sending values that high yet. Transactions are currently limited to %1 PPTP."), sporkManager.GetSporkValue(SPORK_5_INSTANTSEND_MAX_VALUE));
                     return false;
                 }
 
@@ -3316,7 +3316,7 @@
 
                         // Fill a vout to ourself
                         // TODO: pass in scriptChange instead of reservekey so
-                        // change transaction isn't always pay-to-wavi-address
+                        // change transaction isn't always pay-to-pptp-address
                         CScript scriptChange;
 
                         // coin control: send change to custom address
diff -r -u ./wavi/src/wallet/wallet.h ./pptp/src/wallet/wallet.h
--- ./wavi/src/wallet/wallet.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/wallet.h	Sun Mar 25 20:14:32 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -772,7 +772,7 @@
 
     bool SelectCoinsGrouppedByAddresses(std::vector<CompactTallyItem>& vecTallyRet, bool fSkipDenominated = true, bool fAnonymizable = true, bool fSkipUnconfirmed = true) const;
 
-    /// Get 1000WAVI output and keys which can be used for the Masternode
+    /// Get 1000PPTP output and keys which can be used for the Masternode
     bool GetMasternodeOutpointAndKeys(COutPoint& outpointRet, CPubKey& pubKeyRet, CKey& keyRet, std::string strTxHash = "", std::string strOutputIndex = "");
     /// Extract txin information and keys from output
     bool GetOutpointAndKeysFromOutput(const COutput& out, COutPoint& outpointRet, CPubKey& pubKeyRet, CKey& keyRet);
diff -r -u ./wavi/src/wallet/walletdb.cpp ./pptp/src/wallet/walletdb.cpp
--- ./wavi/src/wallet/walletdb.cpp	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/wallet/walletdb.cpp	Sun Mar 25 20:14:32 2018
@@ -1,6 +1,6 @@
 // Copyright (c) 2009-2010 Satoshi Nakamoto
 // Copyright (c) 2009-2015 The Bitcoin Core developers
-// Copyright (c) 2014-2017 The Wavi Core developers
+// Copyright (c) 2018-2018 The Pptp Core developers
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
@@ -842,7 +842,7 @@
 void ThreadFlushWalletDB(const string& strFile)
 {
     // Make this thread recognisable as the wallet flushing thread
-    RenameThread("wavi-wallet");
+    RenameThread("pptp-wallet");
 
     static bool fOneThread;
     if (fOneThread)
Only in ./wavi/src: wavi-cli-res.rc
Only in ./wavi/src: wavi-cli.cpp
Only in ./wavi/src: wavi-tx-res.rc
Only in ./wavi/src: wavi-tx.cpp
Only in ./wavi/src: wavid-res.rc
Only in ./wavi/src: wavid.cpp
diff -r -u ./wavi/src/zmq/zmqconfig.h ./pptp/src/zmq/zmqconfig.h
--- ./wavi/src/zmq/zmqconfig.h	Sat Mar 31 23:24:23 2018
+++ ./pptp/src/zmq/zmqconfig.h	Sun Mar 25 19:57:56 2018
@@ -6,7 +6,7 @@
 #define BITCOIN_ZMQ_ZMQCONFIG_H
 
 #if defined(HAVE_CONFIG_H)
-#include "config/wavi-config.h"
+#include "config/pptp-config.h"
 #endif
 
 #include <stdarg.h>
Only in ./wavi: wabi-docs
